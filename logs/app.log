{"@timestamp":"2025-09-14T16:39:49.8142239-03:00","@version":"1","message":"Starting JacksonConfigTest using Java 21.0.5 with PID 12688 (started by flavi in C:\\Users\\flavi\\Downloads\\desafio-backend\\desafio-backend)","logger_name":"com.simplesdental.product.config.JacksonConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T16:39:49.823222-03:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.simplesdental.product.config.JacksonConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T16:39:50.4983844-03:00","@version":"1","message":"Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.support.BeanDefinitionOverrideException: Invalid bean definition with name 'conventionErrorViewResolver' defined in class path resource [org/springframework/boot/webmvc/autoconfigure/error/ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration.class]: Cannot register bean definition [Root bean: class [null]; scope=; abstract=false; lazyInit=null; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.webmvc.autoconfigure.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration; factoryMethodName=conventionErrorViewResolver; initMethodNames=null; destroyMethodNames=[(inferred)]; defined in class path resource [org/springframework/boot/webmvc/autoconfigure/error/ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration.class]] for bean 'conventionErrorViewResolver' since there is already [Root bean: class [null]; scope=; abstract=false; lazyInit=null; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration; factoryMethodName=conventionErrorViewResolver; initMethodNames=null; destroyMethodNames=[(inferred)]; defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/error/ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration.class]] bound.","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T16:39:50.5051609-03:00","@version":"1","message":"\r\n\r\nError starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.","logger_name":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T16:39:50.5241603-03:00","@version":"1","message":"\r\n\r\n***************************\r\nAPPLICATION FAILED TO START\r\n***************************\r\n\r\nDescription:\r\n\r\nThe bean 'conventionErrorViewResolver', defined in class path resource [org/springframework/boot/webmvc/autoconfigure/error/ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration.class], could not be registered. A bean with that name has already been defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/error/ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration.class] and overriding is disabled.\r\n\r\nAction:\r\n\r\nConsider renaming one of the beans or enabling overriding by setting spring.main.allow-bean-definition-overriding=true\r\n","logger_name":"org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter","thread_name":"main","level":"ERROR","level_value":40000}
{"@timestamp":"2025-09-14T16:39:50.5281632-03:00","@version":"1","message":"Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] to prepare test instance [com.simplesdental.product.config.JacksonConfigTest@38fb50f8]","logger_name":"org.springframework.test.context.TestContextManager","thread_name":"main","level":"WARN","level_value":30000,"stack_trace":"java.lang.IllegalStateException: Failed to load ApplicationContext for [WebMergedContextConfiguration@6cbb175 testClass = com.simplesdental.product.config.JacksonConfigTest, locations = [], classes = [com.simplesdental.product.ProductApplication], contextInitializerClasses = [], activeProfiles = [], propertySourceDescriptors = [], propertySourceProperties = [\"org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true\"], contextCustomizers = [org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2ad48653, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@61710c6, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@76b07f29, org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@c667f46, org.springframework.boot.test.context.SpringBootTestAnnotation@1e0b55c2], resourceBasePath = \"src/main/webapp\", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:180)\r\n\tat org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)\r\n\tat org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)\r\n\tat org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)\r\n\tat org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)\r\n\tat org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)\r\n\tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)\r\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\r\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\r\n\tat java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)\r\n\tat java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)\r\n\tat java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)\r\n\tat java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)\r\n\tat java.base/java.util.Optional.orElseGet(Optional.java:364)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)\r\n\tat org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)\r\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)\r\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)\r\n\tat org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)\r\n\tat org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)\r\n\tat com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)\r\n\tat com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)\r\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)\r\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)\r\nCaused by: org.springframework.beans.factory.support.BeanDefinitionOverrideException: Invalid bean definition with name 'conventionErrorViewResolver' defined in class path resource [org/springframework/boot/webmvc/autoconfigure/error/ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration.class]: Cannot register bean definition [Root bean: class [null]; scope=; abstract=false; lazyInit=null; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.webmvc.autoconfigure.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration; factoryMethodName=conventionErrorViewResolver; initMethodNames=null; destroyMethodNames=[(inferred)]; defined in class path resource [org/springframework/boot/webmvc/autoconfigure/error/ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration.class]] for bean 'conventionErrorViewResolver' since there is already [Root bean: class [null]; scope=; abstract=false; lazyInit=null; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration; factoryMethodName=conventionErrorViewResolver; initMethodNames=null; destroyMethodNames=[(inferred)]; defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/error/ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration.class]] bound.\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(DefaultListableBeanFactory.java:1017)\r\n\tat org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForBeanMethod(ConfigurationClassBeanDefinitionReader.java:277)\r\n\tat org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForConfigurationClass(ConfigurationClassBeanDefinitionReader.java:144)\r\n\tat org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitions(ConfigurationClassBeanDefinitionReader.java:120)\r\n\tat org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:428)\r\n\tat org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:289)\r\n\tat org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:349)\r\n\tat org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:118)\r\n\tat org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:788)\r\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:606)\r\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)\r\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:334)\r\n\tat org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)\r\n\tat org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)\r\n\tat org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)\r\n\tat org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1454)\r\n\tat org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:553)\r\n\tat org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)\r\n\tat org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)\r\n\t... 72 common frames omitted\r\n"}
{"@timestamp":"2025-09-14T16:41:23.541915-03:00","@version":"1","message":"Starting JacksonConfigTest using Java 21.0.5 with PID 32708 (started by flavi in C:\\Users\\flavi\\Downloads\\desafio-backend\\desafio-backend)","logger_name":"com.simplesdental.product.config.JacksonConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T16:41:23.5499136-03:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.simplesdental.product.config.JacksonConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T16:41:24.1667712-03:00","@version":"1","message":"Exception encountered during context initialization - cancelling refresh attempt: java.lang.IllegalStateException: Error processing condition on org.springframework.boot.webmvc.autoconfigure.error.ErrorMvcAutoConfiguration.basicErrorController","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T16:41:24.1727698-03:00","@version":"1","message":"\r\n\r\nError starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.","logger_name":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T16:41:24.1912111-03:00","@version":"1","message":"Application run failed","logger_name":"org.springframework.boot.SpringApplication","thread_name":"main","level":"ERROR","level_value":40000,"stack_trace":"java.lang.IllegalStateException: Error processing condition on org.springframework.boot.webmvc.autoconfigure.error.ErrorMvcAutoConfiguration.basicErrorController\r\n\tat org.springframework.boot.autoconfigure.condition.SpringBootCondition.matches(SpringBootCondition.java:60)\r\n\tat org.springframework.context.annotation.ConditionEvaluator.shouldSkip(ConditionEvaluator.java:108)\r\n\tat org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForBeanMethod(ConfigurationClassBeanDefinitionReader.java:183)\r\n\tat org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForConfigurationClass(ConfigurationClassBeanDefinitionReader.java:144)\r\n\tat org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitions(ConfigurationClassBeanDefinitionReader.java:120)\r\n\tat org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:428)\r\n\tat org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:289)\r\n\tat org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:349)\r\n\tat org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:118)\r\n\tat org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:788)\r\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:606)\r\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)\r\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:334)\r\n\tat org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)\r\n\tat org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)\r\n\tat org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)\r\n\tat org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1454)\r\n\tat org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:553)\r\n\tat org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)\r\n\tat org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)\r\n\tat org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)\r\n\tat org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)\r\n\tat org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)\r\n\tat org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)\r\n\tat org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)\r\n\tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)\r\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\r\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\r\n\tat java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)\r\n\tat java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)\r\n\tat java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)\r\n\tat java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)\r\n\tat java.base/java.util.Optional.orElseGet(Optional.java:364)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)\r\n\tat org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)\r\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)\r\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)\r\n\tat org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)\r\n\tat org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)\r\n\tat com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)\r\n\tat com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)\r\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)\r\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)\r\nCaused by: java.lang.IllegalStateException: Failed to introspect Class [org.springframework.boot.webmvc.autoconfigure.error.ErrorMvcAutoConfiguration] from ClassLoader [jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528]\r\n\tat org.springframework.util.ReflectionUtils.getDeclaredMethods(ReflectionUtils.java:483)\r\n\tat org.springframework.util.ReflectionUtils.doWithMethods(ReflectionUtils.java:360)\r\n\tat org.springframework.util.ReflectionUtils.getUniqueDeclaredMethods(ReflectionUtils.java:417)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.lambda$getTypeForFactoryMethod$1(AbstractAutowireCapableBeanFactory.java:750)\r\n\tat java.base/java.util.concurrent.ConcurrentHashMap.computeIfAbsent(ConcurrentHashMap.java:1708)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryMethod(AbstractAutowireCapableBeanFactory.java:749)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.determineTargetType(AbstractAutowireCapableBeanFactory.java:682)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.predictBeanType(AbstractAutowireCapableBeanFactory.java:653)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.isFactoryBean(AbstractBeanFactory.java:1676)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:562)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:534)\r\n\tat org.springframework.boot.autoconfigure.condition.OnBeanCondition.collectBeanNamesForType(OnBeanCondition.java:247)\r\n\tat org.springframework.boot.autoconfigure.condition.OnBeanCondition.getBeanNamesForType(OnBeanCondition.java:240)\r\n\tat org.springframework.boot.autoconfigure.condition.OnBeanCondition.getBeanNamesForType(OnBeanCondition.java:230)\r\n\tat org.springframework.boot.autoconfigure.condition.OnBeanCondition.getMatchingBeans(OnBeanCondition.java:183)\r\n\tat org.springframework.boot.autoconfigure.condition.OnBeanCondition.getMatchOutcome(OnBeanCondition.java:158)\r\n\tat org.springframework.boot.autoconfigure.condition.SpringBootCondition.matches(SpringBootCondition.java:47)\r\n\t... 94 common frames omitted\r\nCaused by: java.lang.NoClassDefFoundError: org/springframework/boot/web/error/ErrorPageRegistrar\r\n\tat java.base/java.lang.ClassLoader.defineClass1(Native Method)\r\n\tat java.base/java.lang.ClassLoader.defineClass(ClassLoader.java:1027)\r\n\tat java.base/java.security.SecureClassLoader.defineClass(SecureClassLoader.java:150)\r\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.defineClass(BuiltinClassLoader.java:862)\r\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.findClassOnClassPathOrNull(BuiltinClassLoader.java:760)\r\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClassOrNull(BuiltinClassLoader.java:681)\r\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:639)\r\n\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)\r\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:526)\r\n\tat java.base/java.lang.Class.getDeclaredMethods0(Native Method)\r\n\tat java.base/java.lang.Class.privateGetDeclaredMethods(Class.java:3578)\r\n\tat java.base/java.lang.Class.getDeclaredMethods(Class.java:2676)\r\n\tat org.springframework.util.ReflectionUtils.getDeclaredMethods(ReflectionUtils.java:465)\r\n\t... 110 common frames omitted\r\nCaused by: java.lang.ClassNotFoundException: org.springframework.boot.web.error.ErrorPageRegistrar\r\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)\r\n\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)\r\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:526)\r\n\t... 123 common frames omitted\r\n"}
{"@timestamp":"2025-09-14T16:41:24.2062134-03:00","@version":"1","message":"Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] to prepare test instance [com.simplesdental.product.config.JacksonConfigTest@c2cf597]","logger_name":"org.springframework.test.context.TestContextManager","thread_name":"main","level":"WARN","level_value":30000,"stack_trace":"java.lang.IllegalStateException: Failed to load ApplicationContext for [WebMergedContextConfiguration@100aa331 testClass = com.simplesdental.product.config.JacksonConfigTest, locations = [], classes = [com.simplesdental.product.ProductApplication], contextInitializerClasses = [], activeProfiles = [], propertySourceDescriptors = [], propertySourceProperties = [\"spring.main.allow-bean-definition-overriding=true\", \"org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true\"], contextCustomizers = [org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6cc4cdb9, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@32115b28, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@4e0ae11f, org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@7905a0b8, org.springframework.boot.test.context.SpringBootTestAnnotation@41204c78], resourceBasePath = \"src/main/webapp\", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:180)\r\n\tat org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)\r\n\tat org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)\r\n\tat org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)\r\n\tat org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)\r\n\tat org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)\r\n\tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)\r\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\r\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\r\n\tat java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)\r\n\tat java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)\r\n\tat java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)\r\n\tat java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)\r\n\tat java.base/java.util.Optional.orElseGet(Optional.java:364)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)\r\n\tat org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)\r\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)\r\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)\r\n\tat org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)\r\n\tat org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)\r\n\tat com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)\r\n\tat com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)\r\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)\r\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)\r\nCaused by: java.lang.IllegalStateException: Error processing condition on org.springframework.boot.webmvc.autoconfigure.error.ErrorMvcAutoConfiguration.basicErrorController\r\n\tat org.springframework.boot.autoconfigure.condition.SpringBootCondition.matches(SpringBootCondition.java:60)\r\n\tat org.springframework.context.annotation.ConditionEvaluator.shouldSkip(ConditionEvaluator.java:108)\r\n\tat org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForBeanMethod(ConfigurationClassBeanDefinitionReader.java:183)\r\n\tat org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForConfigurationClass(ConfigurationClassBeanDefinitionReader.java:144)\r\n\tat org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitions(ConfigurationClassBeanDefinitionReader.java:120)\r\n\tat org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:428)\r\n\tat org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:289)\r\n\tat org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:349)\r\n\tat org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:118)\r\n\tat org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:788)\r\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:606)\r\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)\r\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:334)\r\n\tat org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)\r\n\tat org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)\r\n\tat org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)\r\n\tat org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1454)\r\n\tat org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:553)\r\n\tat org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)\r\n\tat org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)\r\n\t... 72 common frames omitted\r\nCaused by: java.lang.IllegalStateException: Failed to introspect Class [org.springframework.boot.webmvc.autoconfigure.error.ErrorMvcAutoConfiguration] from ClassLoader [jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528]\r\n\tat org.springframework.util.ReflectionUtils.getDeclaredMethods(ReflectionUtils.java:483)\r\n\tat org.springframework.util.ReflectionUtils.doWithMethods(ReflectionUtils.java:360)\r\n\tat org.springframework.util.ReflectionUtils.getUniqueDeclaredMethods(ReflectionUtils.java:417)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.lambda$getTypeForFactoryMethod$1(AbstractAutowireCapableBeanFactory.java:750)\r\n\tat java.base/java.util.concurrent.ConcurrentHashMap.computeIfAbsent(ConcurrentHashMap.java:1708)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryMethod(AbstractAutowireCapableBeanFactory.java:749)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.determineTargetType(AbstractAutowireCapableBeanFactory.java:682)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.predictBeanType(AbstractAutowireCapableBeanFactory.java:653)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.isFactoryBean(AbstractBeanFactory.java:1676)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:562)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:534)\r\n\tat org.springframework.boot.autoconfigure.condition.OnBeanCondition.collectBeanNamesForType(OnBeanCondition.java:247)\r\n\tat org.springframework.boot.autoconfigure.condition.OnBeanCondition.getBeanNamesForType(OnBeanCondition.java:240)\r\n\tat org.springframework.boot.autoconfigure.condition.OnBeanCondition.getBeanNamesForType(OnBeanCondition.java:230)\r\n\tat org.springframework.boot.autoconfigure.condition.OnBeanCondition.getMatchingBeans(OnBeanCondition.java:183)\r\n\tat org.springframework.boot.autoconfigure.condition.OnBeanCondition.getMatchOutcome(OnBeanCondition.java:158)\r\n\tat org.springframework.boot.autoconfigure.condition.SpringBootCondition.matches(SpringBootCondition.java:47)\r\n\t... 94 common frames omitted\r\nCaused by: java.lang.NoClassDefFoundError: org/springframework/boot/web/error/ErrorPageRegistrar\r\n\tat java.base/java.lang.ClassLoader.defineClass1(Native Method)\r\n\tat java.base/java.lang.ClassLoader.defineClass(ClassLoader.java:1027)\r\n\tat java.base/java.security.SecureClassLoader.defineClass(SecureClassLoader.java:150)\r\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.defineClass(BuiltinClassLoader.java:862)\r\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.findClassOnClassPathOrNull(BuiltinClassLoader.java:760)\r\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClassOrNull(BuiltinClassLoader.java:681)\r\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:639)\r\n\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)\r\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:526)\r\n\tat java.base/java.lang.Class.getDeclaredMethods0(Native Method)\r\n\tat java.base/java.lang.Class.privateGetDeclaredMethods(Class.java:3578)\r\n\tat java.base/java.lang.Class.getDeclaredMethods(Class.java:2676)\r\n\tat org.springframework.util.ReflectionUtils.getDeclaredMethods(ReflectionUtils.java:465)\r\n\t... 110 common frames omitted\r\nCaused by: java.lang.ClassNotFoundException: org.springframework.boot.web.error.ErrorPageRegistrar\r\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)\r\n\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)\r\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:526)\r\n\t... 123 common frames omitted\r\n"}
{"@timestamp":"2025-09-14T16:43:24.4459583-03:00","@version":"1","message":"Starting JacksonConfigTest using Java 21.0.5 with PID 29324 (started by flavi in C:\\Users\\flavi\\Downloads\\desafio-backend\\desafio-backend)","logger_name":"com.simplesdental.product.config.JacksonConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T16:43:24.4529582-03:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.simplesdental.product.config.JacksonConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T16:43:24.9394739-03:00","@version":"1","message":"Started JacksonConfigTest in 1.072 seconds (process running for 1.988)","logger_name":"com.simplesdental.product.config.JacksonConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T16:45:33.0748536-03:00","@version":"1","message":"Starting SecurityConfigTest using Java 21.0.5 with PID 8084 (started by flavi in C:\\Users\\flavi\\Downloads\\desafio-backend\\desafio-backend)","logger_name":"com.simplesdental.product.config.SecurityConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T16:45:33.0848568-03:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.simplesdental.product.config.SecurityConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T16:45:33.7003921-03:00","@version":"1","message":"Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.support.BeanDefinitionOverrideException: Invalid bean definition with name 'conventionErrorViewResolver' defined in class path resource [org/springframework/boot/webmvc/autoconfigure/error/ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration.class]: Cannot register bean definition [Root bean: class [null]; scope=; abstract=false; lazyInit=null; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.webmvc.autoconfigure.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration; factoryMethodName=conventionErrorViewResolver; initMethodNames=null; destroyMethodNames=[(inferred)]; defined in class path resource [org/springframework/boot/webmvc/autoconfigure/error/ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration.class]] for bean 'conventionErrorViewResolver' since there is already [Root bean: class [null]; scope=; abstract=false; lazyInit=null; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration; factoryMethodName=conventionErrorViewResolver; initMethodNames=null; destroyMethodNames=[(inferred)]; defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/error/ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration.class]] bound.","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T16:45:33.7073913-03:00","@version":"1","message":"\r\n\r\nError starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.","logger_name":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T16:45:33.7246075-03:00","@version":"1","message":"\r\n\r\n***************************\r\nAPPLICATION FAILED TO START\r\n***************************\r\n\r\nDescription:\r\n\r\nThe bean 'conventionErrorViewResolver', defined in class path resource [org/springframework/boot/webmvc/autoconfigure/error/ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration.class], could not be registered. A bean with that name has already been defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/error/ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration.class] and overriding is disabled.\r\n\r\nAction:\r\n\r\nConsider renaming one of the beans or enabling overriding by setting spring.main.allow-bean-definition-overriding=true\r\n","logger_name":"org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter","thread_name":"main","level":"ERROR","level_value":40000}
{"@timestamp":"2025-09-14T16:45:33.7296089-03:00","@version":"1","message":"Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] to prepare test instance [com.simplesdental.product.config.SecurityConfigTest@2f995afc]","logger_name":"org.springframework.test.context.TestContextManager","thread_name":"main","level":"WARN","level_value":30000,"stack_trace":"java.lang.IllegalStateException: Failed to load ApplicationContext for [WebMergedContextConfiguration@7c5df615 testClass = com.simplesdental.product.config.SecurityConfigTest, locations = [], classes = [com.simplesdental.product.ProductApplication], contextInitializerClasses = [], activeProfiles = [], propertySourceDescriptors = [], propertySourceProperties = [\"org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true\"], contextCustomizers = [org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@60db1c0e, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@2438dcd, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@2f01783a, org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@81d9a72, org.springframework.boot.test.context.SpringBootTestAnnotation@8d5f40f9], resourceBasePath = \"src/main/webapp\", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:180)\r\n\tat org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)\r\n\tat org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)\r\n\tat org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)\r\n\tat org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)\r\n\tat org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)\r\n\tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)\r\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\r\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\r\n\tat java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)\r\n\tat java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)\r\n\tat java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)\r\n\tat java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)\r\n\tat java.base/java.util.Optional.orElseGet(Optional.java:364)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)\r\n\tat org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)\r\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)\r\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)\r\n\tat org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)\r\n\tat org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)\r\n\tat com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)\r\n\tat com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)\r\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)\r\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)\r\nCaused by: org.springframework.beans.factory.support.BeanDefinitionOverrideException: Invalid bean definition with name 'conventionErrorViewResolver' defined in class path resource [org/springframework/boot/webmvc/autoconfigure/error/ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration.class]: Cannot register bean definition [Root bean: class [null]; scope=; abstract=false; lazyInit=null; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.webmvc.autoconfigure.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration; factoryMethodName=conventionErrorViewResolver; initMethodNames=null; destroyMethodNames=[(inferred)]; defined in class path resource [org/springframework/boot/webmvc/autoconfigure/error/ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration.class]] for bean 'conventionErrorViewResolver' since there is already [Root bean: class [null]; scope=; abstract=false; lazyInit=null; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration; factoryMethodName=conventionErrorViewResolver; initMethodNames=null; destroyMethodNames=[(inferred)]; defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/error/ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration.class]] bound.\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(DefaultListableBeanFactory.java:1017)\r\n\tat org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForBeanMethod(ConfigurationClassBeanDefinitionReader.java:277)\r\n\tat org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForConfigurationClass(ConfigurationClassBeanDefinitionReader.java:144)\r\n\tat org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitions(ConfigurationClassBeanDefinitionReader.java:120)\r\n\tat org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:428)\r\n\tat org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:289)\r\n\tat org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:349)\r\n\tat org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:118)\r\n\tat org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:788)\r\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:606)\r\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)\r\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:334)\r\n\tat org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)\r\n\tat org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)\r\n\tat org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)\r\n\tat org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1454)\r\n\tat org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:553)\r\n\tat org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)\r\n\tat org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)\r\n\t... 72 common frames omitted\r\n"}
{"@timestamp":"2025-09-14T16:49:27.51303-03:00","@version":"1","message":"Starting SecurityConfigTest using Java 21.0.5 with PID 29992 (started by flavi in C:\\Users\\flavi\\Downloads\\desafio-backend\\desafio-backend)","logger_name":"com.simplesdental.product.config.SecurityConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T16:49:27.5220264-03:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.simplesdental.product.config.SecurityConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T16:49:28.1328268-03:00","@version":"1","message":"Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.support.BeanDefinitionOverrideException: Invalid bean definition with name 'conventionErrorViewResolver' defined in class path resource [org/springframework/boot/webmvc/autoconfigure/error/ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration.class]: Cannot register bean definition [Root bean: class [null]; scope=; abstract=false; lazyInit=null; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.webmvc.autoconfigure.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration; factoryMethodName=conventionErrorViewResolver; initMethodNames=null; destroyMethodNames=[(inferred)]; defined in class path resource [org/springframework/boot/webmvc/autoconfigure/error/ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration.class]] for bean 'conventionErrorViewResolver' since there is already [Root bean: class [null]; scope=; abstract=false; lazyInit=null; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration; factoryMethodName=conventionErrorViewResolver; initMethodNames=null; destroyMethodNames=[(inferred)]; defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/error/ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration.class]] bound.","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T16:49:28.1428257-03:00","@version":"1","message":"\r\n\r\nError starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.","logger_name":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T16:49:28.1638243-03:00","@version":"1","message":"\r\n\r\n***************************\r\nAPPLICATION FAILED TO START\r\n***************************\r\n\r\nDescription:\r\n\r\nThe bean 'conventionErrorViewResolver', defined in class path resource [org/springframework/boot/webmvc/autoconfigure/error/ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration.class], could not be registered. A bean with that name has already been defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/error/ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration.class] and overriding is disabled.\r\n\r\nAction:\r\n\r\nConsider renaming one of the beans or enabling overriding by setting spring.main.allow-bean-definition-overriding=true\r\n","logger_name":"org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter","thread_name":"main","level":"ERROR","level_value":40000}
{"@timestamp":"2025-09-14T16:49:28.1688259-03:00","@version":"1","message":"Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] to prepare test instance [com.simplesdental.product.config.SecurityConfigTest@415795f3]","logger_name":"org.springframework.test.context.TestContextManager","thread_name":"main","level":"WARN","level_value":30000,"stack_trace":"java.lang.IllegalStateException: Failed to load ApplicationContext for [WebMergedContextConfiguration@37e0056e testClass = com.simplesdental.product.config.SecurityConfigTest, locations = [], classes = [com.simplesdental.product.ProductApplication, com.simplesdental.product.config.SecurityConfigTest.JwtTestConfig], contextInitializerClasses = [], activeProfiles = [], propertySourceDescriptors = [], propertySourceProperties = [\"org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true\"], contextCustomizers = [org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@10289886, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@7068e664, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@4a07d605, org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@4c5ae43b, org.springframework.boot.test.context.SpringBootTestAnnotation@42f89bd5], resourceBasePath = \"src/main/webapp\", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:180)\r\n\tat org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)\r\n\tat org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)\r\n\tat org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)\r\n\tat org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)\r\n\tat org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)\r\n\tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)\r\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\r\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\r\n\tat java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)\r\n\tat java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)\r\n\tat java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)\r\n\tat java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)\r\n\tat java.base/java.util.Optional.orElseGet(Optional.java:364)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)\r\n\tat org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)\r\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)\r\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)\r\n\tat org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)\r\n\tat org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)\r\n\tat com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)\r\n\tat com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)\r\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)\r\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)\r\nCaused by: org.springframework.beans.factory.support.BeanDefinitionOverrideException: Invalid bean definition with name 'conventionErrorViewResolver' defined in class path resource [org/springframework/boot/webmvc/autoconfigure/error/ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration.class]: Cannot register bean definition [Root bean: class [null]; scope=; abstract=false; lazyInit=null; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.webmvc.autoconfigure.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration; factoryMethodName=conventionErrorViewResolver; initMethodNames=null; destroyMethodNames=[(inferred)]; defined in class path resource [org/springframework/boot/webmvc/autoconfigure/error/ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration.class]] for bean 'conventionErrorViewResolver' since there is already [Root bean: class [null]; scope=; abstract=false; lazyInit=null; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration; factoryMethodName=conventionErrorViewResolver; initMethodNames=null; destroyMethodNames=[(inferred)]; defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/error/ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration.class]] bound.\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(DefaultListableBeanFactory.java:1017)\r\n\tat org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForBeanMethod(ConfigurationClassBeanDefinitionReader.java:277)\r\n\tat org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForConfigurationClass(ConfigurationClassBeanDefinitionReader.java:144)\r\n\tat org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitions(ConfigurationClassBeanDefinitionReader.java:120)\r\n\tat org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:428)\r\n\tat org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:289)\r\n\tat org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:349)\r\n\tat org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:118)\r\n\tat org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:788)\r\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:606)\r\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)\r\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:334)\r\n\tat org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)\r\n\tat org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)\r\n\tat org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)\r\n\tat org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1454)\r\n\tat org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:553)\r\n\tat org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)\r\n\tat org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)\r\n\t... 72 common frames omitted\r\n"}
{"@timestamp":"2025-09-14T16:50:09.3926234-03:00","@version":"1","message":"Starting SecurityConfigTest using Java 21.0.5 with PID 22220 (started by flavi in C:\\Users\\flavi\\Downloads\\desafio-backend\\desafio-backend)","logger_name":"com.simplesdental.product.config.SecurityConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T16:50:09.4006248-03:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.simplesdental.product.config.SecurityConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T16:50:10.05198-03:00","@version":"1","message":"Exception encountered during context initialization - cancelling refresh attempt: java.lang.IllegalStateException: Error processing condition on org.springframework.boot.webmvc.autoconfigure.error.ErrorMvcAutoConfiguration.basicErrorController","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T16:50:10.0659805-03:00","@version":"1","message":"\r\n\r\nError starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.","logger_name":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T16:50:10.086149-03:00","@version":"1","message":"Application run failed","logger_name":"org.springframework.boot.SpringApplication","thread_name":"main","level":"ERROR","level_value":40000,"stack_trace":"java.lang.IllegalStateException: Error processing condition on org.springframework.boot.webmvc.autoconfigure.error.ErrorMvcAutoConfiguration.basicErrorController\r\n\tat org.springframework.boot.autoconfigure.condition.SpringBootCondition.matches(SpringBootCondition.java:60)\r\n\tat org.springframework.context.annotation.ConditionEvaluator.shouldSkip(ConditionEvaluator.java:108)\r\n\tat org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForBeanMethod(ConfigurationClassBeanDefinitionReader.java:183)\r\n\tat org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForConfigurationClass(ConfigurationClassBeanDefinitionReader.java:144)\r\n\tat org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitions(ConfigurationClassBeanDefinitionReader.java:120)\r\n\tat org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:428)\r\n\tat org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:289)\r\n\tat org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:349)\r\n\tat org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:118)\r\n\tat org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:788)\r\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:606)\r\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)\r\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:334)\r\n\tat org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)\r\n\tat org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)\r\n\tat org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)\r\n\tat org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1454)\r\n\tat org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:553)\r\n\tat org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)\r\n\tat org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)\r\n\tat org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)\r\n\tat org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)\r\n\tat org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)\r\n\tat org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)\r\n\tat org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)\r\n\tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)\r\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\r\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\r\n\tat java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)\r\n\tat java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)\r\n\tat java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)\r\n\tat java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)\r\n\tat java.base/java.util.Optional.orElseGet(Optional.java:364)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)\r\n\tat org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)\r\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)\r\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)\r\n\tat org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)\r\n\tat org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)\r\n\tat com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)\r\n\tat com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)\r\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)\r\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)\r\nCaused by: java.lang.IllegalStateException: Failed to introspect Class [org.springframework.boot.webmvc.autoconfigure.error.ErrorMvcAutoConfiguration] from ClassLoader [jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528]\r\n\tat org.springframework.util.ReflectionUtils.getDeclaredMethods(ReflectionUtils.java:483)\r\n\tat org.springframework.util.ReflectionUtils.doWithMethods(ReflectionUtils.java:360)\r\n\tat org.springframework.util.ReflectionUtils.getUniqueDeclaredMethods(ReflectionUtils.java:417)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.lambda$getTypeForFactoryMethod$1(AbstractAutowireCapableBeanFactory.java:750)\r\n\tat java.base/java.util.concurrent.ConcurrentHashMap.computeIfAbsent(ConcurrentHashMap.java:1708)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryMethod(AbstractAutowireCapableBeanFactory.java:749)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.determineTargetType(AbstractAutowireCapableBeanFactory.java:682)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.predictBeanType(AbstractAutowireCapableBeanFactory.java:653)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.isFactoryBean(AbstractBeanFactory.java:1676)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:562)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:534)\r\n\tat org.springframework.boot.autoconfigure.condition.OnBeanCondition.collectBeanNamesForType(OnBeanCondition.java:247)\r\n\tat org.springframework.boot.autoconfigure.condition.OnBeanCondition.getBeanNamesForType(OnBeanCondition.java:240)\r\n\tat org.springframework.boot.autoconfigure.condition.OnBeanCondition.getBeanNamesForType(OnBeanCondition.java:230)\r\n\tat org.springframework.boot.autoconfigure.condition.OnBeanCondition.getMatchingBeans(OnBeanCondition.java:183)\r\n\tat org.springframework.boot.autoconfigure.condition.OnBeanCondition.getMatchOutcome(OnBeanCondition.java:158)\r\n\tat org.springframework.boot.autoconfigure.condition.SpringBootCondition.matches(SpringBootCondition.java:47)\r\n\t... 94 common frames omitted\r\nCaused by: java.lang.NoClassDefFoundError: org/springframework/boot/web/error/ErrorPageRegistrar\r\n\tat java.base/java.lang.ClassLoader.defineClass1(Native Method)\r\n\tat java.base/java.lang.ClassLoader.defineClass(ClassLoader.java:1027)\r\n\tat java.base/java.security.SecureClassLoader.defineClass(SecureClassLoader.java:150)\r\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.defineClass(BuiltinClassLoader.java:862)\r\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.findClassOnClassPathOrNull(BuiltinClassLoader.java:760)\r\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClassOrNull(BuiltinClassLoader.java:681)\r\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:639)\r\n\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)\r\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:526)\r\n\tat java.base/java.lang.Class.getDeclaredMethods0(Native Method)\r\n\tat java.base/java.lang.Class.privateGetDeclaredMethods(Class.java:3578)\r\n\tat java.base/java.lang.Class.getDeclaredMethods(Class.java:2676)\r\n\tat org.springframework.util.ReflectionUtils.getDeclaredMethods(ReflectionUtils.java:465)\r\n\t... 110 common frames omitted\r\nCaused by: java.lang.ClassNotFoundException: org.springframework.boot.web.error.ErrorPageRegistrar\r\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)\r\n\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)\r\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:526)\r\n\t... 123 common frames omitted\r\n"}
{"@timestamp":"2025-09-14T16:50:10.0981497-03:00","@version":"1","message":"Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] to prepare test instance [com.simplesdental.product.config.SecurityConfigTest@110b7837]","logger_name":"org.springframework.test.context.TestContextManager","thread_name":"main","level":"WARN","level_value":30000,"stack_trace":"java.lang.IllegalStateException: Failed to load ApplicationContext for [WebMergedContextConfiguration@15e1f8fe testClass = com.simplesdental.product.config.SecurityConfigTest, locations = [], classes = [com.simplesdental.product.ProductApplication, com.simplesdental.product.config.SecurityConfigTest.JwtTestConfig], contextInitializerClasses = [], activeProfiles = [], propertySourceDescriptors = [], propertySourceProperties = [\"org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true\"], contextCustomizers = [org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@60db1c0e, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@2438dcd, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@2f01783a, org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@81d9a72, org.springframework.boot.test.context.SpringBootTestAnnotation@8d5f40f9], resourceBasePath = \"src/main/webapp\", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:180)\r\n\tat org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)\r\n\tat org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)\r\n\tat org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)\r\n\tat org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)\r\n\tat org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)\r\n\tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)\r\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\r\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\r\n\tat java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)\r\n\tat java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)\r\n\tat java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)\r\n\tat java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)\r\n\tat java.base/java.util.Optional.orElseGet(Optional.java:364)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)\r\n\tat org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)\r\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)\r\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)\r\n\tat org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)\r\n\tat org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)\r\n\tat com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)\r\n\tat com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)\r\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)\r\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)\r\nCaused by: java.lang.IllegalStateException: Error processing condition on org.springframework.boot.webmvc.autoconfigure.error.ErrorMvcAutoConfiguration.basicErrorController\r\n\tat org.springframework.boot.autoconfigure.condition.SpringBootCondition.matches(SpringBootCondition.java:60)\r\n\tat org.springframework.context.annotation.ConditionEvaluator.shouldSkip(ConditionEvaluator.java:108)\r\n\tat org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForBeanMethod(ConfigurationClassBeanDefinitionReader.java:183)\r\n\tat org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForConfigurationClass(ConfigurationClassBeanDefinitionReader.java:144)\r\n\tat org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitions(ConfigurationClassBeanDefinitionReader.java:120)\r\n\tat org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:428)\r\n\tat org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:289)\r\n\tat org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:349)\r\n\tat org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:118)\r\n\tat org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:788)\r\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:606)\r\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)\r\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:334)\r\n\tat org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)\r\n\tat org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)\r\n\tat org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)\r\n\tat org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1454)\r\n\tat org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:553)\r\n\tat org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)\r\n\tat org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)\r\n\t... 72 common frames omitted\r\nCaused by: java.lang.IllegalStateException: Failed to introspect Class [org.springframework.boot.webmvc.autoconfigure.error.ErrorMvcAutoConfiguration] from ClassLoader [jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528]\r\n\tat org.springframework.util.ReflectionUtils.getDeclaredMethods(ReflectionUtils.java:483)\r\n\tat org.springframework.util.ReflectionUtils.doWithMethods(ReflectionUtils.java:360)\r\n\tat org.springframework.util.ReflectionUtils.getUniqueDeclaredMethods(ReflectionUtils.java:417)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.lambda$getTypeForFactoryMethod$1(AbstractAutowireCapableBeanFactory.java:750)\r\n\tat java.base/java.util.concurrent.ConcurrentHashMap.computeIfAbsent(ConcurrentHashMap.java:1708)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryMethod(AbstractAutowireCapableBeanFactory.java:749)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.determineTargetType(AbstractAutowireCapableBeanFactory.java:682)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.predictBeanType(AbstractAutowireCapableBeanFactory.java:653)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.isFactoryBean(AbstractBeanFactory.java:1676)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:562)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:534)\r\n\tat org.springframework.boot.autoconfigure.condition.OnBeanCondition.collectBeanNamesForType(OnBeanCondition.java:247)\r\n\tat org.springframework.boot.autoconfigure.condition.OnBeanCondition.getBeanNamesForType(OnBeanCondition.java:240)\r\n\tat org.springframework.boot.autoconfigure.condition.OnBeanCondition.getBeanNamesForType(OnBeanCondition.java:230)\r\n\tat org.springframework.boot.autoconfigure.condition.OnBeanCondition.getMatchingBeans(OnBeanCondition.java:183)\r\n\tat org.springframework.boot.autoconfigure.condition.OnBeanCondition.getMatchOutcome(OnBeanCondition.java:158)\r\n\tat org.springframework.boot.autoconfigure.condition.SpringBootCondition.matches(SpringBootCondition.java:47)\r\n\t... 94 common frames omitted\r\nCaused by: java.lang.NoClassDefFoundError: org/springframework/boot/web/error/ErrorPageRegistrar\r\n\tat java.base/java.lang.ClassLoader.defineClass1(Native Method)\r\n\tat java.base/java.lang.ClassLoader.defineClass(ClassLoader.java:1027)\r\n\tat java.base/java.security.SecureClassLoader.defineClass(SecureClassLoader.java:150)\r\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.defineClass(BuiltinClassLoader.java:862)\r\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.findClassOnClassPathOrNull(BuiltinClassLoader.java:760)\r\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClassOrNull(BuiltinClassLoader.java:681)\r\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:639)\r\n\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)\r\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:526)\r\n\tat java.base/java.lang.Class.getDeclaredMethods0(Native Method)\r\n\tat java.base/java.lang.Class.privateGetDeclaredMethods(Class.java:3578)\r\n\tat java.base/java.lang.Class.getDeclaredMethods(Class.java:2676)\r\n\tat org.springframework.util.ReflectionUtils.getDeclaredMethods(ReflectionUtils.java:465)\r\n\t... 110 common frames omitted\r\nCaused by: java.lang.ClassNotFoundException: org.springframework.boot.web.error.ErrorPageRegistrar\r\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)\r\n\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)\r\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:526)\r\n\t... 123 common frames omitted\r\n"}
{"@timestamp":"2025-09-14T16:51:18.3616919-03:00","@version":"1","message":"Starting SecurityConfigTest using Java 21.0.5 with PID 14732 (started by flavi in C:\\Users\\flavi\\Downloads\\desafio-backend\\desafio-backend)","logger_name":"com.simplesdental.product.config.SecurityConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T16:51:18.3696874-03:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.simplesdental.product.config.SecurityConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T16:51:18.9702158-03:00","@version":"1","message":"Exception encountered during context initialization - cancelling refresh attempt: java.lang.IllegalStateException: Error processing condition on org.springframework.boot.webmvc.autoconfigure.error.ErrorMvcAutoConfiguration.basicErrorController","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T16:51:18.981215-03:00","@version":"1","message":"\r\n\r\nError starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.","logger_name":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T16:51:19.0022163-03:00","@version":"1","message":"Application run failed","logger_name":"org.springframework.boot.SpringApplication","thread_name":"main","level":"ERROR","level_value":40000,"stack_trace":"java.lang.IllegalStateException: Error processing condition on org.springframework.boot.webmvc.autoconfigure.error.ErrorMvcAutoConfiguration.basicErrorController\r\n\tat org.springframework.boot.autoconfigure.condition.SpringBootCondition.matches(SpringBootCondition.java:60)\r\n\tat org.springframework.context.annotation.ConditionEvaluator.shouldSkip(ConditionEvaluator.java:108)\r\n\tat org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForBeanMethod(ConfigurationClassBeanDefinitionReader.java:183)\r\n\tat org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForConfigurationClass(ConfigurationClassBeanDefinitionReader.java:144)\r\n\tat org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitions(ConfigurationClassBeanDefinitionReader.java:120)\r\n\tat org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:428)\r\n\tat org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:289)\r\n\tat org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:349)\r\n\tat org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:118)\r\n\tat org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:788)\r\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:606)\r\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)\r\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:334)\r\n\tat org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)\r\n\tat org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)\r\n\tat org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)\r\n\tat org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1454)\r\n\tat org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:553)\r\n\tat org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)\r\n\tat org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)\r\n\tat org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)\r\n\tat org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)\r\n\tat org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)\r\n\tat org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)\r\n\tat org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)\r\n\tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)\r\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\r\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\r\n\tat java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)\r\n\tat java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)\r\n\tat java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)\r\n\tat java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)\r\n\tat java.base/java.util.Optional.orElseGet(Optional.java:364)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)\r\n\tat org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)\r\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)\r\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)\r\n\tat org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)\r\n\tat org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)\r\n\tat com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)\r\n\tat com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)\r\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)\r\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)\r\nCaused by: java.lang.IllegalStateException: Failed to introspect Class [org.springframework.boot.webmvc.autoconfigure.error.ErrorMvcAutoConfiguration] from ClassLoader [jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528]\r\n\tat org.springframework.util.ReflectionUtils.getDeclaredMethods(ReflectionUtils.java:483)\r\n\tat org.springframework.util.ReflectionUtils.doWithMethods(ReflectionUtils.java:360)\r\n\tat org.springframework.util.ReflectionUtils.getUniqueDeclaredMethods(ReflectionUtils.java:417)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.lambda$getTypeForFactoryMethod$1(AbstractAutowireCapableBeanFactory.java:750)\r\n\tat java.base/java.util.concurrent.ConcurrentHashMap.computeIfAbsent(ConcurrentHashMap.java:1740)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryMethod(AbstractAutowireCapableBeanFactory.java:749)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.determineTargetType(AbstractAutowireCapableBeanFactory.java:682)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.predictBeanType(AbstractAutowireCapableBeanFactory.java:653)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.isFactoryBean(AbstractBeanFactory.java:1676)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:562)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:534)\r\n\tat org.springframework.boot.autoconfigure.condition.OnBeanCondition.collectBeanNamesForType(OnBeanCondition.java:247)\r\n\tat org.springframework.boot.autoconfigure.condition.OnBeanCondition.getBeanNamesForType(OnBeanCondition.java:240)\r\n\tat org.springframework.boot.autoconfigure.condition.OnBeanCondition.getBeanNamesForType(OnBeanCondition.java:230)\r\n\tat org.springframework.boot.autoconfigure.condition.OnBeanCondition.getMatchingBeans(OnBeanCondition.java:183)\r\n\tat org.springframework.boot.autoconfigure.condition.OnBeanCondition.getMatchOutcome(OnBeanCondition.java:158)\r\n\tat org.springframework.boot.autoconfigure.condition.SpringBootCondition.matches(SpringBootCondition.java:47)\r\n\t... 94 common frames omitted\r\nCaused by: java.lang.NoClassDefFoundError: org/springframework/boot/web/error/ErrorPageRegistrar\r\n\tat java.base/java.lang.ClassLoader.defineClass1(Native Method)\r\n\tat java.base/java.lang.ClassLoader.defineClass(ClassLoader.java:1027)\r\n\tat java.base/java.security.SecureClassLoader.defineClass(SecureClassLoader.java:150)\r\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.defineClass(BuiltinClassLoader.java:862)\r\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.findClassOnClassPathOrNull(BuiltinClassLoader.java:760)\r\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClassOrNull(BuiltinClassLoader.java:681)\r\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:639)\r\n\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)\r\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:526)\r\n\tat java.base/java.lang.Class.getDeclaredMethods0(Native Method)\r\n\tat java.base/java.lang.Class.privateGetDeclaredMethods(Class.java:3578)\r\n\tat java.base/java.lang.Class.getDeclaredMethods(Class.java:2676)\r\n\tat org.springframework.util.ReflectionUtils.getDeclaredMethods(ReflectionUtils.java:465)\r\n\t... 110 common frames omitted\r\nCaused by: java.lang.ClassNotFoundException: org.springframework.boot.web.error.ErrorPageRegistrar\r\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)\r\n\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)\r\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:526)\r\n\t... 123 common frames omitted\r\n"}
{"@timestamp":"2025-09-14T16:51:19.012217-03:00","@version":"1","message":"Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] to prepare test instance [com.simplesdental.product.config.SecurityConfigTest@59018eed]","logger_name":"org.springframework.test.context.TestContextManager","thread_name":"main","level":"WARN","level_value":30000,"stack_trace":"java.lang.IllegalStateException: Failed to load ApplicationContext for [WebMergedContextConfiguration@67f9cb52 testClass = com.simplesdental.product.config.SecurityConfigTest, locations = [], classes = [com.simplesdental.product.ProductApplication, com.simplesdental.product.config.SecurityConfigTest.JwtTestConfig], contextInitializerClasses = [], activeProfiles = [], propertySourceDescriptors = [], propertySourceProperties = [\"org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true\"], contextCustomizers = [[ImportsContextCustomizer@2de9ca6 key = [com.simplesdental.product.config.SecurityConfigTest$JwtTestConfig]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@7fd7a283, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@2c78324b, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@21d03963, org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@15f47664, org.springframework.boot.test.context.SpringBootTestAnnotation@ae1631da], resourceBasePath = \"src/main/webapp\", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:180)\r\n\tat org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)\r\n\tat org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)\r\n\tat org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)\r\n\tat org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)\r\n\tat org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)\r\n\tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)\r\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\r\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\r\n\tat java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)\r\n\tat java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)\r\n\tat java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)\r\n\tat java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)\r\n\tat java.base/java.util.Optional.orElseGet(Optional.java:364)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)\r\n\tat org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)\r\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)\r\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)\r\n\tat org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)\r\n\tat org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)\r\n\tat com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)\r\n\tat com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)\r\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)\r\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)\r\nCaused by: java.lang.IllegalStateException: Error processing condition on org.springframework.boot.webmvc.autoconfigure.error.ErrorMvcAutoConfiguration.basicErrorController\r\n\tat org.springframework.boot.autoconfigure.condition.SpringBootCondition.matches(SpringBootCondition.java:60)\r\n\tat org.springframework.context.annotation.ConditionEvaluator.shouldSkip(ConditionEvaluator.java:108)\r\n\tat org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForBeanMethod(ConfigurationClassBeanDefinitionReader.java:183)\r\n\tat org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForConfigurationClass(ConfigurationClassBeanDefinitionReader.java:144)\r\n\tat org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitions(ConfigurationClassBeanDefinitionReader.java:120)\r\n\tat org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:428)\r\n\tat org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:289)\r\n\tat org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:349)\r\n\tat org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:118)\r\n\tat org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:788)\r\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:606)\r\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)\r\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:334)\r\n\tat org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)\r\n\tat org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)\r\n\tat org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)\r\n\tat org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1454)\r\n\tat org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:553)\r\n\tat org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)\r\n\tat org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)\r\n\t... 72 common frames omitted\r\nCaused by: java.lang.IllegalStateException: Failed to introspect Class [org.springframework.boot.webmvc.autoconfigure.error.ErrorMvcAutoConfiguration] from ClassLoader [jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528]\r\n\tat org.springframework.util.ReflectionUtils.getDeclaredMethods(ReflectionUtils.java:483)\r\n\tat org.springframework.util.ReflectionUtils.doWithMethods(ReflectionUtils.java:360)\r\n\tat org.springframework.util.ReflectionUtils.getUniqueDeclaredMethods(ReflectionUtils.java:417)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.lambda$getTypeForFactoryMethod$1(AbstractAutowireCapableBeanFactory.java:750)\r\n\tat java.base/java.util.concurrent.ConcurrentHashMap.computeIfAbsent(ConcurrentHashMap.java:1740)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryMethod(AbstractAutowireCapableBeanFactory.java:749)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.determineTargetType(AbstractAutowireCapableBeanFactory.java:682)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.predictBeanType(AbstractAutowireCapableBeanFactory.java:653)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.isFactoryBean(AbstractBeanFactory.java:1676)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:562)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:534)\r\n\tat org.springframework.boot.autoconfigure.condition.OnBeanCondition.collectBeanNamesForType(OnBeanCondition.java:247)\r\n\tat org.springframework.boot.autoconfigure.condition.OnBeanCondition.getBeanNamesForType(OnBeanCondition.java:240)\r\n\tat org.springframework.boot.autoconfigure.condition.OnBeanCondition.getBeanNamesForType(OnBeanCondition.java:230)\r\n\tat org.springframework.boot.autoconfigure.condition.OnBeanCondition.getMatchingBeans(OnBeanCondition.java:183)\r\n\tat org.springframework.boot.autoconfigure.condition.OnBeanCondition.getMatchOutcome(OnBeanCondition.java:158)\r\n\tat org.springframework.boot.autoconfigure.condition.SpringBootCondition.matches(SpringBootCondition.java:47)\r\n\t... 94 common frames omitted\r\nCaused by: java.lang.NoClassDefFoundError: org/springframework/boot/web/error/ErrorPageRegistrar\r\n\tat java.base/java.lang.ClassLoader.defineClass1(Native Method)\r\n\tat java.base/java.lang.ClassLoader.defineClass(ClassLoader.java:1027)\r\n\tat java.base/java.security.SecureClassLoader.defineClass(SecureClassLoader.java:150)\r\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.defineClass(BuiltinClassLoader.java:862)\r\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.findClassOnClassPathOrNull(BuiltinClassLoader.java:760)\r\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClassOrNull(BuiltinClassLoader.java:681)\r\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:639)\r\n\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)\r\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:526)\r\n\tat java.base/java.lang.Class.getDeclaredMethods0(Native Method)\r\n\tat java.base/java.lang.Class.privateGetDeclaredMethods(Class.java:3578)\r\n\tat java.base/java.lang.Class.getDeclaredMethods(Class.java:2676)\r\n\tat org.springframework.util.ReflectionUtils.getDeclaredMethods(ReflectionUtils.java:465)\r\n\t... 110 common frames omitted\r\nCaused by: java.lang.ClassNotFoundException: org.springframework.boot.web.error.ErrorPageRegistrar\r\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)\r\n\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)\r\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:526)\r\n\t... 123 common frames omitted\r\n"}
{"@timestamp":"2025-09-14T16:51:58.3524935-03:00","@version":"1","message":"Starting SecurityConfigTest using Java 21.0.5 with PID 14840 (started by flavi in C:\\Users\\flavi\\Downloads\\desafio-backend\\desafio-backend)","logger_name":"com.simplesdental.product.config.SecurityConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T16:51:58.360492-03:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.simplesdental.product.config.SecurityConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T16:51:58.9838528-03:00","@version":"1","message":"Exception encountered during context initialization - cancelling refresh attempt: java.lang.IllegalStateException: Error processing condition on org.springframework.boot.webmvc.autoconfigure.error.ErrorMvcAutoConfiguration.basicErrorController","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T16:51:58.9958511-03:00","@version":"1","message":"\r\n\r\nError starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.","logger_name":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T16:51:59.0158526-03:00","@version":"1","message":"Application run failed","logger_name":"org.springframework.boot.SpringApplication","thread_name":"main","level":"ERROR","level_value":40000,"stack_trace":"java.lang.IllegalStateException: Error processing condition on org.springframework.boot.webmvc.autoconfigure.error.ErrorMvcAutoConfiguration.basicErrorController\r\n\tat org.springframework.boot.autoconfigure.condition.SpringBootCondition.matches(SpringBootCondition.java:60)\r\n\tat org.springframework.context.annotation.ConditionEvaluator.shouldSkip(ConditionEvaluator.java:108)\r\n\tat org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForBeanMethod(ConfigurationClassBeanDefinitionReader.java:183)\r\n\tat org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForConfigurationClass(ConfigurationClassBeanDefinitionReader.java:144)\r\n\tat org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitions(ConfigurationClassBeanDefinitionReader.java:120)\r\n\tat org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:428)\r\n\tat org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:289)\r\n\tat org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:349)\r\n\tat org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:118)\r\n\tat org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:788)\r\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:606)\r\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)\r\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:334)\r\n\tat org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)\r\n\tat org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)\r\n\tat org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)\r\n\tat org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1454)\r\n\tat org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:553)\r\n\tat org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)\r\n\tat org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)\r\n\tat org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)\r\n\tat org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)\r\n\tat org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)\r\n\tat org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)\r\n\tat org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)\r\n\tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)\r\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\r\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\r\n\tat java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)\r\n\tat java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)\r\n\tat java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)\r\n\tat java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)\r\n\tat java.base/java.util.Optional.orElseGet(Optional.java:364)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)\r\n\tat org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)\r\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)\r\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)\r\n\tat org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)\r\n\tat org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)\r\n\tat com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)\r\n\tat com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)\r\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)\r\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)\r\nCaused by: java.lang.IllegalStateException: Failed to introspect Class [org.springframework.boot.webmvc.autoconfigure.error.ErrorMvcAutoConfiguration] from ClassLoader [jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528]\r\n\tat org.springframework.util.ReflectionUtils.getDeclaredMethods(ReflectionUtils.java:483)\r\n\tat org.springframework.util.ReflectionUtils.doWithMethods(ReflectionUtils.java:360)\r\n\tat org.springframework.util.ReflectionUtils.getUniqueDeclaredMethods(ReflectionUtils.java:417)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.lambda$getTypeForFactoryMethod$1(AbstractAutowireCapableBeanFactory.java:750)\r\n\tat java.base/java.util.concurrent.ConcurrentHashMap.computeIfAbsent(ConcurrentHashMap.java:1708)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryMethod(AbstractAutowireCapableBeanFactory.java:749)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.determineTargetType(AbstractAutowireCapableBeanFactory.java:682)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.predictBeanType(AbstractAutowireCapableBeanFactory.java:653)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.isFactoryBean(AbstractBeanFactory.java:1676)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:562)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:534)\r\n\tat org.springframework.boot.autoconfigure.condition.OnBeanCondition.collectBeanNamesForType(OnBeanCondition.java:247)\r\n\tat org.springframework.boot.autoconfigure.condition.OnBeanCondition.getBeanNamesForType(OnBeanCondition.java:240)\r\n\tat org.springframework.boot.autoconfigure.condition.OnBeanCondition.getBeanNamesForType(OnBeanCondition.java:230)\r\n\tat org.springframework.boot.autoconfigure.condition.OnBeanCondition.getMatchingBeans(OnBeanCondition.java:183)\r\n\tat org.springframework.boot.autoconfigure.condition.OnBeanCondition.getMatchOutcome(OnBeanCondition.java:158)\r\n\tat org.springframework.boot.autoconfigure.condition.SpringBootCondition.matches(SpringBootCondition.java:47)\r\n\t... 94 common frames omitted\r\nCaused by: java.lang.NoClassDefFoundError: org/springframework/boot/web/error/ErrorPageRegistrar\r\n\tat java.base/java.lang.ClassLoader.defineClass1(Native Method)\r\n\tat java.base/java.lang.ClassLoader.defineClass(ClassLoader.java:1027)\r\n\tat java.base/java.security.SecureClassLoader.defineClass(SecureClassLoader.java:150)\r\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.defineClass(BuiltinClassLoader.java:862)\r\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.findClassOnClassPathOrNull(BuiltinClassLoader.java:760)\r\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClassOrNull(BuiltinClassLoader.java:681)\r\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:639)\r\n\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)\r\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:526)\r\n\tat java.base/java.lang.Class.getDeclaredMethods0(Native Method)\r\n\tat java.base/java.lang.Class.privateGetDeclaredMethods(Class.java:3578)\r\n\tat java.base/java.lang.Class.getDeclaredMethods(Class.java:2676)\r\n\tat org.springframework.util.ReflectionUtils.getDeclaredMethods(ReflectionUtils.java:465)\r\n\t... 110 common frames omitted\r\nCaused by: java.lang.ClassNotFoundException: org.springframework.boot.web.error.ErrorPageRegistrar\r\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)\r\n\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)\r\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:526)\r\n\t... 123 common frames omitted\r\n"}
{"@timestamp":"2025-09-14T16:51:59.0268524-03:00","@version":"1","message":"Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] to prepare test instance [com.simplesdental.product.config.SecurityConfigTest@634ca3e7]","logger_name":"org.springframework.test.context.TestContextManager","thread_name":"main","level":"WARN","level_value":30000,"stack_trace":"java.lang.IllegalStateException: Failed to load ApplicationContext for [WebMergedContextConfiguration@16d0e521 testClass = com.simplesdental.product.config.SecurityConfigTest, locations = [], classes = [com.simplesdental.product.ProductApplication, com.simplesdental.product.config.SecurityConfigTest.JwtTestConfig], contextInitializerClasses = [], activeProfiles = [], propertySourceDescriptors = [], propertySourceProperties = [\"org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true\"], contextCustomizers = [org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@503f91c3, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@3b6d844d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@5038d0b5, org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@3f1d2e23, org.springframework.boot.test.context.SpringBootTestAnnotation@3ac3f411], resourceBasePath = \"src/main/webapp\", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:180)\r\n\tat org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)\r\n\tat org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)\r\n\tat org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)\r\n\tat org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)\r\n\tat org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)\r\n\tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)\r\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\r\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\r\n\tat java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)\r\n\tat java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)\r\n\tat java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)\r\n\tat java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)\r\n\tat java.base/java.util.Optional.orElseGet(Optional.java:364)\r\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)\r\n\tat org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)\r\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)\r\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)\r\n\tat org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)\r\n\tat org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)\r\n\tat com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)\r\n\tat com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)\r\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)\r\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)\r\nCaused by: java.lang.IllegalStateException: Error processing condition on org.springframework.boot.webmvc.autoconfigure.error.ErrorMvcAutoConfiguration.basicErrorController\r\n\tat org.springframework.boot.autoconfigure.condition.SpringBootCondition.matches(SpringBootCondition.java:60)\r\n\tat org.springframework.context.annotation.ConditionEvaluator.shouldSkip(ConditionEvaluator.java:108)\r\n\tat org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForBeanMethod(ConfigurationClassBeanDefinitionReader.java:183)\r\n\tat org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForConfigurationClass(ConfigurationClassBeanDefinitionReader.java:144)\r\n\tat org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitions(ConfigurationClassBeanDefinitionReader.java:120)\r\n\tat org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:428)\r\n\tat org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:289)\r\n\tat org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:349)\r\n\tat org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:118)\r\n\tat org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:788)\r\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:606)\r\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)\r\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:334)\r\n\tat org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)\r\n\tat org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)\r\n\tat org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)\r\n\tat org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1454)\r\n\tat org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:553)\r\n\tat org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)\r\n\tat org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)\r\n\t... 72 common frames omitted\r\nCaused by: java.lang.IllegalStateException: Failed to introspect Class [org.springframework.boot.webmvc.autoconfigure.error.ErrorMvcAutoConfiguration] from ClassLoader [jdk.internal.loader.ClassLoaders$AppClassLoader@76ed5528]\r\n\tat org.springframework.util.ReflectionUtils.getDeclaredMethods(ReflectionUtils.java:483)\r\n\tat org.springframework.util.ReflectionUtils.doWithMethods(ReflectionUtils.java:360)\r\n\tat org.springframework.util.ReflectionUtils.getUniqueDeclaredMethods(ReflectionUtils.java:417)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.lambda$getTypeForFactoryMethod$1(AbstractAutowireCapableBeanFactory.java:750)\r\n\tat java.base/java.util.concurrent.ConcurrentHashMap.computeIfAbsent(ConcurrentHashMap.java:1708)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryMethod(AbstractAutowireCapableBeanFactory.java:749)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.determineTargetType(AbstractAutowireCapableBeanFactory.java:682)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.predictBeanType(AbstractAutowireCapableBeanFactory.java:653)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.isFactoryBean(AbstractBeanFactory.java:1676)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:562)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:534)\r\n\tat org.springframework.boot.autoconfigure.condition.OnBeanCondition.collectBeanNamesForType(OnBeanCondition.java:247)\r\n\tat org.springframework.boot.autoconfigure.condition.OnBeanCondition.getBeanNamesForType(OnBeanCondition.java:240)\r\n\tat org.springframework.boot.autoconfigure.condition.OnBeanCondition.getBeanNamesForType(OnBeanCondition.java:230)\r\n\tat org.springframework.boot.autoconfigure.condition.OnBeanCondition.getMatchingBeans(OnBeanCondition.java:183)\r\n\tat org.springframework.boot.autoconfigure.condition.OnBeanCondition.getMatchOutcome(OnBeanCondition.java:158)\r\n\tat org.springframework.boot.autoconfigure.condition.SpringBootCondition.matches(SpringBootCondition.java:47)\r\n\t... 94 common frames omitted\r\nCaused by: java.lang.NoClassDefFoundError: org/springframework/boot/web/error/ErrorPageRegistrar\r\n\tat java.base/java.lang.ClassLoader.defineClass1(Native Method)\r\n\tat java.base/java.lang.ClassLoader.defineClass(ClassLoader.java:1027)\r\n\tat java.base/java.security.SecureClassLoader.defineClass(SecureClassLoader.java:150)\r\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.defineClass(BuiltinClassLoader.java:862)\r\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.findClassOnClassPathOrNull(BuiltinClassLoader.java:760)\r\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClassOrNull(BuiltinClassLoader.java:681)\r\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:639)\r\n\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)\r\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:526)\r\n\tat java.base/java.lang.Class.getDeclaredMethods0(Native Method)\r\n\tat java.base/java.lang.Class.privateGetDeclaredMethods(Class.java:3578)\r\n\tat java.base/java.lang.Class.getDeclaredMethods(Class.java:2676)\r\n\tat org.springframework.util.ReflectionUtils.getDeclaredMethods(ReflectionUtils.java:465)\r\n\t... 110 common frames omitted\r\nCaused by: java.lang.ClassNotFoundException: org.springframework.boot.web.error.ErrorPageRegistrar\r\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)\r\n\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)\r\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:526)\r\n\t... 123 common frames omitted\r\n"}
{"@timestamp":"2025-09-14T16:56:52.4692238-03:00","@version":"1","message":"Starting SwaggerConfigTest using Java 21.0.5 with PID 6232 (started by flavi in C:\\Users\\flavi\\Downloads\\desafio-backend\\desafio-backend)","logger_name":"com.simplesdental.product.config.SwaggerConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T16:56:52.4792238-03:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.simplesdental.product.config.SwaggerConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T16:56:52.6952232-03:00","@version":"1","message":"Started SwaggerConfigTest in 0.787 seconds (process running for 1.673)","logger_name":"com.simplesdental.product.config.SwaggerConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T17:33:53.6681253-03:00","@version":"1","message":"HV000001: Hibernate Validator 8.0.1.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T17:33:53.6991109-03:00","@version":"1","message":"Starting CategoryRepositoryTest using Java 21.0.5 with PID 31792 (started by flavi in C:\\Users\\flavi\\Downloads\\desafio-backend\\desafio-backend)","logger_name":"com.simplesdental.product.repository.CategoryRepositoryTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T17:33:53.7001087-03:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.simplesdental.product.repository.CategoryRepositoryTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T17:33:54.0909558-03:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T17:33:54.1428288-03:00","@version":"1","message":"Finished Spring Data repository scanning in 46 ms. Found 5 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T17:33:54.1851516-03:00","@version":"1","message":"Replacing 'dataSource' DataSource bean with embedded version","logger_name":"org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration$EmbeddedDataSourceBeanFactoryPostProcessor","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T17:33:54.3248969-03:00","@version":"1","message":"Starting embedded database: url='jdbc:h2:mem:fff1fe63-a61f-4068-90fd-106e8b12fc2f;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'","logger_name":"org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T17:33:54.5460418-03:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T17:33:54.6217218-03:00","@version":"1","message":"HHH000412: Hibernate ORM core version 6.4.4.Final","logger_name":"org.hibernate.Version","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T17:33:54.6588549-03:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T17:33:54.8909308-03:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T17:33:54.9450091-03:00","@version":"1","message":"HHH000511: The 2.2.0 version for [org.hibernate.dialect.PostgreSQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 12.0.0. Check the community dialects project for available legacy versions.","logger_name":"org.hibernate.dialect.Dialect","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T17:33:54.9515195-03:00","@version":"1","message":"HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)","logger_name":"org.hibernate.orm.deprecation","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T17:33:55.7979455-03:00","@version":"1","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T17:33:55.8120619-03:00","@version":"1","message":"\r\n    alter table if exists tb_products \r\n       drop constraint if exists fk_products_category","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:33:55.8140614-03:00","@version":"1","message":"\r\n    alter table if exists tb_products_v2 \r\n       drop constraint if exists fk_products_category_v2","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:33:55.8140614-03:00","@version":"1","message":"\r\n    alter table if exists tb_refresh_token \r\n       drop constraint if exists FKo1qldyy4gbjokinhqdllx5ej9","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:33:55.8140614-03:00","@version":"1","message":"\r\n    drop table if exists categories cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:33:55.8140614-03:00","@version":"1","message":"\r\n    drop table if exists tb_products cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:33:55.8155665-03:00","@version":"1","message":"\r\n    drop table if exists tb_products_v2 cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:33:55.8155665-03:00","@version":"1","message":"\r\n    drop table if exists tb_refresh_token cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:33:55.816573-03:00","@version":"1","message":"\r\n    drop table if exists tb_users cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:33:55.8205001-03:00","@version":"1","message":"\r\n    create table categories (\r\n        id bigserial not null,\r\n        name varchar(100) not null,\r\n        description varchar(255),\r\n        primary key (id)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:33:55.8282238-03:00","@version":"1","message":"\r\n    create table tb_products (\r\n        price numeric(19,2) not null,\r\n        status boolean not null,\r\n        category_id bigint not null,\r\n        id bigserial not null,\r\n        code varchar(50),\r\n        name varchar(100) not null,\r\n        description varchar(255),\r\n        primary key (id),\r\n        constraint uk_product_code unique (code),\r\n        check (price > 0)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:33:55.8357394-03:00","@version":"1","message":"\r\n    create table tb_products_v2 (\r\n        code integer,\r\n        price numeric(19,2) not null,\r\n        status boolean not null,\r\n        category_id bigint not null,\r\n        id bigserial not null,\r\n        name varchar(100) not null,\r\n        description varchar(255),\r\n        primary key (id),\r\n        constraint uk_product_v2_code unique (code),\r\n        check (price > 0)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:33:55.8372486-03:00","@version":"1","message":"\r\n    create table tb_refresh_token (\r\n        expiry_date timestamp(6) not null,\r\n        id bigserial not null,\r\n        user_id bigint not null,\r\n        token varchar(255) not null unique,\r\n        primary key (id)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:33:55.8382481-03:00","@version":"1","message":"\r\n    create table tb_users (\r\n        id bigserial not null,\r\n        email varchar(255) not null,\r\n        name varchar(255) not null,\r\n        password varchar(255) not null,\r\n        role varchar(255) not null check (role in ('ADMIN','USER')),\r\n        primary key (id),\r\n        constraint uk_user_email unique (email)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:33:55.8402493-03:00","@version":"1","message":"\r\n    create index idx_product_code \r\n       on tb_products (code)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:33:55.8412487-03:00","@version":"1","message":"\r\n    create index idx_product_v2_code \r\n       on tb_products_v2 (code)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:33:55.8412487-03:00","@version":"1","message":"\r\n    create index idx_refresh_token_token_value \r\n       on tb_refresh_token (token)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:33:55.8422482-03:00","@version":"1","message":"\r\n    create index idx_user_email \r\n       on tb_users (email)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:33:55.8422482-03:00","@version":"1","message":"\r\n    alter table if exists tb_products \r\n       add constraint fk_products_category \r\n       foreign key (category_id) \r\n       references categories","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:33:55.8442482-03:00","@version":"1","message":"\r\n    alter table if exists tb_products_v2 \r\n       add constraint fk_products_category_v2 \r\n       foreign key (category_id) \r\n       references categories","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:33:55.8457533-03:00","@version":"1","message":"\r\n    alter table if exists tb_refresh_token \r\n       add constraint FKo1qldyy4gbjokinhqdllx5ej9 \r\n       foreign key (user_id) \r\n       references tb_users","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:33:55.8507601-03:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T17:33:56.2486003-03:00","@version":"1","message":"Started CategoryRepositoryTest in 3.12 seconds (process running for 4.082)","logger_name":"com.simplesdental.product.repository.CategoryRepositoryTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T17:33:56.6335989-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:33:56.7127696-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:33:56.7240301-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:33:56.726541-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:33:56.7984664-03:00","@version":"1","message":"\r\n    select\r\n        c1_0.id,\r\n        c1_0.description,\r\n        c1_0.name \r\n    from\r\n        categories c1_0","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:33:56.8129778-03:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T17:33:56.8129778-03:00","@version":"1","message":"\r\n    alter table if exists tb_products \r\n       drop constraint if exists fk_products_category","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:33:56.8139747-03:00","@version":"1","message":"\r\n    alter table if exists tb_products_v2 \r\n       drop constraint if exists fk_products_category_v2","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:33:56.8139747-03:00","@version":"1","message":"\r\n    alter table if exists tb_refresh_token \r\n       drop constraint if exists FKo1qldyy4gbjokinhqdllx5ej9","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:33:56.8139747-03:00","@version":"1","message":"\r\n    drop table if exists categories cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:33:56.8154798-03:00","@version":"1","message":"\r\n    drop table if exists tb_products cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:33:56.8164859-03:00","@version":"1","message":"\r\n    drop table if exists tb_products_v2 cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:33:56.8174841-03:00","@version":"1","message":"\r\n    drop table if exists tb_refresh_token cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:33:56.8174841-03:00","@version":"1","message":"\r\n    drop table if exists tb_users cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:34:53.2543589-03:00","@version":"1","message":"HV000001: Hibernate Validator 8.0.1.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T17:34:53.2884094-03:00","@version":"1","message":"Starting ProductRepositoryTest using Java 21.0.5 with PID 22684 (started by flavi in C:\\Users\\flavi\\Downloads\\desafio-backend\\desafio-backend)","logger_name":"com.simplesdental.product.repository.ProductRepositoryTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T17:34:53.2896171-03:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.simplesdental.product.repository.ProductRepositoryTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T17:34:53.6338782-03:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T17:34:53.6927274-03:00","@version":"1","message":"Finished Spring Data repository scanning in 52 ms. Found 5 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T17:34:53.734913-03:00","@version":"1","message":"Replacing 'dataSource' DataSource bean with embedded version","logger_name":"org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration$EmbeddedDataSourceBeanFactoryPostProcessor","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T17:34:53.8879495-03:00","@version":"1","message":"Starting embedded database: url='jdbc:h2:mem:3e5a61bd-098a-4dde-bac4-73aa57108737;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'","logger_name":"org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T17:34:54.1194841-03:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T17:34:54.1862895-03:00","@version":"1","message":"HHH000412: Hibernate ORM core version 6.4.4.Final","logger_name":"org.hibernate.Version","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T17:34:54.2222342-03:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T17:34:54.4516403-03:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T17:34:54.4921875-03:00","@version":"1","message":"HHH000511: The 2.2.0 version for [org.hibernate.dialect.PostgreSQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 12.0.0. Check the community dialects project for available legacy versions.","logger_name":"org.hibernate.dialect.Dialect","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T17:34:54.497186-03:00","@version":"1","message":"HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)","logger_name":"org.hibernate.orm.deprecation","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T17:34:55.2659398-03:00","@version":"1","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T17:34:55.2779532-03:00","@version":"1","message":"\r\n    alter table if exists tb_products \r\n       drop constraint if exists fk_products_category","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:34:55.2799577-03:00","@version":"1","message":"\r\n    alter table if exists tb_products_v2 \r\n       drop constraint if exists fk_products_category_v2","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:34:55.2799577-03:00","@version":"1","message":"\r\n    alter table if exists tb_refresh_token \r\n       drop constraint if exists FKo1qldyy4gbjokinhqdllx5ej9","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:34:55.2799577-03:00","@version":"1","message":"\r\n    drop table if exists categories cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:34:55.2809594-03:00","@version":"1","message":"\r\n    drop table if exists tb_products cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:34:55.2809594-03:00","@version":"1","message":"\r\n    drop table if exists tb_products_v2 cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:34:55.2809594-03:00","@version":"1","message":"\r\n    drop table if exists tb_refresh_token cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:34:55.2809594-03:00","@version":"1","message":"\r\n    drop table if exists tb_users cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:34:55.2849634-03:00","@version":"1","message":"\r\n    create table categories (\r\n        id bigserial not null,\r\n        name varchar(100) not null,\r\n        description varchar(255),\r\n        primary key (id)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:34:55.2922047-03:00","@version":"1","message":"\r\n    create table tb_products (\r\n        price numeric(19,2) not null,\r\n        status boolean not null,\r\n        category_id bigint not null,\r\n        id bigserial not null,\r\n        code varchar(50),\r\n        name varchar(100) not null,\r\n        description varchar(255),\r\n        primary key (id),\r\n        constraint uk_product_code unique (code),\r\n        check (price > 0)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:34:55.300712-03:00","@version":"1","message":"\r\n    create table tb_products_v2 (\r\n        code integer,\r\n        price numeric(19,2) not null,\r\n        status boolean not null,\r\n        category_id bigint not null,\r\n        id bigserial not null,\r\n        name varchar(100) not null,\r\n        description varchar(255),\r\n        primary key (id),\r\n        constraint uk_product_v2_code unique (code),\r\n        check (price > 0)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:34:55.3017133-03:00","@version":"1","message":"\r\n    create table tb_refresh_token (\r\n        expiry_date timestamp(6) not null,\r\n        id bigserial not null,\r\n        user_id bigint not null,\r\n        token varchar(255) not null unique,\r\n        primary key (id)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:34:55.302714-03:00","@version":"1","message":"\r\n    create table tb_users (\r\n        id bigserial not null,\r\n        email varchar(255) not null,\r\n        name varchar(255) not null,\r\n        password varchar(255) not null,\r\n        role varchar(255) not null check (role in ('ADMIN','USER')),\r\n        primary key (id),\r\n        constraint uk_user_email unique (email)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:34:55.3047114-03:00","@version":"1","message":"\r\n    create index idx_product_code \r\n       on tb_products (code)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:34:55.3057117-03:00","@version":"1","message":"\r\n    create index idx_product_v2_code \r\n       on tb_products_v2 (code)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:34:55.3057117-03:00","@version":"1","message":"\r\n    create index idx_refresh_token_token_value \r\n       on tb_refresh_token (token)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:34:55.3057117-03:00","@version":"1","message":"\r\n    create index idx_user_email \r\n       on tb_users (email)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:34:55.3067125-03:00","@version":"1","message":"\r\n    alter table if exists tb_products \r\n       add constraint fk_products_category \r\n       foreign key (category_id) \r\n       references categories","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:34:55.3091854-03:00","@version":"1","message":"\r\n    alter table if exists tb_products_v2 \r\n       add constraint fk_products_category_v2 \r\n       foreign key (category_id) \r\n       references categories","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:34:55.3101849-03:00","@version":"1","message":"\r\n    alter table if exists tb_refresh_token \r\n       add constraint FKo1qldyy4gbjokinhqdllx5ej9 \r\n       foreign key (user_id) \r\n       references tb_users","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:34:55.3141857-03:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T17:34:55.65899-03:00","@version":"1","message":"Started ProductRepositoryTest in 2.944 seconds (process running for 3.903)","logger_name":"com.simplesdental.product.repository.ProductRepositoryTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T17:34:56.0293632-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:34:56.0448713-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:34:56.0689156-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:34:56.0699209-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:34:56.0821782-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:34:56.0831785-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:34:56.0966878-03:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T17:34:56.0966878-03:00","@version":"1","message":"\r\n    alter table if exists tb_products \r\n       drop constraint if exists fk_products_category","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:34:56.0981939-03:00","@version":"1","message":"\r\n    alter table if exists tb_products_v2 \r\n       drop constraint if exists fk_products_category_v2","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:34:56.0981939-03:00","@version":"1","message":"\r\n    alter table if exists tb_refresh_token \r\n       drop constraint if exists FKo1qldyy4gbjokinhqdllx5ej9","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:34:56.0991976-03:00","@version":"1","message":"\r\n    drop table if exists categories cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:34:56.0991976-03:00","@version":"1","message":"\r\n    drop table if exists tb_products cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:34:56.100196-03:00","@version":"1","message":"\r\n    drop table if exists tb_products_v2 cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:34:56.1011978-03:00","@version":"1","message":"\r\n    drop table if exists tb_refresh_token cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:34:56.1011978-03:00","@version":"1","message":"\r\n    drop table if exists tb_users cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:35:36.4067523-03:00","@version":"1","message":"HV000001: Hibernate Validator 8.0.1.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T17:35:36.4369167-03:00","@version":"1","message":"Starting ProductV2RepositoryTest using Java 21.0.5 with PID 11436 (started by flavi in C:\\Users\\flavi\\Downloads\\desafio-backend\\desafio-backend)","logger_name":"com.simplesdental.product.repository.ProductV2RepositoryTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T17:35:36.4369167-03:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.simplesdental.product.repository.ProductV2RepositoryTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T17:35:36.8194587-03:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T17:35:36.8826636-03:00","@version":"1","message":"Finished Spring Data repository scanning in 56 ms. Found 5 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T17:35:36.9280634-03:00","@version":"1","message":"Replacing 'dataSource' DataSource bean with embedded version","logger_name":"org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration$EmbeddedDataSourceBeanFactoryPostProcessor","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T17:35:37.0885503-03:00","@version":"1","message":"Starting embedded database: url='jdbc:h2:mem:aa450fdc-e75c-48f2-84ea-b3a6bacffc8e;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'","logger_name":"org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T17:35:37.3153923-03:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T17:35:37.3794857-03:00","@version":"1","message":"HHH000412: Hibernate ORM core version 6.4.4.Final","logger_name":"org.hibernate.Version","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T17:35:37.4125195-03:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T17:35:37.6623324-03:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T17:35:37.7074727-03:00","@version":"1","message":"HHH000511: The 2.2.0 version for [org.hibernate.dialect.PostgreSQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 12.0.0. Check the community dialects project for available legacy versions.","logger_name":"org.hibernate.dialect.Dialect","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T17:35:37.7124733-03:00","@version":"1","message":"HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)","logger_name":"org.hibernate.orm.deprecation","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T17:35:38.4668964-03:00","@version":"1","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T17:35:38.4784046-03:00","@version":"1","message":"\r\n    alter table if exists tb_products \r\n       drop constraint if exists fk_products_category","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:35:38.4814042-03:00","@version":"1","message":"\r\n    alter table if exists tb_products_v2 \r\n       drop constraint if exists fk_products_category_v2","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:35:38.4814042-03:00","@version":"1","message":"\r\n    alter table if exists tb_refresh_token \r\n       drop constraint if exists FKo1qldyy4gbjokinhqdllx5ej9","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:35:38.4814042-03:00","@version":"1","message":"\r\n    drop table if exists categories cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:35:38.4824096-03:00","@version":"1","message":"\r\n    drop table if exists tb_products cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:35:38.4824096-03:00","@version":"1","message":"\r\n    drop table if exists tb_products_v2 cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:35:38.4824096-03:00","@version":"1","message":"\r\n    drop table if exists tb_refresh_token cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:35:38.4824096-03:00","@version":"1","message":"\r\n    drop table if exists tb_users cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:35:38.4871394-03:00","@version":"1","message":"\r\n    create table categories (\r\n        id bigserial not null,\r\n        name varchar(100) not null,\r\n        description varchar(255),\r\n        primary key (id)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:35:38.4936491-03:00","@version":"1","message":"\r\n    create table tb_products (\r\n        price numeric(19,2) not null,\r\n        status boolean not null,\r\n        category_id bigint not null,\r\n        id bigserial not null,\r\n        code varchar(50),\r\n        name varchar(100) not null,\r\n        description varchar(255),\r\n        primary key (id),\r\n        constraint uk_product_code unique (code),\r\n        check (price > 0)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:35:38.5006486-03:00","@version":"1","message":"\r\n    create table tb_products_v2 (\r\n        code integer,\r\n        price numeric(19,2) not null,\r\n        status boolean not null,\r\n        category_id bigint not null,\r\n        id bigserial not null,\r\n        name varchar(100) not null,\r\n        description varchar(255),\r\n        primary key (id),\r\n        constraint uk_product_v2_code unique (code),\r\n        check (price > 0)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:35:38.5031609-03:00","@version":"1","message":"\r\n    create table tb_refresh_token (\r\n        expiry_date timestamp(6) not null,\r\n        id bigserial not null,\r\n        user_id bigint not null,\r\n        token varchar(255) not null unique,\r\n        primary key (id)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:35:38.5041599-03:00","@version":"1","message":"\r\n    create table tb_users (\r\n        id bigserial not null,\r\n        email varchar(255) not null,\r\n        name varchar(255) not null,\r\n        password varchar(255) not null,\r\n        role varchar(255) not null check (role in ('ADMIN','USER')),\r\n        primary key (id),\r\n        constraint uk_user_email unique (email)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:35:38.506159-03:00","@version":"1","message":"\r\n    create index idx_product_code \r\n       on tb_products (code)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:35:38.5071603-03:00","@version":"1","message":"\r\n    create index idx_product_v2_code \r\n       on tb_products_v2 (code)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:35:38.5071603-03:00","@version":"1","message":"\r\n    create index idx_refresh_token_token_value \r\n       on tb_refresh_token (token)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:35:38.5081608-03:00","@version":"1","message":"\r\n    create index idx_user_email \r\n       on tb_users (email)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:35:38.5081608-03:00","@version":"1","message":"\r\n    alter table if exists tb_products \r\n       add constraint fk_products_category \r\n       foreign key (category_id) \r\n       references categories","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:35:38.5111591-03:00","@version":"1","message":"\r\n    alter table if exists tb_products_v2 \r\n       add constraint fk_products_category_v2 \r\n       foreign key (category_id) \r\n       references categories","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:35:38.5111591-03:00","@version":"1","message":"\r\n    alter table if exists tb_refresh_token \r\n       add constraint FKo1qldyy4gbjokinhqdllx5ej9 \r\n       foreign key (user_id) \r\n       references tb_users","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:35:38.5162365-03:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T17:35:38.8791255-03:00","@version":"1","message":"Started ProductV2RepositoryTest in 3.022 seconds (process running for 3.981)","logger_name":"com.simplesdental.product.repository.ProductV2RepositoryTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T17:35:39.2933415-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:35:39.3088616-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products_v2\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:35:39.3234327-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:35:39.3254327-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products_v2\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:35:39.3399051-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:35:39.3409072-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products_v2\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:35:39.3474185-03:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T17:35:39.3474185-03:00","@version":"1","message":"\r\n    alter table if exists tb_products \r\n       drop constraint if exists fk_products_category","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:35:39.3484186-03:00","@version":"1","message":"\r\n    alter table if exists tb_products_v2 \r\n       drop constraint if exists fk_products_category_v2","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:35:39.3494172-03:00","@version":"1","message":"\r\n    alter table if exists tb_refresh_token \r\n       drop constraint if exists FKo1qldyy4gbjokinhqdllx5ej9","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:35:39.3494172-03:00","@version":"1","message":"\r\n    drop table if exists categories cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:35:39.3504175-03:00","@version":"1","message":"\r\n    drop table if exists tb_products cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:35:39.3504175-03:00","@version":"1","message":"\r\n    drop table if exists tb_products_v2 cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:35:39.3514161-03:00","@version":"1","message":"\r\n    drop table if exists tb_refresh_token cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:35:39.3524165-03:00","@version":"1","message":"\r\n    drop table if exists tb_users cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:36:11.033458-03:00","@version":"1","message":"HV000001: Hibernate Validator 8.0.1.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T17:36:11.0665231-03:00","@version":"1","message":"Starting RefreshTokenRepositoryTest using Java 21.0.5 with PID 21492 (started by flavi in C:\\Users\\flavi\\Downloads\\desafio-backend\\desafio-backend)","logger_name":"com.simplesdental.product.repository.RefreshTokenRepositoryTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T17:36:11.0665231-03:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.simplesdental.product.repository.RefreshTokenRepositoryTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T17:36:11.442458-03:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T17:36:11.5068812-03:00","@version":"1","message":"Finished Spring Data repository scanning in 58 ms. Found 5 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T17:36:11.5561303-03:00","@version":"1","message":"Replacing 'dataSource' DataSource bean with embedded version","logger_name":"org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration$EmbeddedDataSourceBeanFactoryPostProcessor","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T17:36:11.7088671-03:00","@version":"1","message":"Starting embedded database: url='jdbc:h2:mem:72893258-d3f3-48fb-96d8-54c8696e570b;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'","logger_name":"org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T17:36:11.9464652-03:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T17:36:12.0229394-03:00","@version":"1","message":"HHH000412: Hibernate ORM core version 6.4.4.Final","logger_name":"org.hibernate.Version","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T17:36:12.0623719-03:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T17:36:12.3177048-03:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T17:36:12.3593359-03:00","@version":"1","message":"HHH000511: The 2.2.0 version for [org.hibernate.dialect.PostgreSQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 12.0.0. Check the community dialects project for available legacy versions.","logger_name":"org.hibernate.dialect.Dialect","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T17:36:12.3643351-03:00","@version":"1","message":"HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)","logger_name":"org.hibernate.orm.deprecation","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T17:36:13.1382463-03:00","@version":"1","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T17:36:13.1507548-03:00","@version":"1","message":"\r\n    alter table if exists tb_products \r\n       drop constraint if exists fk_products_category","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:36:13.1527544-03:00","@version":"1","message":"\r\n    alter table if exists tb_products_v2 \r\n       drop constraint if exists fk_products_category_v2","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:36:13.1527544-03:00","@version":"1","message":"\r\n    alter table if exists tb_refresh_token \r\n       drop constraint if exists FKo1qldyy4gbjokinhqdllx5ej9","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:36:13.1527544-03:00","@version":"1","message":"\r\n    drop table if exists categories cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:36:13.1537553-03:00","@version":"1","message":"\r\n    drop table if exists tb_products cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:36:13.1537553-03:00","@version":"1","message":"\r\n    drop table if exists tb_products_v2 cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:36:13.1537553-03:00","@version":"1","message":"\r\n    drop table if exists tb_refresh_token cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:36:13.1537553-03:00","@version":"1","message":"\r\n    drop table if exists tb_users cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:36:13.157756-03:00","@version":"1","message":"\r\n    create table categories (\r\n        id bigserial not null,\r\n        name varchar(100) not null,\r\n        description varchar(255),\r\n        primary key (id)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:36:13.1649823-03:00","@version":"1","message":"\r\n    create table tb_products (\r\n        price numeric(19,2) not null,\r\n        status boolean not null,\r\n        category_id bigint not null,\r\n        id bigserial not null,\r\n        code varchar(50),\r\n        name varchar(100) not null,\r\n        description varchar(255),\r\n        primary key (id),\r\n        constraint uk_product_code unique (code),\r\n        check (price > 0)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:36:13.1724878-03:00","@version":"1","message":"\r\n    create table tb_products_v2 (\r\n        code integer,\r\n        price numeric(19,2) not null,\r\n        status boolean not null,\r\n        category_id bigint not null,\r\n        id bigserial not null,\r\n        name varchar(100) not null,\r\n        description varchar(255),\r\n        primary key (id),\r\n        constraint uk_product_v2_code unique (code),\r\n        check (price > 0)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:36:13.1744894-03:00","@version":"1","message":"\r\n    create table tb_refresh_token (\r\n        expiry_date timestamp(6) not null,\r\n        id bigserial not null,\r\n        user_id bigint not null,\r\n        token varchar(255) not null unique,\r\n        primary key (id)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:36:13.1754877-03:00","@version":"1","message":"\r\n    create table tb_users (\r\n        id bigserial not null,\r\n        email varchar(255) not null,\r\n        name varchar(255) not null,\r\n        password varchar(255) not null,\r\n        role varchar(255) not null check (role in ('ADMIN','USER')),\r\n        primary key (id),\r\n        constraint uk_user_email unique (email)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:36:13.1764887-03:00","@version":"1","message":"\r\n    create index idx_product_code \r\n       on tb_products (code)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:36:13.1779921-03:00","@version":"1","message":"\r\n    create index idx_product_v2_code \r\n       on tb_products_v2 (code)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:36:13.1779921-03:00","@version":"1","message":"\r\n    create index idx_refresh_token_token_value \r\n       on tb_refresh_token (token)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:36:13.1789966-03:00","@version":"1","message":"\r\n    create index idx_user_email \r\n       on tb_users (email)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:36:13.1789966-03:00","@version":"1","message":"\r\n    alter table if exists tb_products \r\n       add constraint fk_products_category \r\n       foreign key (category_id) \r\n       references categories","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:36:13.1819967-03:00","@version":"1","message":"\r\n    alter table if exists tb_products_v2 \r\n       add constraint fk_products_category_v2 \r\n       foreign key (category_id) \r\n       references categories","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:36:13.1829994-03:00","@version":"1","message":"\r\n    alter table if exists tb_refresh_token \r\n       add constraint FKo1qldyy4gbjokinhqdllx5ej9 \r\n       foreign key (user_id) \r\n       references tb_users","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:36:13.1869961-03:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T17:36:13.5457849-03:00","@version":"1","message":"Started RefreshTokenRepositoryTest in 3.079 seconds (process running for 4.031)","logger_name":"com.simplesdental.product.repository.RefreshTokenRepositoryTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T17:36:13.9306194-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_users\r\n        (email, name, password, role) \r\n    values\r\n        (?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:36:13.9476351-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_refresh_token\r\n        (expiry_date, token, user_id) \r\n    values\r\n        (?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:36:14.0333317-03:00","@version":"1","message":"\r\n    select\r\n        rt1_0.id,\r\n        rt1_0.expiry_date,\r\n        rt1_0.token,\r\n        rt1_0.user_id \r\n    from\r\n        tb_refresh_token rt1_0 \r\n    where\r\n        rt1_0.token=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:36:14.0490412-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_users\r\n        (email, name, password, role) \r\n    values\r\n        (?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:36:14.0500404-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_refresh_token\r\n        (expiry_date, token, user_id) \r\n    values\r\n        (?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:36:14.052041-03:00","@version":"1","message":"\r\n    select\r\n        rt1_0.id,\r\n        rt1_0.expiry_date,\r\n        rt1_0.token,\r\n        rt1_0.user_id \r\n    from\r\n        tb_refresh_token rt1_0 \r\n    where\r\n        rt1_0.token=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:36:14.0595527-03:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T17:36:14.0595527-03:00","@version":"1","message":"\r\n    alter table if exists tb_products \r\n       drop constraint if exists fk_products_category","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:36:14.0605533-03:00","@version":"1","message":"\r\n    alter table if exists tb_products_v2 \r\n       drop constraint if exists fk_products_category_v2","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:36:14.0615523-03:00","@version":"1","message":"\r\n    alter table if exists tb_refresh_token \r\n       drop constraint if exists FKo1qldyy4gbjokinhqdllx5ej9","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:36:14.0615523-03:00","@version":"1","message":"\r\n    drop table if exists categories cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:36:14.0625533-03:00","@version":"1","message":"\r\n    drop table if exists tb_products cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:36:14.0635528-03:00","@version":"1","message":"\r\n    drop table if exists tb_products_v2 cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:36:14.0645548-03:00","@version":"1","message":"\r\n    drop table if exists tb_refresh_token cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:36:14.0645548-03:00","@version":"1","message":"\r\n    drop table if exists tb_users cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:36:50.6309319-03:00","@version":"1","message":"HV000001: Hibernate Validator 8.0.1.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T17:36:50.6635608-03:00","@version":"1","message":"Starting UserRepositoryTest using Java 21.0.5 with PID 22352 (started by flavi in C:\\Users\\flavi\\Downloads\\desafio-backend\\desafio-backend)","logger_name":"com.simplesdental.product.repository.UserRepositoryTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T17:36:50.6645681-03:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.simplesdental.product.repository.UserRepositoryTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T17:36:51.0239966-03:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T17:36:51.0868165-03:00","@version":"1","message":"Finished Spring Data repository scanning in 56 ms. Found 5 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T17:36:51.1312602-03:00","@version":"1","message":"Replacing 'dataSource' DataSource bean with embedded version","logger_name":"org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration$EmbeddedDataSourceBeanFactoryPostProcessor","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T17:36:51.2833957-03:00","@version":"1","message":"Starting embedded database: url='jdbc:h2:mem:98a15924-4228-4763-b558-ac420cfb4386;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'","logger_name":"org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T17:36:51.5258213-03:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T17:36:51.5929926-03:00","@version":"1","message":"HHH000412: Hibernate ORM core version 6.4.4.Final","logger_name":"org.hibernate.Version","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T17:36:51.6283696-03:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T17:36:51.8564624-03:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T17:36:51.8991643-03:00","@version":"1","message":"HHH000511: The 2.2.0 version for [org.hibernate.dialect.PostgreSQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 12.0.0. Check the community dialects project for available legacy versions.","logger_name":"org.hibernate.dialect.Dialect","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T17:36:51.9046751-03:00","@version":"1","message":"HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)","logger_name":"org.hibernate.orm.deprecation","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T17:36:52.6743228-03:00","@version":"1","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T17:36:52.6858319-03:00","@version":"1","message":"\r\n    alter table if exists tb_products \r\n       drop constraint if exists fk_products_category","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:36:52.6878314-03:00","@version":"1","message":"\r\n    alter table if exists tb_products_v2 \r\n       drop constraint if exists fk_products_category_v2","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:36:52.6878314-03:00","@version":"1","message":"\r\n    alter table if exists tb_refresh_token \r\n       drop constraint if exists FKo1qldyy4gbjokinhqdllx5ej9","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:36:52.6888351-03:00","@version":"1","message":"\r\n    drop table if exists categories cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:36:52.6888351-03:00","@version":"1","message":"\r\n    drop table if exists tb_products cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:36:52.6888351-03:00","@version":"1","message":"\r\n    drop table if exists tb_products_v2 cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:36:52.6888351-03:00","@version":"1","message":"\r\n    drop table if exists tb_refresh_token cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:36:52.6898319-03:00","@version":"1","message":"\r\n    drop table if exists tb_users cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:36:52.6928306-03:00","@version":"1","message":"\r\n    create table categories (\r\n        id bigserial not null,\r\n        name varchar(100) not null,\r\n        description varchar(255),\r\n        primary key (id)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:36:52.6993374-03:00","@version":"1","message":"\r\n    create table tb_products (\r\n        price numeric(19,2) not null,\r\n        status boolean not null,\r\n        category_id bigint not null,\r\n        id bigserial not null,\r\n        code varchar(50),\r\n        name varchar(100) not null,\r\n        description varchar(255),\r\n        primary key (id),\r\n        constraint uk_product_code unique (code),\r\n        check (price > 0)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:36:52.7068464-03:00","@version":"1","message":"\r\n    create table tb_products_v2 (\r\n        code integer,\r\n        price numeric(19,2) not null,\r\n        status boolean not null,\r\n        category_id bigint not null,\r\n        id bigserial not null,\r\n        name varchar(100) not null,\r\n        description varchar(255),\r\n        primary key (id),\r\n        constraint uk_product_v2_code unique (code),\r\n        check (price > 0)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:36:52.7088459-03:00","@version":"1","message":"\r\n    create table tb_refresh_token (\r\n        expiry_date timestamp(6) not null,\r\n        id bigserial not null,\r\n        user_id bigint not null,\r\n        token varchar(255) not null unique,\r\n        primary key (id)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:36:52.7098462-03:00","@version":"1","message":"\r\n    create table tb_users (\r\n        id bigserial not null,\r\n        email varchar(255) not null,\r\n        name varchar(255) not null,\r\n        password varchar(255) not null,\r\n        role varchar(255) not null check (role in ('ADMIN','USER')),\r\n        primary key (id),\r\n        constraint uk_user_email unique (email)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:36:52.7118464-03:00","@version":"1","message":"\r\n    create index idx_product_code \r\n       on tb_products (code)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:36:52.712846-03:00","@version":"1","message":"\r\n    create index idx_product_v2_code \r\n       on tb_products_v2 (code)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:36:52.712846-03:00","@version":"1","message":"\r\n    create index idx_refresh_token_token_value \r\n       on tb_refresh_token (token)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:36:52.712846-03:00","@version":"1","message":"\r\n    create index idx_user_email \r\n       on tb_users (email)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:36:52.714068-03:00","@version":"1","message":"\r\n    alter table if exists tb_products \r\n       add constraint fk_products_category \r\n       foreign key (category_id) \r\n       references categories","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:36:52.7170629-03:00","@version":"1","message":"\r\n    alter table if exists tb_products_v2 \r\n       add constraint fk_products_category_v2 \r\n       foreign key (category_id) \r\n       references categories","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:36:52.7170629-03:00","@version":"1","message":"\r\n    alter table if exists tb_refresh_token \r\n       add constraint FKo1qldyy4gbjokinhqdllx5ej9 \r\n       foreign key (user_id) \r\n       references tb_users","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:36:52.7225658-03:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T17:36:53.0778914-03:00","@version":"1","message":"Started UserRepositoryTest in 3.004 seconds (process running for 3.966)","logger_name":"com.simplesdental.product.repository.UserRepositoryTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T17:36:53.5039801-03:00","@version":"1","message":"\r\n    select\r\n        u1_0.id,\r\n        u1_0.email,\r\n        u1_0.name,\r\n        u1_0.password,\r\n        u1_0.role \r\n    from\r\n        tb_users u1_0 \r\n    where\r\n        u1_0.email=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:36:53.5455356-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_users\r\n        (email, name, password, role) \r\n    values\r\n        (?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:36:53.5586546-03:00","@version":"1","message":"\r\n    select\r\n        u1_0.id,\r\n        u1_0.email,\r\n        u1_0.name,\r\n        u1_0.password,\r\n        u1_0.role \r\n    from\r\n        tb_users u1_0 \r\n    where\r\n        u1_0.email=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:36:53.5671683-03:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T17:36:53.5671683-03:00","@version":"1","message":"\r\n    alter table if exists tb_products \r\n       drop constraint if exists fk_products_category","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:36:53.568169-03:00","@version":"1","message":"\r\n    alter table if exists tb_products_v2 \r\n       drop constraint if exists fk_products_category_v2","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:36:53.5691687-03:00","@version":"1","message":"\r\n    alter table if exists tb_refresh_token \r\n       drop constraint if exists FKo1qldyy4gbjokinhqdllx5ej9","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:36:53.5691687-03:00","@version":"1","message":"\r\n    drop table if exists categories cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:36:53.5701695-03:00","@version":"1","message":"\r\n    drop table if exists tb_products cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:36:53.5711709-03:00","@version":"1","message":"\r\n    drop table if exists tb_products_v2 cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:36:53.5711709-03:00","@version":"1","message":"\r\n    drop table if exists tb_refresh_token cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T17:36:53.5726754-03:00","@version":"1","message":"\r\n    drop table if exists tb_users cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:03:35.3316092-03:00","@version":"1","message":"HV000001: Hibernate Validator 8.0.1.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:35.3566917-03:00","@version":"1","message":"Starting SwaggerConfigTest using Java 21.0.5 with PID 12668 (started by flavi in C:\\Users\\flavi\\Downloads\\desafio-backend\\desafio-backend)","logger_name":"com.simplesdental.product.config.SwaggerConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:35.3576935-03:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.simplesdental.product.config.SwaggerConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:35.6094423-03:00","@version":"1","message":"Started SwaggerConfigTest in 0.805 seconds (process running for 2.808)","logger_name":"com.simplesdental.product.config.SwaggerConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:35.9050586-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:35.9060586-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:35.9070576-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:36.1059533-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:36.1059533-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:36.1059533-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:36.122974-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:36.122974-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:36.122974-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:36.137076-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:36.137076-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:36.1380788-03:00","@version":"1","message":"Completed initialization in 1 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:36.1538171-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:36.1538171-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:36.154321-03:00","@version":"1","message":"Completed initialization in 1 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:36.5542707-03:00","@version":"1","message":"Tentativa de login para o email: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:36.5613527-03:00","@version":"1","message":"Refresh token criado para o usuário: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:36.5613527-03:00","@version":"1","message":"Login bem-sucedido para o usuário: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:36.5648643-03:00","@version":"1","message":"Tentativa de login para o email: notfound@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:36.5648643-03:00","@version":"1","message":"Usuário não encontrado: notfound@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:03:36.6360772-03:00","@version":"1","message":"Criando novo usuário com email: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:36.6543792-03:00","@version":"1","message":"Refresh token criado para o usuário: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:36.6576611-03:00","@version":"1","message":"Tentativa de login para o email: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:36.6586584-03:00","@version":"1","message":"Refresh token criado para o usuário: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:36.6586584-03:00","@version":"1","message":"Login bem-sucedido para o usuário: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:36.6782385-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.repository.ProductV2RepositoryTest]: ProductV2RepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:36.7295187-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.repository.ProductV2RepositoryTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:36.7586916-03:00","@version":"1","message":"Starting ProductV2RepositoryTest using Java 21.0.5 with PID 12668 (started by flavi in C:\\Users\\flavi\\Downloads\\desafio-backend\\desafio-backend)","logger_name":"com.simplesdental.product.repository.ProductV2RepositoryTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:36.7586916-03:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.simplesdental.product.repository.ProductV2RepositoryTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:36.9789199-03:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:37.027201-03:00","@version":"1","message":"Finished Spring Data repository scanning in 40 ms. Found 5 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:37.0662299-03:00","@version":"1","message":"Replacing 'dataSource' DataSource bean with embedded version","logger_name":"org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration$EmbeddedDataSourceBeanFactoryPostProcessor","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:37.1383009-03:00","@version":"1","message":"Starting embedded database: url='jdbc:h2:mem:29242b3c-694c-453a-a397-d18c6f561f81;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'","logger_name":"org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:37.3958361-03:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:37.4560203-03:00","@version":"1","message":"HHH000412: Hibernate ORM core version 6.4.4.Final","logger_name":"org.hibernate.Version","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:37.4855558-03:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:37.5731128-03:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:37.6122309-03:00","@version":"1","message":"HHH000511: The 2.2.0 version for [org.hibernate.dialect.PostgreSQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 12.0.0. Check the community dialects project for available legacy versions.","logger_name":"org.hibernate.dialect.Dialect","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:03:37.6167402-03:00","@version":"1","message":"HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)","logger_name":"org.hibernate.orm.deprecation","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:03:38.2285876-03:00","@version":"1","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:38.2411026-03:00","@version":"1","message":"\r\n    alter table if exists tb_products \r\n       drop constraint if exists fk_products_category","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:03:38.2436076-03:00","@version":"1","message":"\r\n    alter table if exists tb_products_v2 \r\n       drop constraint if exists fk_products_category_v2","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:03:38.2436076-03:00","@version":"1","message":"\r\n    alter table if exists tb_refresh_token \r\n       drop constraint if exists FKo1qldyy4gbjokinhqdllx5ej9","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:03:38.2436076-03:00","@version":"1","message":"\r\n    drop table if exists categories cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:03:38.2446106-03:00","@version":"1","message":"\r\n    drop table if exists tb_products cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:03:38.2446106-03:00","@version":"1","message":"\r\n    drop table if exists tb_products_v2 cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:03:38.2446106-03:00","@version":"1","message":"\r\n    drop table if exists tb_refresh_token cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:03:38.2446106-03:00","@version":"1","message":"\r\n    drop table if exists tb_users cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:03:38.2476091-03:00","@version":"1","message":"\r\n    create table categories (\r\n        id bigserial not null,\r\n        name varchar(100) not null,\r\n        description varchar(255),\r\n        primary key (id)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:03:38.2551215-03:00","@version":"1","message":"\r\n    create table tb_products (\r\n        price numeric(19,2) not null,\r\n        status boolean not null,\r\n        category_id bigint not null,\r\n        id bigserial not null,\r\n        code varchar(50),\r\n        name varchar(100) not null,\r\n        description varchar(255),\r\n        primary key (id),\r\n        constraint uk_product_code unique (code),\r\n        check (price > 0)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:03:38.2616309-03:00","@version":"1","message":"\r\n    create table tb_products_v2 (\r\n        code integer,\r\n        price numeric(19,2) not null,\r\n        status boolean not null,\r\n        category_id bigint not null,\r\n        id bigserial not null,\r\n        name varchar(100) not null,\r\n        description varchar(255),\r\n        primary key (id),\r\n        constraint uk_product_v2_code unique (code),\r\n        check (price > 0)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:03:38.2641409-03:00","@version":"1","message":"\r\n    create table tb_refresh_token (\r\n        expiry_date timestamp(6) not null,\r\n        id bigserial not null,\r\n        user_id bigint not null,\r\n        token varchar(255) not null unique,\r\n        primary key (id)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:03:38.2651461-03:00","@version":"1","message":"\r\n    create table tb_users (\r\n        id bigserial not null,\r\n        email varchar(255) not null,\r\n        name varchar(255) not null,\r\n        password varchar(255) not null,\r\n        role varchar(255) not null check (role in ('ADMIN','USER')),\r\n        primary key (id),\r\n        constraint uk_user_email unique (email)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:03:38.2671456-03:00","@version":"1","message":"\r\n    create index idx_product_code \r\n       on tb_products (code)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:03:38.2681452-03:00","@version":"1","message":"\r\n    create index idx_product_v2_code \r\n       on tb_products_v2 (code)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:03:38.2681452-03:00","@version":"1","message":"\r\n    create index idx_refresh_token_token_value \r\n       on tb_refresh_token (token)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:03:38.2681452-03:00","@version":"1","message":"\r\n    create index idx_user_email \r\n       on tb_users (email)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:03:38.2691453-03:00","@version":"1","message":"\r\n    alter table if exists tb_products \r\n       add constraint fk_products_category \r\n       foreign key (category_id) \r\n       references categories","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:03:38.2711462-03:00","@version":"1","message":"\r\n    alter table if exists tb_products_v2 \r\n       add constraint fk_products_category_v2 \r\n       foreign key (category_id) \r\n       references categories","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:03:38.2726514-03:00","@version":"1","message":"\r\n    alter table if exists tb_refresh_token \r\n       add constraint FKo1qldyy4gbjokinhqdllx5ej9 \r\n       foreign key (user_id) \r\n       references tb_users","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:03:38.2766561-03:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:38.6739579-03:00","@version":"1","message":"Started ProductV2RepositoryTest in 1.942 seconds (process running for 5.873)","logger_name":"com.simplesdental.product.repository.ProductV2RepositoryTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:38.7245056-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:03:38.7501768-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products_v2\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:03:38.7611981-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:03:38.7627034-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products_v2\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:03:38.7848229-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:03:38.7858235-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products_v2\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:03:38.8293877-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:38.8293877-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:38.8293877-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:38.8689425-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:38.8699425-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:38.8699425-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:38.8910721-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:38.8910721-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:38.8910721-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:38.9025814-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:38.9025814-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:38.903085-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:38.9100939-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:38.9110943-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:38.9110943-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:38.9256249-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.repository.ProductRepositoryTest]: ProductRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:38.9316258-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.repository.ProductRepositoryTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:38.935667-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:03:38.9376704-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:03:38.9426852-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:03:38.9437122-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:03:38.9477122-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:03:38.9497137-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:03:39.003759-03:00","@version":"1","message":"Buscando produtos - página: 0, tamanho: 10","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:39.003759-03:00","@version":"1","message":"Foram encontrados 1 produtos","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:39.0067642-03:00","@version":"1","message":"Salvando novo produto: Escova de Dentes","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:39.0067642-03:00","@version":"1","message":"Produto salvo com sucesso com id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:39.008764-03:00","@version":"1","message":"Buscando produto pelo id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:39.0107635-03:00","@version":"1","message":"Buscando produto pelo id: 2","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:39.0107635-03:00","@version":"1","message":"Produto não encontrado com id: 2","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"ERROR","level_value":40000}
{"@timestamp":"2025-09-14T18:03:39.0127628-03:00","@version":"1","message":"Atualizando produto id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:39.0127628-03:00","@version":"1","message":"Buscando produto pelo id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:39.0127628-03:00","@version":"1","message":"Produto atualizado com sucesso id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:39.0137979-03:00","@version":"1","message":"Deletando produto id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:39.0137979-03:00","@version":"1","message":"Buscando produto pelo id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:39.0137979-03:00","@version":"1","message":"Produto deletado com sucesso id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:39.3246784-03:00","@version":"1","message":"Buscando categorias - página: 0, tamanho: 10","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:39.3246784-03:00","@version":"1","message":"Foram encontradas 1 categorias","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:39.3266791-03:00","@version":"1","message":"Salvando nova categoria: Higiene Bucal","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:39.3266791-03:00","@version":"1","message":"Categoria salva com sucesso com id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:39.327677-03:00","@version":"1","message":"Buscando categoria pelo id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:39.3296753-03:00","@version":"1","message":"Atualizando categoria id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:39.3296753-03:00","@version":"1","message":"Categoria atualizada com sucesso: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:39.3316755-03:00","@version":"1","message":"Atualizando categoria id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:39.3316755-03:00","@version":"1","message":"Falha ao atualizar. Categoria não encontrada com id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"ERROR","level_value":40000}
{"@timestamp":"2025-09-14T18:03:39.3350214-03:00","@version":"1","message":"Deletando categoria id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:39.3350214-03:00","@version":"1","message":"Buscando categoria pelo id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:39.3350214-03:00","@version":"1","message":"Categoria deletada com sucesso id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:39.3370219-03:00","@version":"1","message":"Buscando categoria pelo id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:39.3370219-03:00","@version":"1","message":"Categoria não encontrada com id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"ERROR","level_value":40000}
{"@timestamp":"2025-09-14T18:03:39.3646231-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:39.3646231-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:39.3646231-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:39.3761417-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:39.3761417-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:39.3761417-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:39.3896521-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:39.3896521-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:39.3896521-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:39.4017687-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:39.4017687-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:39.4017687-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:39.4090395-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:39.4090395-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:39.4090395-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:39.4155476-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.repository.UserRepositoryTest]: UserRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:39.421549-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.repository.UserRepositoryTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:39.5130382-03:00","@version":"1","message":"\r\n    select\r\n        u1_0.id,\r\n        u1_0.email,\r\n        u1_0.name,\r\n        u1_0.password,\r\n        u1_0.role \r\n    from\r\n        tb_users u1_0 \r\n    where\r\n        u1_0.email=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:03:39.5204839-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_users\r\n        (email, name, password, role) \r\n    values\r\n        (?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:03:39.5278145-03:00","@version":"1","message":"\r\n    select\r\n        u1_0.id,\r\n        u1_0.email,\r\n        u1_0.name,\r\n        u1_0.password,\r\n        u1_0.role \r\n    from\r\n        tb_users u1_0 \r\n    where\r\n        u1_0.email=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:03:39.5333233-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.repository.CategoryRepositoryTest]: CategoryRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:39.5393357-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.repository.CategoryRepositoryTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:39.5438489-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:03:39.5528472-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:03:39.557408-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:03:39.5584157-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:03:39.5629218-03:00","@version":"1","message":"\r\n    select\r\n        c1_0.id,\r\n        c1_0.description,\r\n        c1_0.name \r\n    from\r\n        categories c1_0","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:03:39.5749614-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.repository.RefreshTokenRepositoryTest]: RefreshTokenRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:39.5809615-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.repository.RefreshTokenRepositoryTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:39.5849869-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_users\r\n        (email, name, password, role) \r\n    values\r\n        (?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:03:39.5859861-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_refresh_token\r\n        (expiry_date, token, user_id) \r\n    values\r\n        (?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:03:39.5945017-03:00","@version":"1","message":"\r\n    select\r\n        rt1_0.id,\r\n        rt1_0.expiry_date,\r\n        rt1_0.token,\r\n        rt1_0.user_id \r\n    from\r\n        tb_refresh_token rt1_0 \r\n    where\r\n        rt1_0.token=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:03:39.5995011-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_users\r\n        (email, name, password, role) \r\n    values\r\n        (?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:03:39.6015036-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_refresh_token\r\n        (expiry_date, token, user_id) \r\n    values\r\n        (?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:03:39.603012-03:00","@version":"1","message":"\r\n    select\r\n        rt1_0.id,\r\n        rt1_0.expiry_date,\r\n        rt1_0.token,\r\n        rt1_0.user_id \r\n    from\r\n        tb_refresh_token rt1_0 \r\n    where\r\n        rt1_0.token=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:03:39.6080134-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.config.JacksonConfigTest]: JacksonConfigTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:39.6195251-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.config.JacksonConfigTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:39.641124-03:00","@version":"1","message":"Starting JacksonConfigTest using Java 21.0.5 with PID 12668 (started by flavi in C:\\Users\\flavi\\Downloads\\desafio-backend\\desafio-backend)","logger_name":"com.simplesdental.product.config.JacksonConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:39.641124-03:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.simplesdental.product.config.JacksonConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:39.8050968-03:00","@version":"1","message":"Started JacksonConfigTest in 0.185 seconds (process running for 7.004)","logger_name":"com.simplesdental.product.config.JacksonConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:40.0117404-03:00","@version":"1","message":"Falha de validação: field: must not be null","logger_name":"com.simplesdental.product.Exceptions.GlobalExceptionHandler","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:03:40.0132452-03:00","@version":"1","message":"Erro inesperado: Unexpected error","logger_name":"com.simplesdental.product.Exceptions.GlobalExceptionHandler","thread_name":"main","level":"ERROR","level_value":40000,"stack_trace":"java.lang.Exception: Unexpected error\r\n\tat com.simplesdental.product.Exceptions.GlobalExceptionHandlerTest.testHandleAllExceptions(GlobalExceptionHandlerTest.java:78)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\r\n\tat org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)\r\n\tat org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)\r\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)\r\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)\r\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)\r\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)\r\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)\r\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)\r\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)\r\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)\r\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)\r\n\tat org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)\r\n\tat org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)\r\n\tat com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)\r\n\tat com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)\r\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)\r\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)\r\n"}
{"@timestamp":"2025-09-14T18:03:40.0172544-03:00","@version":"1","message":"Falha de autenticação: Invalid credentials","logger_name":"com.simplesdental.product.Exceptions.GlobalExceptionHandler","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:03:40.0182538-03:00","@version":"1","message":"Requisição não encontrada: Entity not found","logger_name":"com.simplesdental.product.Exceptions.GlobalExceptionHandler","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:03:40.1045481-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:40.1045481-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:40.1045481-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:40.159946-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:40.160945-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:40.160945-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:40.1755289-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:40.1755289-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:40.1755289-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:40.1869705-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:40.1869705-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:40.1869705-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:40.1954826-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:40.1954826-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:40.1954826-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:40.2316243-03:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:03:40.2326237-03:00","@version":"1","message":"\r\n    alter table if exists tb_products \r\n       drop constraint if exists fk_products_category","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:03:40.2338847-03:00","@version":"1","message":"\r\n    alter table if exists tb_products_v2 \r\n       drop constraint if exists fk_products_category_v2","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:03:40.2348858-03:00","@version":"1","message":"\r\n    alter table if exists tb_refresh_token \r\n       drop constraint if exists FKo1qldyy4gbjokinhqdllx5ej9","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:03:40.2358838-03:00","@version":"1","message":"\r\n    drop table if exists categories cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:03:40.2368843-03:00","@version":"1","message":"\r\n    drop table if exists tb_products cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:03:40.2378855-03:00","@version":"1","message":"\r\n    drop table if exists tb_products_v2 cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:03:40.2378855-03:00","@version":"1","message":"\r\n    drop table if exists tb_refresh_token cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:03:40.2388835-03:00","@version":"1","message":"\r\n    drop table if exists tb_users cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:05:51.7518485-03:00","@version":"1","message":"HV000001: Hibernate Validator 8.0.1.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:51.7753849-03:00","@version":"1","message":"Starting SwaggerConfigTest using Java 21.0.5 with PID 33276 (started by flavi in C:\\Users\\flavi\\Downloads\\desafio-backend\\desafio-backend)","logger_name":"com.simplesdental.product.config.SwaggerConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:51.7753849-03:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.simplesdental.product.config.SwaggerConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:52.0184118-03:00","@version":"1","message":"Started SwaggerConfigTest in 0.762 seconds (process running for 2.777)","logger_name":"com.simplesdental.product.config.SwaggerConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:52.3187115-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:52.3197103-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:52.3207087-03:00","@version":"1","message":"Completed initialization in 1 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:52.5104079-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:52.5104079-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:52.5104079-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:52.5264851-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:52.5264851-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:52.5264851-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:52.5375394-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:52.5375394-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:52.5375394-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:52.5506305-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:52.5506305-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:52.5506305-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:52.9113866-03:00","@version":"1","message":"Tentativa de login para o email: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:52.9174791-03:00","@version":"1","message":"Refresh token criado para o usuário: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:52.9184786-03:00","@version":"1","message":"Login bem-sucedido para o usuário: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:52.9214789-03:00","@version":"1","message":"Tentativa de login para o email: notfound@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:52.9214789-03:00","@version":"1","message":"Usuário não encontrado: notfound@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:05:52.9911594-03:00","@version":"1","message":"Criando novo usuário com email: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:53.0104816-03:00","@version":"1","message":"Refresh token criado para o usuário: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:53.0134821-03:00","@version":"1","message":"Tentativa de login para o email: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:53.0134821-03:00","@version":"1","message":"Senha incorreta para o usuário: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:05:53.028087-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.repository.ProductV2RepositoryTest]: ProductV2RepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:53.0714873-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.repository.ProductV2RepositoryTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:53.1051914-03:00","@version":"1","message":"Starting ProductV2RepositoryTest using Java 21.0.5 with PID 33276 (started by flavi in C:\\Users\\flavi\\Downloads\\desafio-backend\\desafio-backend)","logger_name":"com.simplesdental.product.repository.ProductV2RepositoryTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:53.1061974-03:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.simplesdental.product.repository.ProductV2RepositoryTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:53.3211576-03:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:53.3672211-03:00","@version":"1","message":"Finished Spring Data repository scanning in 40 ms. Found 5 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:53.4051761-03:00","@version":"1","message":"Replacing 'dataSource' DataSource bean with embedded version","logger_name":"org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration$EmbeddedDataSourceBeanFactoryPostProcessor","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:53.4713187-03:00","@version":"1","message":"Starting embedded database: url='jdbc:h2:mem:21251ea8-83fe-4281-800e-e52d8a7e571a;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'","logger_name":"org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:53.6952913-03:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:53.7442794-03:00","@version":"1","message":"HHH000412: Hibernate ORM core version 6.4.4.Final","logger_name":"org.hibernate.Version","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:53.7698058-03:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:53.8571878-03:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:53.8937124-03:00","@version":"1","message":"HHH000511: The 2.2.0 version for [org.hibernate.dialect.PostgreSQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 12.0.0. Check the community dialects project for available legacy versions.","logger_name":"org.hibernate.dialect.Dialect","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:05:53.8982219-03:00","@version":"1","message":"HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)","logger_name":"org.hibernate.orm.deprecation","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:05:54.5074876-03:00","@version":"1","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:54.5199982-03:00","@version":"1","message":"\r\n    alter table if exists tb_products \r\n       drop constraint if exists fk_products_category","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:05:54.5219979-03:00","@version":"1","message":"\r\n    alter table if exists tb_products_v2 \r\n       drop constraint if exists fk_products_category_v2","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:05:54.5219979-03:00","@version":"1","message":"\r\n    alter table if exists tb_refresh_token \r\n       drop constraint if exists FKo1qldyy4gbjokinhqdllx5ej9","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:05:54.5219979-03:00","@version":"1","message":"\r\n    drop table if exists categories cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:05:54.5230001-03:00","@version":"1","message":"\r\n    drop table if exists tb_products cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:05:54.5230001-03:00","@version":"1","message":"\r\n    drop table if exists tb_products_v2 cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:05:54.5230001-03:00","@version":"1","message":"\r\n    drop table if exists tb_refresh_token cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:05:54.5230001-03:00","@version":"1","message":"\r\n    drop table if exists tb_users cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:05:54.5265055-03:00","@version":"1","message":"\r\n    create table categories (\r\n        id bigserial not null,\r\n        name varchar(100) not null,\r\n        description varchar(255),\r\n        primary key (id)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:05:54.5335051-03:00","@version":"1","message":"\r\n    create table tb_products (\r\n        price numeric(19,2) not null,\r\n        status boolean not null,\r\n        category_id bigint not null,\r\n        id bigserial not null,\r\n        code varchar(50),\r\n        name varchar(100) not null,\r\n        description varchar(255),\r\n        primary key (id),\r\n        constraint uk_product_code unique (code),\r\n        check (price > 0)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:05:54.5460295-03:00","@version":"1","message":"\r\n    create table tb_products_v2 (\r\n        code integer,\r\n        price numeric(19,2) not null,\r\n        status boolean not null,\r\n        category_id bigint not null,\r\n        id bigserial not null,\r\n        name varchar(100) not null,\r\n        description varchar(255),\r\n        primary key (id),\r\n        constraint uk_product_v2_code unique (code),\r\n        check (price > 0)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:05:54.5480307-03:00","@version":"1","message":"\r\n    create table tb_refresh_token (\r\n        expiry_date timestamp(6) not null,\r\n        id bigserial not null,\r\n        user_id bigint not null,\r\n        token varchar(255) not null unique,\r\n        primary key (id)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:05:54.5490302-03:00","@version":"1","message":"\r\n    create table tb_users (\r\n        id bigserial not null,\r\n        email varchar(255) not null,\r\n        name varchar(255) not null,\r\n        password varchar(255) not null,\r\n        role varchar(255) not null check (role in ('ADMIN','USER')),\r\n        primary key (id),\r\n        constraint uk_user_email unique (email)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:05:54.5510287-03:00","@version":"1","message":"\r\n    create index idx_product_code \r\n       on tb_products (code)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:05:54.5520296-03:00","@version":"1","message":"\r\n    create index idx_product_v2_code \r\n       on tb_products_v2 (code)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:05:54.5520296-03:00","@version":"1","message":"\r\n    create index idx_refresh_token_token_value \r\n       on tb_refresh_token (token)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:05:54.5530324-03:00","@version":"1","message":"\r\n    create index idx_user_email \r\n       on tb_users (email)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:05:54.5530324-03:00","@version":"1","message":"\r\n    alter table if exists tb_products \r\n       add constraint fk_products_category \r\n       foreign key (category_id) \r\n       references categories","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:05:54.5565365-03:00","@version":"1","message":"\r\n    alter table if exists tb_products_v2 \r\n       add constraint fk_products_category_v2 \r\n       foreign key (category_id) \r\n       references categories","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:05:54.5565365-03:00","@version":"1","message":"\r\n    alter table if exists tb_refresh_token \r\n       add constraint FKo1qldyy4gbjokinhqdllx5ej9 \r\n       foreign key (user_id) \r\n       references tb_users","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:05:54.5615405-03:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:54.9982841-03:00","@version":"1","message":"Started ProductV2RepositoryTest in 1.924 seconds (process running for 5.756)","logger_name":"com.simplesdental.product.repository.ProductV2RepositoryTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:55.0601204-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:05:55.0858287-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products_v2\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:05:55.096863-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:05:55.0988639-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products_v2\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:05:55.120994-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:05:55.1229935-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products_v2\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:05:55.1712818-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:55.1712818-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:55.1712818-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:55.2129549-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:55.2129549-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:55.2129549-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:55.2333184-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:55.2333184-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:55.2333184-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:55.2423363-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:55.2423363-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:55.2433377-03:00","@version":"1","message":"Completed initialization in 1 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:55.248848-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:55.248848-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:55.248848-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:55.2629729-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.repository.ProductRepositoryTest]: ProductRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:55.2700239-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.repository.ProductRepositoryTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:55.275023-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:05:55.2760529-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:05:55.2800531-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:05:55.2810534-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:05:55.2860841-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:05:55.2870842-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:05:55.3321943-03:00","@version":"1","message":"Buscando produtos - página: 0, tamanho: 10","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:55.3331946-03:00","@version":"1","message":"Foram encontrados 1 produtos","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:55.3351944-03:00","@version":"1","message":"Salvando novo produto: Escova de Dentes","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:55.3351944-03:00","@version":"1","message":"Produto salvo com sucesso com id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:55.3362247-03:00","@version":"1","message":"Buscando produto pelo id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:55.3382237-03:00","@version":"1","message":"Buscando produto pelo id: 2","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:55.3382237-03:00","@version":"1","message":"Produto não encontrado com id: 2","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"ERROR","level_value":40000}
{"@timestamp":"2025-09-14T18:05:55.3402247-03:00","@version":"1","message":"Atualizando produto id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:55.3402247-03:00","@version":"1","message":"Buscando produto pelo id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:55.3402247-03:00","@version":"1","message":"Produto atualizado com sucesso id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:55.3422412-03:00","@version":"1","message":"Deletando produto id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:55.3422412-03:00","@version":"1","message":"Buscando produto pelo id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:55.3422412-03:00","@version":"1","message":"Produto deletado com sucesso id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:55.7251911-03:00","@version":"1","message":"Buscando categorias - página: 0, tamanho: 10","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:55.7251911-03:00","@version":"1","message":"Foram encontradas 1 categorias","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:55.7263415-03:00","@version":"1","message":"Salvando nova categoria: Higiene Bucal","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:55.7263415-03:00","@version":"1","message":"Categoria salva com sucesso com id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:55.7273409-03:00","@version":"1","message":"Buscando categoria pelo id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:55.7293416-03:00","@version":"1","message":"Atualizando categoria id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:55.7303415-03:00","@version":"1","message":"Categoria atualizada com sucesso: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:55.7323424-03:00","@version":"1","message":"Atualizando categoria id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:55.7323424-03:00","@version":"1","message":"Falha ao atualizar. Categoria não encontrada com id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"ERROR","level_value":40000}
{"@timestamp":"2025-09-14T18:05:55.735851-03:00","@version":"1","message":"Deletando categoria id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:55.735851-03:00","@version":"1","message":"Buscando categoria pelo id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:55.735851-03:00","@version":"1","message":"Categoria deletada com sucesso id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:55.7368525-03:00","@version":"1","message":"Buscando categoria pelo id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:55.7368525-03:00","@version":"1","message":"Categoria não encontrada com id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"ERROR","level_value":40000}
{"@timestamp":"2025-09-14T18:05:55.7660444-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:55.7670448-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:55.7670448-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:55.778094-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:55.778094-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:55.778094-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:55.7911808-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:55.7911808-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:55.7911808-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:55.8026923-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:55.8026923-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:55.8026923-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:55.8092017-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:55.8092017-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:55.8092017-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:55.8147066-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.repository.UserRepositoryTest]: UserRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:55.8207144-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.repository.UserRepositoryTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:55.9150488-03:00","@version":"1","message":"\r\n    select\r\n        u1_0.id,\r\n        u1_0.email,\r\n        u1_0.name,\r\n        u1_0.password,\r\n        u1_0.role \r\n    from\r\n        tb_users u1_0 \r\n    where\r\n        u1_0.email=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:05:55.9220548-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_users\r\n        (email, name, password, role) \r\n    values\r\n        (?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:05:55.9281879-03:00","@version":"1","message":"\r\n    select\r\n        u1_0.id,\r\n        u1_0.email,\r\n        u1_0.name,\r\n        u1_0.password,\r\n        u1_0.role \r\n    from\r\n        tb_users u1_0 \r\n    where\r\n        u1_0.email=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:05:55.9331884-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.repository.CategoryRepositoryTest]: CategoryRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:55.9396991-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.repository.CategoryRepositoryTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:55.9437769-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:05:55.9509473-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:05:55.9549476-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:05:55.9559892-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:05:55.962989-03:00","@version":"1","message":"\r\n    select\r\n        c1_0.id,\r\n        c1_0.description,\r\n        c1_0.name \r\n    from\r\n        categories c1_0","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:05:55.9770131-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.repository.RefreshTokenRepositoryTest]: RefreshTokenRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:55.9840182-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.repository.RefreshTokenRepositoryTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:55.9912066-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_users\r\n        (email, name, password, role) \r\n    values\r\n        (?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:05:55.9932058-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_refresh_token\r\n        (expiry_date, token, user_id) \r\n    values\r\n        (?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:05:56.002718-03:00","@version":"1","message":"\r\n    select\r\n        rt1_0.id,\r\n        rt1_0.expiry_date,\r\n        rt1_0.token,\r\n        rt1_0.user_id \r\n    from\r\n        tb_refresh_token rt1_0 \r\n    where\r\n        rt1_0.token=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:05:56.0102365-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_users\r\n        (email, name, password, role) \r\n    values\r\n        (?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:05:56.012238-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_refresh_token\r\n        (expiry_date, token, user_id) \r\n    values\r\n        (?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:05:56.0132371-03:00","@version":"1","message":"\r\n    select\r\n        rt1_0.id,\r\n        rt1_0.expiry_date,\r\n        rt1_0.token,\r\n        rt1_0.user_id \r\n    from\r\n        tb_refresh_token rt1_0 \r\n    where\r\n        rt1_0.token=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:05:56.0197483-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.config.JacksonConfigTest]: JacksonConfigTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:56.0318129-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.config.JacksonConfigTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:56.0520557-03:00","@version":"1","message":"Starting JacksonConfigTest using Java 21.0.5 with PID 33276 (started by flavi in C:\\Users\\flavi\\Downloads\\desafio-backend\\desafio-backend)","logger_name":"com.simplesdental.product.config.JacksonConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:56.0530555-03:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.simplesdental.product.config.JacksonConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:56.2189803-03:00","@version":"1","message":"Started JacksonConfigTest in 0.185 seconds (process running for 6.978)","logger_name":"com.simplesdental.product.config.JacksonConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:56.4098384-03:00","@version":"1","message":"Falha de validação: field: must not be null","logger_name":"com.simplesdental.product.Exceptions.GlobalExceptionHandler","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:05:56.4108384-03:00","@version":"1","message":"Erro inesperado: Unexpected error","logger_name":"com.simplesdental.product.Exceptions.GlobalExceptionHandler","thread_name":"main","level":"ERROR","level_value":40000,"stack_trace":"java.lang.Exception: Unexpected error\r\n\tat com.simplesdental.product.Exceptions.GlobalExceptionHandlerTest.testHandleAllExceptions(GlobalExceptionHandlerTest.java:78)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\r\n\tat org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)\r\n\tat org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)\r\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)\r\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)\r\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)\r\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)\r\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)\r\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)\r\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)\r\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)\r\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)\r\n\tat org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)\r\n\tat org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)\r\n\tat com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)\r\n\tat com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)\r\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)\r\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)\r\n"}
{"@timestamp":"2025-09-14T18:05:56.4158832-03:00","@version":"1","message":"Falha de autenticação: Invalid credentials","logger_name":"com.simplesdental.product.Exceptions.GlobalExceptionHandler","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:05:56.4168825-03:00","@version":"1","message":"Requisição não encontrada: Entity not found","logger_name":"com.simplesdental.product.Exceptions.GlobalExceptionHandler","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:05:56.5009486-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:56.5009486-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:56.5009486-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:56.5531099-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:56.5531099-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:56.5546136-03:00","@version":"1","message":"Completed initialization in 1 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:56.5677422-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:56.5677422-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:56.5677422-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:56.5772598-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:56.5772598-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:56.578259-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:56.583258-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:56.583258-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:56.583258-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:56.6169214-03:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:05:56.6179211-03:00","@version":"1","message":"\r\n    alter table if exists tb_products \r\n       drop constraint if exists fk_products_category","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:05:56.618921-03:00","@version":"1","message":"\r\n    alter table if exists tb_products_v2 \r\n       drop constraint if exists fk_products_category_v2","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:05:56.6199213-03:00","@version":"1","message":"\r\n    alter table if exists tb_refresh_token \r\n       drop constraint if exists FKo1qldyy4gbjokinhqdllx5ej9","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:05:56.6209211-03:00","@version":"1","message":"\r\n    drop table if exists categories cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:05:56.6219209-03:00","@version":"1","message":"\r\n    drop table if exists tb_products cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:05:56.622922-03:00","@version":"1","message":"\r\n    drop table if exists tb_products_v2 cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:05:56.622922-03:00","@version":"1","message":"\r\n    drop table if exists tb_refresh_token cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:05:56.6239213-03:00","@version":"1","message":"\r\n    drop table if exists tb_users cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:12:11.3342992-03:00","@version":"1","message":"HV000001: Hibernate Validator 8.0.1.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:11.3579551-03:00","@version":"1","message":"Starting SwaggerConfigTest using Java 21.0.5 with PID 20796 (started by flavi in C:\\Users\\flavi\\Downloads\\desafio-backend\\desafio-backend)","logger_name":"com.simplesdental.product.config.SwaggerConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:11.3589542-03:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.simplesdental.product.config.SwaggerConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:11.5777261-03:00","@version":"1","message":"Started SwaggerConfigTest in 0.751 seconds (process running for 2.802)","logger_name":"com.simplesdental.product.config.SwaggerConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:11.8559665-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:11.8559665-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:11.8581049-03:00","@version":"1","message":"Completed initialization in 2 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:12.0536946-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:12.0536946-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:12.0536946-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:12.0677116-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:12.0677116-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:12.0677116-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:12.0786017-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:12.0786017-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:12.0786017-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:12.0906691-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:12.0906691-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:12.0906691-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:12.4438445-03:00","@version":"1","message":"Tentativa de login para o email: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:12.4498967-03:00","@version":"1","message":"Refresh token criado para o usuário: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:12.4498967-03:00","@version":"1","message":"Login bem-sucedido para o usuário: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:12.4538969-03:00","@version":"1","message":"Tentativa de login para o email: notfound@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:12.4538969-03:00","@version":"1","message":"Usuário não encontrado: notfound@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:12:12.5165812-03:00","@version":"1","message":"Criando novo usuário com email: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:12.5337739-03:00","@version":"1","message":"Refresh token criado para o usuário: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:12.5368755-03:00","@version":"1","message":"Tentativa de login para o email: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:12.5378743-03:00","@version":"1","message":"Senha incorreta para o usuário: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:12:12.551904-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.repository.ProductV2RepositoryTest]: ProductV2RepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:12.5988063-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.repository.ProductV2RepositoryTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:12.63092-03:00","@version":"1","message":"Starting ProductV2RepositoryTest using Java 21.0.5 with PID 20796 (started by flavi in C:\\Users\\flavi\\Downloads\\desafio-backend\\desafio-backend)","logger_name":"com.simplesdental.product.repository.ProductV2RepositoryTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:12.63092-03:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.simplesdental.product.repository.ProductV2RepositoryTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:12.8482336-03:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:12.883915-03:00","@version":"1","message":"Finished Spring Data repository scanning in 31 ms. Found 5 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:12.9245278-03:00","@version":"1","message":"Replacing 'dataSource' DataSource bean with embedded version","logger_name":"org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration$EmbeddedDataSourceBeanFactoryPostProcessor","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:12.9920529-03:00","@version":"1","message":"Starting embedded database: url='jdbc:h2:mem:2a6f4dcd-8c97-4bc3-b1a2-5d284c6a908d;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'","logger_name":"org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:13.2088675-03:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:13.2625142-03:00","@version":"1","message":"HHH000412: Hibernate ORM core version 6.4.4.Final","logger_name":"org.hibernate.Version","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:13.2887622-03:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:13.3770082-03:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:13.4185888-03:00","@version":"1","message":"HHH000511: The 2.2.0 version for [org.hibernate.dialect.PostgreSQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 12.0.0. Check the community dialects project for available legacy versions.","logger_name":"org.hibernate.dialect.Dialect","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:12:13.4235888-03:00","@version":"1","message":"HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)","logger_name":"org.hibernate.orm.deprecation","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:12:14.0492384-03:00","@version":"1","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:14.0617473-03:00","@version":"1","message":"\r\n    alter table if exists tb_products \r\n       drop constraint if exists fk_products_category","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:12:14.0637484-03:00","@version":"1","message":"\r\n    alter table if exists tb_products_v2 \r\n       drop constraint if exists fk_products_category_v2","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:12:14.0637484-03:00","@version":"1","message":"\r\n    alter table if exists tb_refresh_token \r\n       drop constraint if exists FKo1qldyy4gbjokinhqdllx5ej9","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:12:14.0652523-03:00","@version":"1","message":"\r\n    drop table if exists categories cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:12:14.0652523-03:00","@version":"1","message":"\r\n    drop table if exists tb_products cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:12:14.0652523-03:00","@version":"1","message":"\r\n    drop table if exists tb_products_v2 cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:12:14.0652523-03:00","@version":"1","message":"\r\n    drop table if exists tb_refresh_token cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:12:14.0652523-03:00","@version":"1","message":"\r\n    drop table if exists tb_users cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:12:14.0692565-03:00","@version":"1","message":"\r\n    create table categories (\r\n        id bigserial not null,\r\n        name varchar(100) not null,\r\n        description varchar(255),\r\n        primary key (id)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:12:14.0752683-03:00","@version":"1","message":"\r\n    create table tb_products (\r\n        price numeric(19,2) not null,\r\n        status boolean not null,\r\n        category_id bigint not null,\r\n        id bigserial not null,\r\n        code varchar(50),\r\n        name varchar(100) not null,\r\n        description varchar(255),\r\n        primary key (id),\r\n        constraint uk_product_code unique (code),\r\n        check (price > 0)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:12:14.0832729-03:00","@version":"1","message":"\r\n    create table tb_products_v2 (\r\n        code integer,\r\n        price numeric(19,2) not null,\r\n        status boolean not null,\r\n        category_id bigint not null,\r\n        id bigserial not null,\r\n        name varchar(100) not null,\r\n        description varchar(255),\r\n        primary key (id),\r\n        constraint uk_product_v2_code unique (code),\r\n        check (price > 0)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:12:14.0852774-03:00","@version":"1","message":"\r\n    create table tb_refresh_token (\r\n        expiry_date timestamp(6) not null,\r\n        id bigserial not null,\r\n        user_id bigint not null,\r\n        token varchar(255) not null unique,\r\n        primary key (id)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:12:14.0864113-03:00","@version":"1","message":"\r\n    create table tb_users (\r\n        id bigserial not null,\r\n        email varchar(255) not null,\r\n        name varchar(255) not null,\r\n        password varchar(255) not null,\r\n        role varchar(255) not null check (role in ('ADMIN','USER')),\r\n        primary key (id),\r\n        constraint uk_user_email unique (email)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:12:14.0884097-03:00","@version":"1","message":"\r\n    create index idx_product_code \r\n       on tb_products (code)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:12:14.0884097-03:00","@version":"1","message":"\r\n    create index idx_product_v2_code \r\n       on tb_products_v2 (code)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:12:14.0894099-03:00","@version":"1","message":"\r\n    create index idx_refresh_token_token_value \r\n       on tb_refresh_token (token)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:12:14.0894099-03:00","@version":"1","message":"\r\n    create index idx_user_email \r\n       on tb_users (email)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:12:14.0894099-03:00","@version":"1","message":"\r\n    alter table if exists tb_products \r\n       add constraint fk_products_category \r\n       foreign key (category_id) \r\n       references categories","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:12:14.0934094-03:00","@version":"1","message":"\r\n    alter table if exists tb_products_v2 \r\n       add constraint fk_products_category_v2 \r\n       foreign key (category_id) \r\n       references categories","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:12:14.0934094-03:00","@version":"1","message":"\r\n    alter table if exists tb_refresh_token \r\n       add constraint FKo1qldyy4gbjokinhqdllx5ej9 \r\n       foreign key (user_id) \r\n       references tb_users","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:12:14.0984467-03:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:14.468404-03:00","@version":"1","message":"Started ProductV2RepositoryTest in 1.867 seconds (process running for 5.692)","logger_name":"com.simplesdental.product.repository.ProductV2RepositoryTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:14.5284881-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:12:14.557452-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products_v2\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:12:14.5679452-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:12:14.569944-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products_v2\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:12:14.5918837-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:12:14.5938853-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products_v2\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:12:14.6400872-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:14.6400872-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:14.6400872-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:14.6818053-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:14.6818053-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:14.6818053-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:14.7043565-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:14.7043565-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:14.7043565-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:14.7153691-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:14.7163759-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:14.7163759-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:14.7233738-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:14.7233738-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:14.7233738-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:14.73863-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.repository.ProductRepositoryTest]: ProductRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:14.7456304-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.repository.ProductRepositoryTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:14.7501401-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:12:14.7521391-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:12:14.7576479-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:12:14.758648-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:12:14.7636488-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:12:14.7646487-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:12:14.8153157-03:00","@version":"1","message":"Buscando produtos - página: 0, tamanho: 10","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:14.8153157-03:00","@version":"1","message":"Foram encontrados 1 produtos","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:14.8173568-03:00","@version":"1","message":"Salvando novo produto: Escova de Dentes","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:14.8183563-03:00","@version":"1","message":"Produto salvo com sucesso com id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:14.8203573-03:00","@version":"1","message":"Buscando produto pelo id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:14.822356-03:00","@version":"1","message":"Buscando produto pelo id: 2","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:14.8233566-03:00","@version":"1","message":"Produto não encontrado com id: 2","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"ERROR","level_value":40000}
{"@timestamp":"2025-09-14T18:12:14.8243563-03:00","@version":"1","message":"Atualizando produto id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:14.8243563-03:00","@version":"1","message":"Buscando produto pelo id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:14.8243563-03:00","@version":"1","message":"Produto atualizado com sucesso id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:14.8253582-03:00","@version":"1","message":"Deletando produto id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:14.8253582-03:00","@version":"1","message":"Buscando produto pelo id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:14.8264864-03:00","@version":"1","message":"Produto deletado com sucesso id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:15.1842669-03:00","@version":"1","message":"Buscando categorias - página: 0, tamanho: 10","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:15.1842669-03:00","@version":"1","message":"Foram encontradas 1 categorias","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:15.1866704-03:00","@version":"1","message":"Salvando nova categoria: Higiene Bucal","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:15.1866704-03:00","@version":"1","message":"Categoria salva com sucesso com id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:15.187676-03:00","@version":"1","message":"Buscando categoria pelo id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:15.1896819-03:00","@version":"1","message":"Atualizando categoria id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:15.190682-03:00","@version":"1","message":"Categoria atualizada com sucesso: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:15.1926814-03:00","@version":"1","message":"Atualizando categoria id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:15.1926814-03:00","@version":"1","message":"Falha ao atualizar. Categoria não encontrada com id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"ERROR","level_value":40000}
{"@timestamp":"2025-09-14T18:12:15.1961915-03:00","@version":"1","message":"Deletando categoria id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:15.1961915-03:00","@version":"1","message":"Buscando categoria pelo id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:15.1961915-03:00","@version":"1","message":"Categoria deletada com sucesso id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:15.1981918-03:00","@version":"1","message":"Buscando categoria pelo id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:15.1981918-03:00","@version":"1","message":"Categoria não encontrada com id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"ERROR","level_value":40000}
{"@timestamp":"2025-09-14T18:12:15.2253634-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:15.2253634-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:15.2253634-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:15.2365712-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:15.2365712-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:15.2365712-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:15.2497425-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:15.2497425-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:15.2497425-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:15.260253-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:15.260253-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:15.260253-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:15.2672696-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:15.2672696-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:15.2672696-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:15.2734304-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.repository.UserRepositoryTest]: UserRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:15.2798747-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.repository.UserRepositoryTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:15.3812746-03:00","@version":"1","message":"\r\n    select\r\n        u1_0.id,\r\n        u1_0.email,\r\n        u1_0.name,\r\n        u1_0.password,\r\n        u1_0.role \r\n    from\r\n        tb_users u1_0 \r\n    where\r\n        u1_0.email=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:12:15.3885942-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_users\r\n        (email, name, password, role) \r\n    values\r\n        (?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:12:15.3935937-03:00","@version":"1","message":"\r\n    select\r\n        u1_0.id,\r\n        u1_0.email,\r\n        u1_0.name,\r\n        u1_0.password,\r\n        u1_0.role \r\n    from\r\n        tb_users u1_0 \r\n    where\r\n        u1_0.email=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:12:15.3991034-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.repository.CategoryRepositoryTest]: CategoryRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:15.4051023-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.repository.CategoryRepositoryTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:15.4092356-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:12:15.4183341-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:12:15.4233328-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:12:15.4243344-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:12:15.4304213-03:00","@version":"1","message":"\r\n    select\r\n        c1_0.id,\r\n        c1_0.description,\r\n        c1_0.name \r\n    from\r\n        categories c1_0","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:12:15.4434852-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.repository.RefreshTokenRepositoryTest]: RefreshTokenRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:15.4509155-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.repository.RefreshTokenRepositoryTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:15.4554239-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_users\r\n        (email, name, password, role) \r\n    values\r\n        (?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:12:15.4574372-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_refresh_token\r\n        (expiry_date, token, user_id) \r\n    values\r\n        (?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:12:15.4675611-03:00","@version":"1","message":"\r\n    select\r\n        rt1_0.id,\r\n        rt1_0.expiry_date,\r\n        rt1_0.token,\r\n        rt1_0.user_id \r\n    from\r\n        tb_refresh_token rt1_0 \r\n    where\r\n        rt1_0.token=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:12:15.4730718-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_users\r\n        (email, name, password, role) \r\n    values\r\n        (?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:12:15.4740714-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_refresh_token\r\n        (expiry_date, token, user_id) \r\n    values\r\n        (?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:12:15.4765811-03:00","@version":"1","message":"\r\n    select\r\n        rt1_0.id,\r\n        rt1_0.expiry_date,\r\n        rt1_0.token,\r\n        rt1_0.user_id \r\n    from\r\n        tb_refresh_token rt1_0 \r\n    where\r\n        rt1_0.token=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:12:15.4815801-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.config.JacksonConfigTest]: JacksonConfigTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:15.4930907-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.config.JacksonConfigTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:15.5112346-03:00","@version":"1","message":"Starting JacksonConfigTest using Java 21.0.5 with PID 20796 (started by flavi in C:\\Users\\flavi\\Downloads\\desafio-backend\\desafio-backend)","logger_name":"com.simplesdental.product.config.JacksonConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:15.5112346-03:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.simplesdental.product.config.JacksonConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:15.6794807-03:00","@version":"1","message":"Started JacksonConfigTest in 0.185 seconds (process running for 6.903)","logger_name":"com.simplesdental.product.config.JacksonConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:15.8771952-03:00","@version":"1","message":"Falha de validação: field: must not be null","logger_name":"com.simplesdental.product.Exceptions.GlobalExceptionHandler","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:12:15.8801958-03:00","@version":"1","message":"Erro inesperado: Unexpected error","logger_name":"com.simplesdental.product.Exceptions.GlobalExceptionHandler","thread_name":"main","level":"ERROR","level_value":40000,"stack_trace":"java.lang.Exception: Unexpected error\r\n\tat com.simplesdental.product.Exceptions.GlobalExceptionHandlerTest.testHandleAllExceptions(GlobalExceptionHandlerTest.java:78)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\r\n\tat org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)\r\n\tat org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)\r\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)\r\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)\r\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)\r\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)\r\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)\r\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)\r\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)\r\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)\r\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)\r\n\tat org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)\r\n\tat org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)\r\n\tat com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)\r\n\tat com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)\r\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)\r\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)\r\n"}
{"@timestamp":"2025-09-14T18:12:15.8841947-03:00","@version":"1","message":"Falha de autenticação: Invalid credentials","logger_name":"com.simplesdental.product.Exceptions.GlobalExceptionHandler","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:12:15.8851949-03:00","@version":"1","message":"Requisição não encontrada: Entity not found","logger_name":"com.simplesdental.product.Exceptions.GlobalExceptionHandler","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:12:15.9631608-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:15.9631608-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:15.9641628-03:00","@version":"1","message":"Completed initialization in 1 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:16.0224484-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:16.0224484-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:16.0224484-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:16.0354655-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:16.0354655-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:16.0354655-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:16.0444708-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:16.0444708-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:16.0444708-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:16.0509884-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:16.0509884-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:16.0509884-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:16.088388-03:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:12:16.0893876-03:00","@version":"1","message":"\r\n    alter table if exists tb_products \r\n       drop constraint if exists fk_products_category","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:12:16.091387-03:00","@version":"1","message":"\r\n    alter table if exists tb_products_v2 \r\n       drop constraint if exists fk_products_category_v2","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:12:16.091387-03:00","@version":"1","message":"\r\n    alter table if exists tb_refresh_token \r\n       drop constraint if exists FKo1qldyy4gbjokinhqdllx5ej9","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:12:16.0923884-03:00","@version":"1","message":"\r\n    drop table if exists categories cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:12:16.0933879-03:00","@version":"1","message":"\r\n    drop table if exists tb_products cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:12:16.0943889-03:00","@version":"1","message":"\r\n    drop table if exists tb_products_v2 cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:12:16.0943889-03:00","@version":"1","message":"\r\n    drop table if exists tb_refresh_token cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:12:16.0943889-03:00","@version":"1","message":"\r\n    drop table if exists tb_users cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:16:14.0264597-03:00","@version":"1","message":"HV000001: Hibernate Validator 8.0.1.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:14.0524879-03:00","@version":"1","message":"Starting SwaggerConfigTest using Java 21.0.5 with PID 14184 (started by flavi in C:\\Users\\flavi\\Downloads\\desafio-backend\\desafio-backend)","logger_name":"com.simplesdental.product.config.SwaggerConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:14.0524879-03:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.simplesdental.product.config.SwaggerConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:14.2848663-03:00","@version":"1","message":"Started SwaggerConfigTest in 0.782 seconds (process running for 2.914)","logger_name":"com.simplesdental.product.config.SwaggerConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:14.5741003-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:14.5754485-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:14.5774544-03:00","@version":"1","message":"Completed initialization in 1 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:14.7814149-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:14.7814149-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:14.7824173-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:14.7984434-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:14.7984434-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:14.7984434-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:14.8100075-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:14.8100075-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:14.8100075-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:14.8240211-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:14.8240211-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:14.8250273-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:15.2391252-03:00","@version":"1","message":"Tentativa de login para o email: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:15.2464288-03:00","@version":"1","message":"Refresh token criado para o usuário: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:15.2464288-03:00","@version":"1","message":"Login bem-sucedido para o usuário: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:15.2504301-03:00","@version":"1","message":"Tentativa de login para o email: notfound@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:15.2504301-03:00","@version":"1","message":"Usuário não encontrado: notfound@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:16:15.3196423-03:00","@version":"1","message":"Criando novo usuário com email: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:15.3410161-03:00","@version":"1","message":"Refresh token criado para o usuário: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:15.3440144-03:00","@version":"1","message":"Tentativa de login para o email: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:15.3450962-03:00","@version":"1","message":"Senha incorreta para o usuário: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:16:15.3604165-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.repository.ProductV2RepositoryTest]: ProductV2RepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:15.4191056-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.repository.ProductV2RepositoryTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:15.453199-03:00","@version":"1","message":"Starting ProductV2RepositoryTest using Java 21.0.5 with PID 14184 (started by flavi in C:\\Users\\flavi\\Downloads\\desafio-backend\\desafio-backend)","logger_name":"com.simplesdental.product.repository.ProductV2RepositoryTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:15.453199-03:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.simplesdental.product.repository.ProductV2RepositoryTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:15.6824603-03:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:15.717745-03:00","@version":"1","message":"Finished Spring Data repository scanning in 30 ms. Found 5 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:15.7586925-03:00","@version":"1","message":"Replacing 'dataSource' DataSource bean with embedded version","logger_name":"org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration$EmbeddedDataSourceBeanFactoryPostProcessor","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:15.8376911-03:00","@version":"1","message":"Starting embedded database: url='jdbc:h2:mem:4e7b9acf-cfa2-4f58-8db8-2423097c9864;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'","logger_name":"org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:16.1220646-03:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:16.1871285-03:00","@version":"1","message":"HHH000412: Hibernate ORM core version 6.4.4.Final","logger_name":"org.hibernate.Version","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:16.217874-03:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:16.3116558-03:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:16.3565679-03:00","@version":"1","message":"HHH000511: The 2.2.0 version for [org.hibernate.dialect.PostgreSQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 12.0.0. Check the community dialects project for available legacy versions.","logger_name":"org.hibernate.dialect.Dialect","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:16:16.3615679-03:00","@version":"1","message":"HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)","logger_name":"org.hibernate.orm.deprecation","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:16:17.0108225-03:00","@version":"1","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:17.025359-03:00","@version":"1","message":"\r\n    alter table if exists tb_products \r\n       drop constraint if exists fk_products_category","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:16:17.0273581-03:00","@version":"1","message":"\r\n    alter table if exists tb_products_v2 \r\n       drop constraint if exists fk_products_category_v2","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:16:17.028362-03:00","@version":"1","message":"\r\n    alter table if exists tb_refresh_token \r\n       drop constraint if exists FKo1qldyy4gbjokinhqdllx5ej9","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:16:17.028362-03:00","@version":"1","message":"\r\n    drop table if exists categories cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:16:17.028362-03:00","@version":"1","message":"\r\n    drop table if exists tb_products cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:16:17.028362-03:00","@version":"1","message":"\r\n    drop table if exists tb_products_v2 cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:16:17.028362-03:00","@version":"1","message":"\r\n    drop table if exists tb_refresh_token cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:16:17.0293609-03:00","@version":"1","message":"\r\n    drop table if exists tb_users cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:16:17.0323595-03:00","@version":"1","message":"\r\n    create table categories (\r\n        id bigserial not null,\r\n        name varchar(100) not null,\r\n        description varchar(255),\r\n        primary key (id)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:16:17.0388714-03:00","@version":"1","message":"\r\n    create table tb_products (\r\n        price numeric(19,2) not null,\r\n        status boolean not null,\r\n        category_id bigint not null,\r\n        id bigserial not null,\r\n        code varchar(50),\r\n        name varchar(100) not null,\r\n        description varchar(255),\r\n        primary key (id),\r\n        constraint uk_product_code unique (code),\r\n        check (price > 0)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:16:17.0460383-03:00","@version":"1","message":"\r\n    create table tb_products_v2 (\r\n        code integer,\r\n        price numeric(19,2) not null,\r\n        status boolean not null,\r\n        category_id bigint not null,\r\n        id bigserial not null,\r\n        name varchar(100) not null,\r\n        description varchar(255),\r\n        primary key (id),\r\n        constraint uk_product_v2_code unique (code),\r\n        check (price > 0)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:16:17.0480386-03:00","@version":"1","message":"\r\n    create table tb_refresh_token (\r\n        expiry_date timestamp(6) not null,\r\n        id bigserial not null,\r\n        user_id bigint not null,\r\n        token varchar(255) not null unique,\r\n        primary key (id)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:16:17.0490389-03:00","@version":"1","message":"\r\n    create table tb_users (\r\n        id bigserial not null,\r\n        email varchar(255) not null,\r\n        name varchar(255) not null,\r\n        password varchar(255) not null,\r\n        role varchar(255) not null check (role in ('ADMIN','USER')),\r\n        primary key (id),\r\n        constraint uk_user_email unique (email)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:16:17.0500389-03:00","@version":"1","message":"\r\n    create index idx_product_code \r\n       on tb_products (code)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:16:17.0510387-03:00","@version":"1","message":"\r\n    create index idx_product_v2_code \r\n       on tb_products_v2 (code)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:16:17.0510387-03:00","@version":"1","message":"\r\n    create index idx_refresh_token_token_value \r\n       on tb_refresh_token (token)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:16:17.0520386-03:00","@version":"1","message":"\r\n    create index idx_user_email \r\n       on tb_users (email)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:16:17.0520386-03:00","@version":"1","message":"\r\n    alter table if exists tb_products \r\n       add constraint fk_products_category \r\n       foreign key (category_id) \r\n       references categories","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:16:17.0545485-03:00","@version":"1","message":"\r\n    alter table if exists tb_products_v2 \r\n       add constraint fk_products_category_v2 \r\n       foreign key (category_id) \r\n       references categories","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:16:17.0555504-03:00","@version":"1","message":"\r\n    alter table if exists tb_refresh_token \r\n       add constraint FKo1qldyy4gbjokinhqdllx5ej9 \r\n       foreign key (user_id) \r\n       references tb_users","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:16:17.0605491-03:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:17.4725261-03:00","@version":"1","message":"Started ProductV2RepositoryTest in 2.051 seconds (process running for 6.101)","logger_name":"com.simplesdental.product.repository.ProductV2RepositoryTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:17.5297833-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:16:17.5591004-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products_v2\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:16:17.5706132-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:16:17.5726146-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products_v2\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:16:17.5947159-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:16:17.5967204-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products_v2\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:16:17.6437174-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:17.6437174-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:17.6437174-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:17.6850027-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:17.6850027-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:17.6850027-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:17.7075395-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:17.7075395-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:17.7075395-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:17.7185618-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:17.7185618-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:17.7185618-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:17.7250293-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:17.7250293-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:17.7250293-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:17.7407112-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.repository.ProductRepositoryTest]: ProductRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:17.7469447-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.repository.ProductRepositoryTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:17.7509448-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:16:17.7534523-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:16:17.7574597-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:16:17.7584627-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:16:17.7646517-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:16:17.7656532-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:16:17.8147257-03:00","@version":"1","message":"Buscando produtos - página: 0, tamanho: 10","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:17.8147257-03:00","@version":"1","message":"Foram encontrados 1 produtos","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:17.8167251-03:00","@version":"1","message":"Salvando novo produto: Escova de Dentes","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:17.8167251-03:00","@version":"1","message":"Produto salvo com sucesso com id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:17.8177268-03:00","@version":"1","message":"Buscando produto pelo id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:17.8207257-03:00","@version":"1","message":"Buscando produto pelo id: 2","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:17.8207257-03:00","@version":"1","message":"Produto não encontrado com id: 2","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"ERROR","level_value":40000}
{"@timestamp":"2025-09-14T18:16:17.8227277-03:00","@version":"1","message":"Atualizando produto id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:17.8227277-03:00","@version":"1","message":"Buscando produto pelo id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:17.8227277-03:00","@version":"1","message":"Produto atualizado com sucesso id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:17.8237283-03:00","@version":"1","message":"Deletando produto id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:17.8237283-03:00","@version":"1","message":"Buscando produto pelo id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:17.8237283-03:00","@version":"1","message":"Produto deletado com sucesso id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:18.1945968-03:00","@version":"1","message":"Buscando categorias - página: 0, tamanho: 10","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:18.1945968-03:00","@version":"1","message":"Foram encontradas 1 categorias","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:18.1956049-03:00","@version":"1","message":"Salvando nova categoria: Higiene Bucal","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:18.1956049-03:00","@version":"1","message":"Categoria salva com sucesso com id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:18.1966054-03:00","@version":"1","message":"Buscando categoria pelo id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:18.1986018-03:00","@version":"1","message":"Atualizando categoria id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:18.1996027-03:00","@version":"1","message":"Categoria atualizada com sucesso: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:18.2016028-03:00","@version":"1","message":"Atualizando categoria id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:18.2016028-03:00","@version":"1","message":"Falha ao atualizar. Categoria não encontrada com id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"ERROR","level_value":40000}
{"@timestamp":"2025-09-14T18:16:18.2047502-03:00","@version":"1","message":"Deletando categoria id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:18.2047502-03:00","@version":"1","message":"Buscando categoria pelo id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:18.2047502-03:00","@version":"1","message":"Categoria deletada com sucesso id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:18.2067504-03:00","@version":"1","message":"Buscando categoria pelo id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:18.2067504-03:00","@version":"1","message":"Categoria não encontrada com id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"ERROR","level_value":40000}
{"@timestamp":"2025-09-14T18:16:18.2346165-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:18.2346165-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:18.2346165-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:18.2449326-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:18.2449326-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:18.2449326-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:18.2564463-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:18.2574453-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:18.2574453-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:18.2686717-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:18.2686717-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:18.2686717-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:18.2741782-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:18.2741782-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:18.2751841-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:18.2811905-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.repository.UserRepositoryTest]: UserRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:18.287706-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.repository.UserRepositoryTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:18.4094443-03:00","@version":"1","message":"\r\n    select\r\n        u1_0.id,\r\n        u1_0.email,\r\n        u1_0.name,\r\n        u1_0.password,\r\n        u1_0.role \r\n    from\r\n        tb_users u1_0 \r\n    where\r\n        u1_0.email=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:16:18.4164691-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_users\r\n        (email, name, password, role) \r\n    values\r\n        (?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:16:18.4239759-03:00","@version":"1","message":"\r\n    select\r\n        u1_0.id,\r\n        u1_0.email,\r\n        u1_0.name,\r\n        u1_0.password,\r\n        u1_0.role \r\n    from\r\n        tb_users u1_0 \r\n    where\r\n        u1_0.email=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:16:18.429978-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.repository.CategoryRepositoryTest]: CategoryRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:18.4354875-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.repository.CategoryRepositoryTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:18.4394892-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:16:18.4495685-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:16:18.4535666-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:16:18.4546911-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:16:18.4616919-03:00","@version":"1","message":"\r\n    select\r\n        c1_0.id,\r\n        c1_0.description,\r\n        c1_0.name \r\n    from\r\n        categories c1_0","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:16:18.4779368-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.repository.RefreshTokenRepositoryTest]: RefreshTokenRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:18.4854504-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.repository.RefreshTokenRepositoryTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:18.4894518-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_users\r\n        (email, name, password, role) \r\n    values\r\n        (?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:16:18.4914525-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_refresh_token\r\n        (expiry_date, token, user_id) \r\n    values\r\n        (?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:16:18.5007776-03:00","@version":"1","message":"\r\n    select\r\n        rt1_0.id,\r\n        rt1_0.expiry_date,\r\n        rt1_0.token,\r\n        rt1_0.user_id \r\n    from\r\n        tb_refresh_token rt1_0 \r\n    where\r\n        rt1_0.token=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:16:18.5058182-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_users\r\n        (email, name, password, role) \r\n    values\r\n        (?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:16:18.5078188-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_refresh_token\r\n        (expiry_date, token, user_id) \r\n    values\r\n        (?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:16:18.509818-03:00","@version":"1","message":"\r\n    select\r\n        rt1_0.id,\r\n        rt1_0.expiry_date,\r\n        rt1_0.token,\r\n        rt1_0.user_id \r\n    from\r\n        tb_refresh_token rt1_0 \r\n    where\r\n        rt1_0.token=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:16:18.5153768-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.config.JacksonConfigTest]: JacksonConfigTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:18.5264813-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.config.JacksonConfigTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:18.5466377-03:00","@version":"1","message":"Starting JacksonConfigTest using Java 21.0.5 with PID 14184 (started by flavi in C:\\Users\\flavi\\Downloads\\desafio-backend\\desafio-backend)","logger_name":"com.simplesdental.product.config.JacksonConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:18.5466377-03:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.simplesdental.product.config.JacksonConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:18.7143751-03:00","@version":"1","message":"Started JacksonConfigTest in 0.186 seconds (process running for 7.343)","logger_name":"com.simplesdental.product.config.JacksonConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:18.9196001-03:00","@version":"1","message":"Falha de validação: field: must not be null","logger_name":"com.simplesdental.product.Exceptions.GlobalExceptionHandler","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:16:18.9216016-03:00","@version":"1","message":"Erro inesperado: Unexpected error","logger_name":"com.simplesdental.product.Exceptions.GlobalExceptionHandler","thread_name":"main","level":"ERROR","level_value":40000,"stack_trace":"java.lang.Exception: Unexpected error\r\n\tat com.simplesdental.product.Exceptions.GlobalExceptionHandlerTest.testHandleAllExceptions(GlobalExceptionHandlerTest.java:78)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\r\n\tat org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)\r\n\tat org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)\r\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)\r\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)\r\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)\r\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)\r\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)\r\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)\r\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)\r\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)\r\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)\r\n\tat org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)\r\n\tat org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)\r\n\tat com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)\r\n\tat com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)\r\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)\r\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)\r\n"}
{"@timestamp":"2025-09-14T18:16:18.9261095-03:00","@version":"1","message":"Falha de autenticação: Invalid credentials","logger_name":"com.simplesdental.product.Exceptions.GlobalExceptionHandler","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:16:18.9271108-03:00","@version":"1","message":"Requisição não encontrada: Entity not found","logger_name":"com.simplesdental.product.Exceptions.GlobalExceptionHandler","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:16:19.0054416-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:19.0054416-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:19.0054416-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:19.057649-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:19.057649-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:19.057649-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:19.070779-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:19.070779-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:19.070779-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:19.0792861-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:19.0802849-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:19.0802849-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:19.0858022-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:19.0858022-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:19.0858022-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:19.114517-03:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:16:19.1155265-03:00","@version":"1","message":"\r\n    alter table if exists tb_products \r\n       drop constraint if exists fk_products_category","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:16:19.1175223-03:00","@version":"1","message":"\r\n    alter table if exists tb_products_v2 \r\n       drop constraint if exists fk_products_category_v2","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:16:19.1175223-03:00","@version":"1","message":"\r\n    alter table if exists tb_refresh_token \r\n       drop constraint if exists FKo1qldyy4gbjokinhqdllx5ej9","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:16:19.1185213-03:00","@version":"1","message":"\r\n    drop table if exists categories cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:16:19.119522-03:00","@version":"1","message":"\r\n    drop table if exists tb_products cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:16:19.120522-03:00","@version":"1","message":"\r\n    drop table if exists tb_products_v2 cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:16:19.1215217-03:00","@version":"1","message":"\r\n    drop table if exists tb_refresh_token cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:16:19.1215217-03:00","@version":"1","message":"\r\n    drop table if exists tb_users cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:17:00.9278994-03:00","@version":"1","message":"HV000001: Hibernate Validator 8.0.1.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:00.9524384-03:00","@version":"1","message":"Starting SwaggerConfigTest using Java 21.0.5 with PID 24248 (started by flavi in C:\\Users\\flavi\\Downloads\\desafio-backend\\desafio-backend)","logger_name":"com.simplesdental.product.config.SwaggerConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:00.9524384-03:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.simplesdental.product.config.SwaggerConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:01.1810845-03:00","@version":"1","message":"Started SwaggerConfigTest in 0.754 seconds (process running for 2.794)","logger_name":"com.simplesdental.product.config.SwaggerConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:01.4597767-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:01.4607758-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:01.4627746-03:00","@version":"1","message":"Completed initialization in 1 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:01.6535608-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:01.6535608-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:01.6535608-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:01.6670762-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:01.6670762-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:01.6680757-03:00","@version":"1","message":"Completed initialization in 1 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:01.6787159-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:01.6787159-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:01.6797179-03:00","@version":"1","message":"Completed initialization in 1 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:01.6918205-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:01.6918205-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:01.6918205-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:02.0550667-03:00","@version":"1","message":"Tentativa de login para o email: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:02.06119-03:00","@version":"1","message":"Refresh token criado para o usuário: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:02.06119-03:00","@version":"1","message":"Login bem-sucedido para o usuário: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:02.0651902-03:00","@version":"1","message":"Tentativa de login para o email: notfound@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:02.0651902-03:00","@version":"1","message":"Usuário não encontrado: notfound@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:17:02.1301839-03:00","@version":"1","message":"Criando novo usuário com email: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:02.1503883-03:00","@version":"1","message":"Refresh token criado para o usuário: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:02.1531048-03:00","@version":"1","message":"Tentativa de login para o email: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:02.1531048-03:00","@version":"1","message":"Senha incorreta para o usuário: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:17:02.1687585-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.repository.ProductV2RepositoryTest]: ProductV2RepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:02.2184206-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.repository.ProductV2RepositoryTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:02.2507463-03:00","@version":"1","message":"Starting ProductV2RepositoryTest using Java 21.0.5 with PID 24248 (started by flavi in C:\\Users\\flavi\\Downloads\\desafio-backend\\desafio-backend)","logger_name":"com.simplesdental.product.repository.ProductV2RepositoryTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:02.2507463-03:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.simplesdental.product.repository.ProductV2RepositoryTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:02.4690178-03:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:02.5062976-03:00","@version":"1","message":"Finished Spring Data repository scanning in 30 ms. Found 5 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:02.5468673-03:00","@version":"1","message":"Replacing 'dataSource' DataSource bean with embedded version","logger_name":"org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration$EmbeddedDataSourceBeanFactoryPostProcessor","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:02.6127037-03:00","@version":"1","message":"Starting embedded database: url='jdbc:h2:mem:829db904-22e6-4735-a527-8270df45c2a9;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'","logger_name":"org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:02.8291875-03:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:02.882724-03:00","@version":"1","message":"HHH000412: Hibernate ORM core version 6.4.4.Final","logger_name":"org.hibernate.Version","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:02.9097972-03:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:03.0031575-03:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:03.0427144-03:00","@version":"1","message":"HHH000511: The 2.2.0 version for [org.hibernate.dialect.PostgreSQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 12.0.0. Check the community dialects project for available legacy versions.","logger_name":"org.hibernate.dialect.Dialect","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:17:03.0482165-03:00","@version":"1","message":"HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)","logger_name":"org.hibernate.orm.deprecation","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:17:03.6628651-03:00","@version":"1","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:03.6753721-03:00","@version":"1","message":"\r\n    alter table if exists tb_products \r\n       drop constraint if exists fk_products_category","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:17:03.6778766-03:00","@version":"1","message":"\r\n    alter table if exists tb_products_v2 \r\n       drop constraint if exists fk_products_category_v2","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:17:03.6778766-03:00","@version":"1","message":"\r\n    alter table if exists tb_refresh_token \r\n       drop constraint if exists FKo1qldyy4gbjokinhqdllx5ej9","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:17:03.6778766-03:00","@version":"1","message":"\r\n    drop table if exists categories cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:17:03.6788826-03:00","@version":"1","message":"\r\n    drop table if exists tb_products cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:17:03.6788826-03:00","@version":"1","message":"\r\n    drop table if exists tb_products_v2 cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:17:03.6788826-03:00","@version":"1","message":"\r\n    drop table if exists tb_refresh_token cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:17:03.6788826-03:00","@version":"1","message":"\r\n    drop table if exists tb_users cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:17:03.6828807-03:00","@version":"1","message":"\r\n    create table categories (\r\n        id bigserial not null,\r\n        name varchar(100) not null,\r\n        description varchar(255),\r\n        primary key (id)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:17:03.6893885-03:00","@version":"1","message":"\r\n    create table tb_products (\r\n        price numeric(19,2) not null,\r\n        status boolean not null,\r\n        category_id bigint not null,\r\n        id bigserial not null,\r\n        code varchar(50),\r\n        name varchar(100) not null,\r\n        description varchar(255),\r\n        primary key (id),\r\n        constraint uk_product_code unique (code),\r\n        check (price > 0)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:17:03.6963877-03:00","@version":"1","message":"\r\n    create table tb_products_v2 (\r\n        code integer,\r\n        price numeric(19,2) not null,\r\n        status boolean not null,\r\n        category_id bigint not null,\r\n        id bigserial not null,\r\n        name varchar(100) not null,\r\n        description varchar(255),\r\n        primary key (id),\r\n        constraint uk_product_v2_code unique (code),\r\n        check (price > 0)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:17:03.6989031-03:00","@version":"1","message":"\r\n    create table tb_refresh_token (\r\n        expiry_date timestamp(6) not null,\r\n        id bigserial not null,\r\n        user_id bigint not null,\r\n        token varchar(255) not null unique,\r\n        primary key (id)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:17:03.6999021-03:00","@version":"1","message":"\r\n    create table tb_users (\r\n        id bigserial not null,\r\n        email varchar(255) not null,\r\n        name varchar(255) not null,\r\n        password varchar(255) not null,\r\n        role varchar(255) not null check (role in ('ADMIN','USER')),\r\n        primary key (id),\r\n        constraint uk_user_email unique (email)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:17:03.7009019-03:00","@version":"1","message":"\r\n    create index idx_product_code \r\n       on tb_products (code)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:17:03.7019042-03:00","@version":"1","message":"\r\n    create index idx_product_v2_code \r\n       on tb_products_v2 (code)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:17:03.7019042-03:00","@version":"1","message":"\r\n    create index idx_refresh_token_token_value \r\n       on tb_refresh_token (token)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:17:03.702903-03:00","@version":"1","message":"\r\n    create index idx_user_email \r\n       on tb_users (email)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:17:03.702903-03:00","@version":"1","message":"\r\n    alter table if exists tb_products \r\n       add constraint fk_products_category \r\n       foreign key (category_id) \r\n       references categories","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:17:03.7059021-03:00","@version":"1","message":"\r\n    alter table if exists tb_products_v2 \r\n       add constraint fk_products_category_v2 \r\n       foreign key (category_id) \r\n       references categories","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:17:03.7059021-03:00","@version":"1","message":"\r\n    alter table if exists tb_refresh_token \r\n       add constraint FKo1qldyy4gbjokinhqdllx5ej9 \r\n       foreign key (user_id) \r\n       references tb_users","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:17:03.7104112-03:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:04.1002908-03:00","@version":"1","message":"Started ProductV2RepositoryTest in 1.88 seconds (process running for 5.714)","logger_name":"com.simplesdental.product.repository.ProductV2RepositoryTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:04.1498464-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:17:04.1734931-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products_v2\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:17:04.1836726-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:17:04.1856732-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products_v2\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:17:04.2048254-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:17:04.2068266-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products_v2\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:17:04.2517455-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:04.2517455-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:04.2517455-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:04.2906209-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:04.2906209-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:04.2906209-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:04.3131788-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:04.3131788-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:04.314179-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:04.3246874-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:04.3246874-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:04.3246874-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:04.3322006-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:04.3322006-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:04.333203-03:00","@version":"1","message":"Completed initialization in 1 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:04.3477262-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.repository.ProductRepositoryTest]: ProductRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:04.3547316-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.repository.ProductRepositoryTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:04.3602426-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:17:04.3622432-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:17:04.3662434-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:17:04.3677492-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:17:04.3717563-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:17:04.3737548-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:17:04.4238248-03:00","@version":"1","message":"Buscando produtos - página: 0, tamanho: 10","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:04.4248243-03:00","@version":"1","message":"Foram encontrados 1 produtos","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:04.425824-03:00","@version":"1","message":"Salvando novo produto: Escova de Dentes","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:04.425824-03:00","@version":"1","message":"Produto salvo com sucesso com id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:04.4273301-03:00","@version":"1","message":"Buscando produto pelo id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:04.4303358-03:00","@version":"1","message":"Buscando produto pelo id: 2","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:04.4303358-03:00","@version":"1","message":"Produto não encontrado com id: 2","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"ERROR","level_value":40000}
{"@timestamp":"2025-09-14T18:17:04.4313352-03:00","@version":"1","message":"Atualizando produto id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:04.4313352-03:00","@version":"1","message":"Buscando produto pelo id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:04.4313352-03:00","@version":"1","message":"Produto atualizado com sucesso id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:04.4323371-03:00","@version":"1","message":"Deletando produto id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:04.4323371-03:00","@version":"1","message":"Buscando produto pelo id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:04.4323371-03:00","@version":"1","message":"Produto deletado com sucesso id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:04.7979442-03:00","@version":"1","message":"Buscando categorias - página: 0, tamanho: 10","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:04.7979442-03:00","@version":"1","message":"Foram encontradas 1 categorias","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:04.79895-03:00","@version":"1","message":"Salvando nova categoria: Higiene Bucal","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:04.79895-03:00","@version":"1","message":"Categoria salva com sucesso com id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:04.7999551-03:00","@version":"1","message":"Buscando categoria pelo id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:04.8019547-03:00","@version":"1","message":"Atualizando categoria id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:04.802955-03:00","@version":"1","message":"Categoria atualizada com sucesso: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:04.8049545-03:00","@version":"1","message":"Atualizando categoria id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:04.8049545-03:00","@version":"1","message":"Falha ao atualizar. Categoria não encontrada com id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"ERROR","level_value":40000}
{"@timestamp":"2025-09-14T18:17:04.808465-03:00","@version":"1","message":"Deletando categoria id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:04.808465-03:00","@version":"1","message":"Buscando categoria pelo id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:04.808465-03:00","@version":"1","message":"Categoria deletada com sucesso id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:04.810466-03:00","@version":"1","message":"Buscando categoria pelo id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:04.810466-03:00","@version":"1","message":"Categoria não encontrada com id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"ERROR","level_value":40000}
{"@timestamp":"2025-09-14T18:17:04.8395881-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:04.8395881-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:04.8395881-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:04.8509925-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:04.8509925-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:04.8509925-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:04.8625013-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:04.8625013-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:04.8625013-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:04.8725906-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:04.8725906-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:04.8725906-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:04.8807182-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:04.8807182-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:04.8807182-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:04.8867187-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.repository.UserRepositoryTest]: UserRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:04.8927708-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.repository.UserRepositoryTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:04.9986281-03:00","@version":"1","message":"\r\n    select\r\n        u1_0.id,\r\n        u1_0.email,\r\n        u1_0.name,\r\n        u1_0.password,\r\n        u1_0.role \r\n    from\r\n        tb_users u1_0 \r\n    where\r\n        u1_0.email=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:17:05.0056253-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_users\r\n        (email, name, password, role) \r\n    values\r\n        (?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:17:05.0126398-03:00","@version":"1","message":"\r\n    select\r\n        u1_0.id,\r\n        u1_0.email,\r\n        u1_0.name,\r\n        u1_0.password,\r\n        u1_0.role \r\n    from\r\n        tb_users u1_0 \r\n    where\r\n        u1_0.email=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:17:05.0176422-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.repository.CategoryRepositoryTest]: CategoryRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:05.0246762-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.repository.CategoryRepositoryTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:05.0276776-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:17:05.0368008-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:17:05.0413147-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:17:05.0423098-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:17:05.0493385-03:00","@version":"1","message":"\r\n    select\r\n        c1_0.id,\r\n        c1_0.description,\r\n        c1_0.name \r\n    from\r\n        categories c1_0","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:17:05.0615536-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.repository.RefreshTokenRepositoryTest]: RefreshTokenRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:05.0675535-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.repository.RefreshTokenRepositoryTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:05.0716295-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_users\r\n        (email, name, password, role) \r\n    values\r\n        (?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:17:05.0726299-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_refresh_token\r\n        (expiry_date, token, user_id) \r\n    values\r\n        (?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:17:05.081668-03:00","@version":"1","message":"\r\n    select\r\n        rt1_0.id,\r\n        rt1_0.expiry_date,\r\n        rt1_0.token,\r\n        rt1_0.user_id \r\n    from\r\n        tb_refresh_token rt1_0 \r\n    where\r\n        rt1_0.token=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:17:05.086671-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_users\r\n        (email, name, password, role) \r\n    values\r\n        (?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:17:05.0876691-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_refresh_token\r\n        (expiry_date, token, user_id) \r\n    values\r\n        (?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:17:05.0897121-03:00","@version":"1","message":"\r\n    select\r\n        rt1_0.id,\r\n        rt1_0.expiry_date,\r\n        rt1_0.token,\r\n        rt1_0.user_id \r\n    from\r\n        tb_refresh_token rt1_0 \r\n    where\r\n        rt1_0.token=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:17:05.0957121-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.config.JacksonConfigTest]: JacksonConfigTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:05.1077316-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.config.JacksonConfigTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:05.1272513-03:00","@version":"1","message":"Starting JacksonConfigTest using Java 21.0.5 with PID 24248 (started by flavi in C:\\Users\\flavi\\Downloads\\desafio-backend\\desafio-backend)","logger_name":"com.simplesdental.product.config.JacksonConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:05.1272513-03:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.simplesdental.product.config.JacksonConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:05.2972212-03:00","@version":"1","message":"Started JacksonConfigTest in 0.188 seconds (process running for 6.91)","logger_name":"com.simplesdental.product.config.JacksonConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:05.4935968-03:00","@version":"1","message":"Falha de validação: field: must not be null","logger_name":"com.simplesdental.product.Exceptions.GlobalExceptionHandler","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:17:05.4945959-03:00","@version":"1","message":"Erro inesperado: Unexpected error","logger_name":"com.simplesdental.product.Exceptions.GlobalExceptionHandler","thread_name":"main","level":"ERROR","level_value":40000,"stack_trace":"java.lang.Exception: Unexpected error\r\n\tat com.simplesdental.product.Exceptions.GlobalExceptionHandlerTest.testHandleAllExceptions(GlobalExceptionHandlerTest.java:78)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\r\n\tat org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)\r\n\tat org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)\r\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)\r\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)\r\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)\r\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)\r\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)\r\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)\r\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)\r\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)\r\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)\r\n\tat org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)\r\n\tat org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)\r\n\tat com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)\r\n\tat com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)\r\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)\r\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)\r\n"}
{"@timestamp":"2025-09-14T18:17:05.4996187-03:00","@version":"1","message":"Falha de autenticação: Invalid credentials","logger_name":"com.simplesdental.product.Exceptions.GlobalExceptionHandler","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:17:05.5006187-03:00","@version":"1","message":"Requisição não encontrada: Entity not found","logger_name":"com.simplesdental.product.Exceptions.GlobalExceptionHandler","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:17:05.5775214-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:05.5775214-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:05.5775214-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:05.62929-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:05.62929-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:05.62929-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:05.6414426-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:05.6414426-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:05.6414426-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:05.6494977-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:05.6494977-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:05.6494977-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:05.6554957-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:05.6554957-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:05.6554957-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:05.688245-03:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:17:05.688245-03:00","@version":"1","message":"\r\n    alter table if exists tb_products \r\n       drop constraint if exists fk_products_category","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:17:05.6902498-03:00","@version":"1","message":"\r\n    alter table if exists tb_products_v2 \r\n       drop constraint if exists fk_products_category_v2","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:17:05.6912459-03:00","@version":"1","message":"\r\n    alter table if exists tb_refresh_token \r\n       drop constraint if exists FKo1qldyy4gbjokinhqdllx5ej9","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:17:05.6912459-03:00","@version":"1","message":"\r\n    drop table if exists categories cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:17:05.693246-03:00","@version":"1","message":"\r\n    drop table if exists tb_products cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:17:05.6942455-03:00","@version":"1","message":"\r\n    drop table if exists tb_products_v2 cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:17:05.6942455-03:00","@version":"1","message":"\r\n    drop table if exists tb_refresh_token cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:17:05.6952457-03:00","@version":"1","message":"\r\n    drop table if exists tb_users cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:18:28.4609796-03:00","@version":"1","message":"HV000001: Hibernate Validator 8.0.1.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:28.4840108-03:00","@version":"1","message":"Starting SwaggerConfigTest using Java 21.0.5 with PID 19184 (started by flavi in C:\\Users\\flavi\\Downloads\\desafio-backend\\desafio-backend)","logger_name":"com.simplesdental.product.config.SwaggerConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:28.4850064-03:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.simplesdental.product.config.SwaggerConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:28.7071855-03:00","@version":"1","message":"Started SwaggerConfigTest in 0.755 seconds (process running for 2.701)","logger_name":"com.simplesdental.product.config.SwaggerConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:28.9944259-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:28.9954244-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:28.9964261-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:29.1946774-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:29.1946774-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:29.1946774-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:29.2093253-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:29.2103259-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:29.2103259-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:29.2204717-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:29.2214702-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:29.2214702-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:29.2355523-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:29.2355523-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:29.2355523-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:29.6162058-03:00","@version":"1","message":"Tentativa de login para o email: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:29.6214661-03:00","@version":"1","message":"Refresh token criado para o usuário: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:29.6214661-03:00","@version":"1","message":"Login bem-sucedido para o usuário: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:29.6244662-03:00","@version":"1","message":"Tentativa de login para o email: notfound@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:29.625465-03:00","@version":"1","message":"Usuário não encontrado: notfound@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:18:29.6630975-03:00","@version":"1","message":"Criando novo usuário com email: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:29.6836292-03:00","@version":"1","message":"Refresh token criado para o usuário: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:29.6876738-03:00","@version":"1","message":"Tentativa de login para o email: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:29.6876738-03:00","@version":"1","message":"Senha incorreta para o usuário: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:18:29.7030386-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.repository.ProductV2RepositoryTest]: ProductV2RepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:29.7556534-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.repository.ProductV2RepositoryTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:29.7903194-03:00","@version":"1","message":"Starting ProductV2RepositoryTest using Java 21.0.5 with PID 19184 (started by flavi in C:\\Users\\flavi\\Downloads\\desafio-backend\\desafio-backend)","logger_name":"com.simplesdental.product.repository.ProductV2RepositoryTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:29.7903194-03:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.simplesdental.product.repository.ProductV2RepositoryTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:30.0291862-03:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:30.0732438-03:00","@version":"1","message":"Finished Spring Data repository scanning in 39 ms. Found 5 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:30.1148015-03:00","@version":"1","message":"Replacing 'dataSource' DataSource bean with embedded version","logger_name":"org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration$EmbeddedDataSourceBeanFactoryPostProcessor","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:30.1851489-03:00","@version":"1","message":"Starting embedded database: url='jdbc:h2:mem:4f231bda-e82c-472f-b92c-b869048afb73;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'","logger_name":"org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:30.4674639-03:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:30.5326629-03:00","@version":"1","message":"HHH000412: Hibernate ORM core version 6.4.4.Final","logger_name":"org.hibernate.Version","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:30.5630748-03:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:30.6566916-03:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:30.6982574-03:00","@version":"1","message":"HHH000511: The 2.2.0 version for [org.hibernate.dialect.PostgreSQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 12.0.0. Check the community dialects project for available legacy versions.","logger_name":"org.hibernate.dialect.Dialect","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:18:30.7032583-03:00","@version":"1","message":"HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)","logger_name":"org.hibernate.orm.deprecation","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:18:31.304491-03:00","@version":"1","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:31.327022-03:00","@version":"1","message":"\r\n    alter table if exists tb_products \r\n       drop constraint if exists fk_products_category","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:18:31.3290205-03:00","@version":"1","message":"\r\n    alter table if exists tb_products_v2 \r\n       drop constraint if exists fk_products_category_v2","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:18:31.3290205-03:00","@version":"1","message":"\r\n    alter table if exists tb_refresh_token \r\n       drop constraint if exists FKo1qldyy4gbjokinhqdllx5ej9","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:18:31.3290205-03:00","@version":"1","message":"\r\n    drop table if exists categories cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:18:31.3300217-03:00","@version":"1","message":"\r\n    drop table if exists tb_products cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:18:31.3300217-03:00","@version":"1","message":"\r\n    drop table if exists tb_products_v2 cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:18:31.3300217-03:00","@version":"1","message":"\r\n    drop table if exists tb_refresh_token cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:18:31.3300217-03:00","@version":"1","message":"\r\n    drop table if exists tb_users cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:18:31.3330225-03:00","@version":"1","message":"\r\n    create table categories (\r\n        id bigserial not null,\r\n        name varchar(100) not null,\r\n        description varchar(255),\r\n        primary key (id)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:18:31.3395205-03:00","@version":"1","message":"\r\n    create table tb_products (\r\n        price numeric(19,2) not null,\r\n        status boolean not null,\r\n        category_id bigint not null,\r\n        id bigserial not null,\r\n        code varchar(50),\r\n        name varchar(100) not null,\r\n        description varchar(255),\r\n        primary key (id),\r\n        constraint uk_product_code unique (code),\r\n        check (price > 0)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:18:31.3480338-03:00","@version":"1","message":"\r\n    create table tb_products_v2 (\r\n        code integer,\r\n        price numeric(19,2) not null,\r\n        status boolean not null,\r\n        category_id bigint not null,\r\n        id bigserial not null,\r\n        name varchar(100) not null,\r\n        description varchar(255),\r\n        primary key (id),\r\n        constraint uk_product_v2_code unique (code),\r\n        check (price > 0)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:18:31.349039-03:00","@version":"1","message":"\r\n    create table tb_refresh_token (\r\n        expiry_date timestamp(6) not null,\r\n        id bigserial not null,\r\n        user_id bigint not null,\r\n        token varchar(255) not null unique,\r\n        primary key (id)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:18:31.3500383-03:00","@version":"1","message":"\r\n    create table tb_users (\r\n        id bigserial not null,\r\n        email varchar(255) not null,\r\n        name varchar(255) not null,\r\n        password varchar(255) not null,\r\n        role varchar(255) not null check (role in ('ADMIN','USER')),\r\n        primary key (id),\r\n        constraint uk_user_email unique (email)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:18:31.3520385-03:00","@version":"1","message":"\r\n    create index idx_product_code \r\n       on tb_products (code)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:18:31.3530385-03:00","@version":"1","message":"\r\n    create index idx_product_v2_code \r\n       on tb_products_v2 (code)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:18:31.3530385-03:00","@version":"1","message":"\r\n    create index idx_refresh_token_token_value \r\n       on tb_refresh_token (token)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:18:31.3540376-03:00","@version":"1","message":"\r\n    create index idx_user_email \r\n       on tb_users (email)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:18:31.3540376-03:00","@version":"1","message":"\r\n    alter table if exists tb_products \r\n       add constraint fk_products_category \r\n       foreign key (category_id) \r\n       references categories","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:18:31.3565431-03:00","@version":"1","message":"\r\n    alter table if exists tb_products_v2 \r\n       add constraint fk_products_category_v2 \r\n       foreign key (category_id) \r\n       references categories","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:18:31.3575464-03:00","@version":"1","message":"\r\n    alter table if exists tb_refresh_token \r\n       add constraint FKo1qldyy4gbjokinhqdllx5ej9 \r\n       foreign key (user_id) \r\n       references tb_users","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:18:31.3615462-03:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:31.7320861-03:00","@version":"1","message":"Started ProductV2RepositoryTest in 1.974 seconds (process running for 5.726)","logger_name":"com.simplesdental.product.repository.ProductV2RepositoryTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:31.7840094-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:18:31.8135579-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products_v2\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:18:31.8240712-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:18:31.8260704-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products_v2\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:18:31.8447789-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:18:31.8462867-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products_v2\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:18:31.8909405-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:31.8919412-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:31.8919412-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:31.9335272-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:31.9335272-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:31.9335272-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:31.9551341-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:31.9551341-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:31.9551341-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:31.9653-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:31.9653-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:31.9653-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:31.9723429-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:31.9723429-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:31.9723429-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:31.991463-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.repository.ProductRepositoryTest]: ProductRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:31.9999804-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.repository.ProductRepositoryTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:32.0082491-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:18:32.0112499-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:18:32.0162483-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:18:32.0176055-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:18:32.0236057-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:18:32.0246062-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:18:32.0775103-03:00","@version":"1","message":"Buscando produtos - página: 0, tamanho: 10","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:32.0775103-03:00","@version":"1","message":"Foram encontrados 1 produtos","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:32.0795101-03:00","@version":"1","message":"Salvando novo produto: Escova de Dentes","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:32.0805114-03:00","@version":"1","message":"Produto salvo com sucesso com id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:32.0815103-03:00","@version":"1","message":"Buscando produto pelo id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:32.0835118-03:00","@version":"1","message":"Buscando produto pelo id: 2","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:32.0835118-03:00","@version":"1","message":"Produto não encontrado com id: 2","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"ERROR","level_value":40000}
{"@timestamp":"2025-09-14T18:18:32.0855119-03:00","@version":"1","message":"Atualizando produto id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:32.0860172-03:00","@version":"1","message":"Buscando produto pelo id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:32.0860172-03:00","@version":"1","message":"Produto atualizado com sucesso id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:32.0870249-03:00","@version":"1","message":"Deletando produto id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:32.0870249-03:00","@version":"1","message":"Buscando produto pelo id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:32.0870249-03:00","@version":"1","message":"Produto deletado com sucesso id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:32.5510812-03:00","@version":"1","message":"Buscando categorias - página: 0, tamanho: 10","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:32.5510812-03:00","@version":"1","message":"Foram encontradas 1 categorias","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:32.5520814-03:00","@version":"1","message":"Salvando nova categoria: Higiene Bucal","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:32.5530809-03:00","@version":"1","message":"Categoria salva com sucesso com id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:32.5540809-03:00","@version":"1","message":"Buscando categoria pelo id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:32.5550811-03:00","@version":"1","message":"Atualizando categoria id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:32.5560807-03:00","@version":"1","message":"Categoria atualizada com sucesso: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:32.5591708-03:00","@version":"1","message":"Atualizando categoria id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:32.5591708-03:00","@version":"1","message":"Falha ao atualizar. Categoria não encontrada com id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"ERROR","level_value":40000}
{"@timestamp":"2025-09-14T18:18:32.5621718-03:00","@version":"1","message":"Deletando categoria id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:32.5621718-03:00","@version":"1","message":"Buscando categoria pelo id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:32.5621718-03:00","@version":"1","message":"Categoria deletada com sucesso id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:32.5641708-03:00","@version":"1","message":"Buscando categoria pelo id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:32.5641708-03:00","@version":"1","message":"Categoria não encontrada com id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"ERROR","level_value":40000}
{"@timestamp":"2025-09-14T18:18:32.5948404-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:32.5948404-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:32.5948404-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:32.6079691-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:32.6079691-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:32.6079691-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:32.620135-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:32.620135-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:32.6211359-03:00","@version":"1","message":"Completed initialization in 1 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:32.6321736-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:32.6321736-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:32.6321736-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:32.6392329-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:32.6392329-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:32.6392329-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:32.6452324-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.repository.UserRepositoryTest]: UserRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:32.6513019-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.repository.UserRepositoryTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:32.7580835-03:00","@version":"1","message":"\r\n    select\r\n        u1_0.id,\r\n        u1_0.email,\r\n        u1_0.name,\r\n        u1_0.password,\r\n        u1_0.role \r\n    from\r\n        tb_users u1_0 \r\n    where\r\n        u1_0.email=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:18:32.7650845-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_users\r\n        (email, name, password, role) \r\n    values\r\n        (?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:18:32.7711155-03:00","@version":"1","message":"\r\n    select\r\n        u1_0.id,\r\n        u1_0.email,\r\n        u1_0.name,\r\n        u1_0.password,\r\n        u1_0.role \r\n    from\r\n        tb_users u1_0 \r\n    where\r\n        u1_0.email=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:18:32.7761176-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.repository.CategoryRepositoryTest]: CategoryRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:32.7821528-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.repository.CategoryRepositoryTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:32.785153-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:18:32.7946647-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:18:32.7991731-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:18:32.8001755-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:18:32.8061759-03:00","@version":"1","message":"\r\n    select\r\n        c1_0.id,\r\n        c1_0.description,\r\n        c1_0.name \r\n    from\r\n        categories c1_0","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:18:32.8199404-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.repository.RefreshTokenRepositoryTest]: RefreshTokenRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:32.8259401-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.repository.RefreshTokenRepositoryTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:32.8310388-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_users\r\n        (email, name, password, role) \r\n    values\r\n        (?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:18:32.833039-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_refresh_token\r\n        (expiry_date, token, user_id) \r\n    values\r\n        (?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:18:32.8414882-03:00","@version":"1","message":"\r\n    select\r\n        rt1_0.id,\r\n        rt1_0.expiry_date,\r\n        rt1_0.token,\r\n        rt1_0.user_id \r\n    from\r\n        tb_refresh_token rt1_0 \r\n    where\r\n        rt1_0.token=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:18:32.8479976-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_users\r\n        (email, name, password, role) \r\n    values\r\n        (?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:18:32.848996-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_refresh_token\r\n        (expiry_date, token, user_id) \r\n    values\r\n        (?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:18:32.8509959-03:00","@version":"1","message":"\r\n    select\r\n        rt1_0.id,\r\n        rt1_0.expiry_date,\r\n        rt1_0.token,\r\n        rt1_0.user_id \r\n    from\r\n        tb_refresh_token rt1_0 \r\n    where\r\n        rt1_0.token=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:18:32.8559973-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.config.JacksonConfigTest]: JacksonConfigTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:32.8681997-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.config.JacksonConfigTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:32.8887448-03:00","@version":"1","message":"Starting JacksonConfigTest using Java 21.0.5 with PID 19184 (started by flavi in C:\\Users\\flavi\\Downloads\\desafio-backend\\desafio-backend)","logger_name":"com.simplesdental.product.config.JacksonConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:32.8887448-03:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.simplesdental.product.config.JacksonConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:33.065879-03:00","@version":"1","message":"Started JacksonConfigTest in 0.195 seconds (process running for 7.059)","logger_name":"com.simplesdental.product.config.JacksonConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:33.2639907-03:00","@version":"1","message":"Falha de validação: field: must not be null","logger_name":"com.simplesdental.product.Exceptions.GlobalExceptionHandler","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:18:33.264992-03:00","@version":"1","message":"Erro inesperado: Unexpected error","logger_name":"com.simplesdental.product.Exceptions.GlobalExceptionHandler","thread_name":"main","level":"ERROR","level_value":40000,"stack_trace":"java.lang.Exception: Unexpected error\r\n\tat com.simplesdental.product.Exceptions.GlobalExceptionHandlerTest.testHandleAllExceptions(GlobalExceptionHandlerTest.java:78)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\r\n\tat org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)\r\n\tat org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)\r\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)\r\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)\r\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)\r\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)\r\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)\r\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)\r\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)\r\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)\r\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)\r\n\tat org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)\r\n\tat org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)\r\n\tat com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)\r\n\tat com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)\r\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)\r\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)\r\n"}
{"@timestamp":"2025-09-14T18:18:33.2710667-03:00","@version":"1","message":"Falha de autenticação: Invalid credentials","logger_name":"com.simplesdental.product.Exceptions.GlobalExceptionHandler","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:18:33.2710667-03:00","@version":"1","message":"Requisição não encontrada: Entity not found","logger_name":"com.simplesdental.product.Exceptions.GlobalExceptionHandler","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:18:33.3558271-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:33.3558271-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:33.3558271-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:33.4101013-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:33.4101013-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:33.4101013-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:33.4226026-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:33.4226026-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:33.4226026-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:33.4301155-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:33.4301155-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:33.4301155-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:33.4351143-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:33.436114-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:33.436114-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:33.4687514-03:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:18:33.4697523-03:00","@version":"1","message":"\r\n    alter table if exists tb_products \r\n       drop constraint if exists fk_products_category","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:18:33.4707526-03:00","@version":"1","message":"\r\n    alter table if exists tb_products_v2 \r\n       drop constraint if exists fk_products_category_v2","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:18:33.4717536-03:00","@version":"1","message":"\r\n    alter table if exists tb_refresh_token \r\n       drop constraint if exists FKo1qldyy4gbjokinhqdllx5ej9","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:18:33.4717536-03:00","@version":"1","message":"\r\n    drop table if exists categories cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:18:33.4737521-03:00","@version":"1","message":"\r\n    drop table if exists tb_products cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:18:33.4737521-03:00","@version":"1","message":"\r\n    drop table if exists tb_products_v2 cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:18:33.4737521-03:00","@version":"1","message":"\r\n    drop table if exists tb_refresh_token cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:18:33.4747502-03:00","@version":"1","message":"\r\n    drop table if exists tb_users cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:19:10.4041016-03:00","@version":"1","message":"HV000001: Hibernate Validator 8.0.1.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:10.4248061-03:00","@version":"1","message":"Starting SwaggerConfigTest using Java 21.0.5 with PID 27660 (started by flavi in C:\\Users\\flavi\\Downloads\\desafio-backend\\desafio-backend)","logger_name":"com.simplesdental.product.config.SwaggerConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:10.4258053-03:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.simplesdental.product.config.SwaggerConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:10.6495385-03:00","@version":"1","message":"Started SwaggerConfigTest in 0.753 seconds (process running for 2.715)","logger_name":"com.simplesdental.product.config.SwaggerConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:10.9709913-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:10.971997-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:10.9729983-03:00","@version":"1","message":"Completed initialization in 1 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:11.1839192-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:11.1839192-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:11.1839192-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:11.1992286-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:11.2002288-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:11.2002288-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:11.2112629-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:11.2112629-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:11.2112629-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:11.2268726-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:11.2268726-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:11.2268726-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:11.6457571-03:00","@version":"1","message":"Tentativa de login para o email: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:11.652145-03:00","@version":"1","message":"Refresh token criado para o usuário: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:11.652145-03:00","@version":"1","message":"Login bem-sucedido para o usuário: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:11.6561503-03:00","@version":"1","message":"Tentativa de login para o email: notfound@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:11.6561503-03:00","@version":"1","message":"Usuário não encontrado: notfound@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:19:11.6967815-03:00","@version":"1","message":"Refresh token criado para o usuário: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:11.7007812-03:00","@version":"1","message":"Tentativa de login para o email: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:11.7007812-03:00","@version":"1","message":"Senha incorreta para o usuário: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:19:11.7160942-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.repository.ProductV2RepositoryTest]: ProductV2RepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:11.7682288-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.repository.ProductV2RepositoryTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:11.8044113-03:00","@version":"1","message":"Starting ProductV2RepositoryTest using Java 21.0.5 with PID 27660 (started by flavi in C:\\Users\\flavi\\Downloads\\desafio-backend\\desafio-backend)","logger_name":"com.simplesdental.product.repository.ProductV2RepositoryTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:11.8044113-03:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.simplesdental.product.repository.ProductV2RepositoryTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:12.0490443-03:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:12.0921314-03:00","@version":"1","message":"Finished Spring Data repository scanning in 37 ms. Found 5 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:12.1318384-03:00","@version":"1","message":"Replacing 'dataSource' DataSource bean with embedded version","logger_name":"org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration$EmbeddedDataSourceBeanFactoryPostProcessor","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:12.2038699-03:00","@version":"1","message":"Starting embedded database: url='jdbc:h2:mem:0f66af3c-ab89-4079-bf68-0d97714be1cd;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'","logger_name":"org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:12.4809655-03:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:12.5469328-03:00","@version":"1","message":"HHH000412: Hibernate ORM core version 6.4.4.Final","logger_name":"org.hibernate.Version","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:12.5764764-03:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:12.6696073-03:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:12.7086718-03:00","@version":"1","message":"HHH000511: The 2.2.0 version for [org.hibernate.dialect.PostgreSQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 12.0.0. Check the community dialects project for available legacy versions.","logger_name":"org.hibernate.dialect.Dialect","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:19:12.7132183-03:00","@version":"1","message":"HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)","logger_name":"org.hibernate.orm.deprecation","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:19:13.3437674-03:00","@version":"1","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:13.3562763-03:00","@version":"1","message":"\r\n    alter table if exists tb_products \r\n       drop constraint if exists fk_products_category","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:19:13.3582755-03:00","@version":"1","message":"\r\n    alter table if exists tb_products_v2 \r\n       drop constraint if exists fk_products_category_v2","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:19:13.3582755-03:00","@version":"1","message":"\r\n    alter table if exists tb_refresh_token \r\n       drop constraint if exists FKo1qldyy4gbjokinhqdllx5ej9","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:19:13.3582755-03:00","@version":"1","message":"\r\n    drop table if exists categories cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:19:13.3592771-03:00","@version":"1","message":"\r\n    drop table if exists tb_products cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:19:13.3592771-03:00","@version":"1","message":"\r\n    drop table if exists tb_products_v2 cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:19:13.3592771-03:00","@version":"1","message":"\r\n    drop table if exists tb_refresh_token cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:19:13.3592771-03:00","@version":"1","message":"\r\n    drop table if exists tb_users cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:19:13.3627859-03:00","@version":"1","message":"\r\n    create table categories (\r\n        id bigserial not null,\r\n        name varchar(100) not null,\r\n        description varchar(255),\r\n        primary key (id)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:19:13.369787-03:00","@version":"1","message":"\r\n    create table tb_products (\r\n        price numeric(19,2) not null,\r\n        status boolean not null,\r\n        category_id bigint not null,\r\n        id bigserial not null,\r\n        code varchar(50),\r\n        name varchar(100) not null,\r\n        description varchar(255),\r\n        primary key (id),\r\n        constraint uk_product_code unique (code),\r\n        check (price > 0)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:19:13.3780442-03:00","@version":"1","message":"\r\n    create table tb_products_v2 (\r\n        code integer,\r\n        price numeric(19,2) not null,\r\n        status boolean not null,\r\n        category_id bigint not null,\r\n        id bigserial not null,\r\n        name varchar(100) not null,\r\n        description varchar(255),\r\n        primary key (id),\r\n        constraint uk_product_v2_code unique (code),\r\n        check (price > 0)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:19:13.3790479-03:00","@version":"1","message":"\r\n    create table tb_refresh_token (\r\n        expiry_date timestamp(6) not null,\r\n        id bigserial not null,\r\n        user_id bigint not null,\r\n        token varchar(255) not null unique,\r\n        primary key (id)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:19:13.3805518-03:00","@version":"1","message":"\r\n    create table tb_users (\r\n        id bigserial not null,\r\n        email varchar(255) not null,\r\n        name varchar(255) not null,\r\n        password varchar(255) not null,\r\n        role varchar(255) not null check (role in ('ADMIN','USER')),\r\n        primary key (id),\r\n        constraint uk_user_email unique (email)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:19:13.3825575-03:00","@version":"1","message":"\r\n    create index idx_product_code \r\n       on tb_products (code)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:19:13.3835566-03:00","@version":"1","message":"\r\n    create index idx_product_v2_code \r\n       on tb_products_v2 (code)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:19:13.3835566-03:00","@version":"1","message":"\r\n    create index idx_refresh_token_token_value \r\n       on tb_refresh_token (token)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:19:13.384557-03:00","@version":"1","message":"\r\n    create index idx_user_email \r\n       on tb_users (email)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:19:13.384557-03:00","@version":"1","message":"\r\n    alter table if exists tb_products \r\n       add constraint fk_products_category \r\n       foreign key (category_id) \r\n       references categories","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:19:13.3875577-03:00","@version":"1","message":"\r\n    alter table if exists tb_products_v2 \r\n       add constraint fk_products_category_v2 \r\n       foreign key (category_id) \r\n       references categories","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:19:13.3875577-03:00","@version":"1","message":"\r\n    alter table if exists tb_refresh_token \r\n       add constraint FKo1qldyy4gbjokinhqdllx5ej9 \r\n       foreign key (user_id) \r\n       references tb_users","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:19:13.3920659-03:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:13.7636973-03:00","@version":"1","message":"Started ProductV2RepositoryTest in 1.993 seconds (process running for 5.828)","logger_name":"com.simplesdental.product.repository.ProductV2RepositoryTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:13.8150282-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:19:13.8425592-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products_v2\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:19:13.8518008-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:19:13.8537988-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products_v2\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:19:13.8728203-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:19:13.8738206-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products_v2\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:19:13.9208921-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:13.9208921-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:13.9208921-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:13.9615609-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:13.962561-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:13.962561-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:13.9866569-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:13.9866569-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:13.9876502-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:14.0011817-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:14.0011817-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:14.0011817-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:14.0091848-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:14.0091848-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:14.0091848-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:14.0257267-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.repository.ProductRepositoryTest]: ProductRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:14.0318367-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.repository.ProductRepositoryTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:14.0358352-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:19:14.0378364-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:19:14.0420025-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:19:14.0430027-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:19:14.0470026-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:19:14.0480027-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:19:14.0966353-03:00","@version":"1","message":"Buscando produtos - página: 0, tamanho: 10","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:14.0976353-03:00","@version":"1","message":"Foram encontrados 1 produtos","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:14.0996338-03:00","@version":"1","message":"Salvando novo produto: Escova de Dentes","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:14.0996338-03:00","@version":"1","message":"Produto salvo com sucesso com id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:14.1017566-03:00","@version":"1","message":"Buscando produto pelo id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:14.103756-03:00","@version":"1","message":"Buscando produto pelo id: 2","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:14.103756-03:00","@version":"1","message":"Produto não encontrado com id: 2","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"ERROR","level_value":40000}
{"@timestamp":"2025-09-14T18:19:14.1047556-03:00","@version":"1","message":"Atualizando produto id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:14.1047556-03:00","@version":"1","message":"Buscando produto pelo id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:14.105758-03:00","@version":"1","message":"Produto atualizado com sucesso id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:14.1067577-03:00","@version":"1","message":"Deletando produto id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:14.1067577-03:00","@version":"1","message":"Buscando produto pelo id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:14.1067577-03:00","@version":"1","message":"Produto deletado com sucesso id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:14.5967041-03:00","@version":"1","message":"Buscando categorias - página: 0, tamanho: 10","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:14.5967041-03:00","@version":"1","message":"Foram encontradas 1 categorias","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:14.5977043-03:00","@version":"1","message":"Salvando nova categoria: Higiene Bucal","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:14.5987043-03:00","@version":"1","message":"Categoria salva com sucesso com id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:14.5987043-03:00","@version":"1","message":"Buscando categoria pelo id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:14.6007027-03:00","@version":"1","message":"Atualizando categoria id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:14.6018475-03:00","@version":"1","message":"Categoria atualizada com sucesso: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:14.6038464-03:00","@version":"1","message":"Atualizando categoria id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:14.6038464-03:00","@version":"1","message":"Falha ao atualizar. Categoria não encontrada com id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"ERROR","level_value":40000}
{"@timestamp":"2025-09-14T18:19:14.6078479-03:00","@version":"1","message":"Deletando categoria id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:14.6078479-03:00","@version":"1","message":"Buscando categoria pelo id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:14.6078479-03:00","@version":"1","message":"Categoria deletada com sucesso id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:14.608847-03:00","@version":"1","message":"Buscando categoria pelo id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:14.608847-03:00","@version":"1","message":"Categoria não encontrada com id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"ERROR","level_value":40000}
{"@timestamp":"2025-09-14T18:19:14.6384768-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:14.6384768-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:14.6384768-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:14.6494991-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:14.6494991-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:14.6494991-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:14.6625275-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:14.6625275-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:14.6625275-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:14.6730432-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:14.6730432-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:14.6730432-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:14.6790446-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:14.6790446-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:14.6790446-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:14.6845536-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.repository.UserRepositoryTest]: UserRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:14.6905583-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.repository.UserRepositoryTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:14.7925087-03:00","@version":"1","message":"\r\n    select\r\n        u1_0.id,\r\n        u1_0.email,\r\n        u1_0.name,\r\n        u1_0.password,\r\n        u1_0.role \r\n    from\r\n        tb_users u1_0 \r\n    where\r\n        u1_0.email=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:19:14.8005075-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_users\r\n        (email, name, password, role) \r\n    values\r\n        (?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:19:14.8095386-03:00","@version":"1","message":"\r\n    select\r\n        u1_0.id,\r\n        u1_0.email,\r\n        u1_0.name,\r\n        u1_0.password,\r\n        u1_0.role \r\n    from\r\n        tb_users u1_0 \r\n    where\r\n        u1_0.email=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:19:14.8155598-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.repository.CategoryRepositoryTest]: CategoryRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:14.8205609-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.repository.CategoryRepositoryTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:14.8245839-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:19:14.8340948-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:19:14.8380941-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:19:14.839094-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:19:14.845605-03:00","@version":"1","message":"\r\n    select\r\n        c1_0.id,\r\n        c1_0.description,\r\n        c1_0.name \r\n    from\r\n        categories c1_0","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:19:14.861827-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.repository.RefreshTokenRepositoryTest]: RefreshTokenRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:14.868828-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.repository.RefreshTokenRepositoryTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:14.8733461-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_users\r\n        (email, name, password, role) \r\n    values\r\n        (?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:19:14.8753471-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_refresh_token\r\n        (expiry_date, token, user_id) \r\n    values\r\n        (?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:19:14.8845174-03:00","@version":"1","message":"\r\n    select\r\n        rt1_0.id,\r\n        rt1_0.expiry_date,\r\n        rt1_0.token,\r\n        rt1_0.user_id \r\n    from\r\n        tb_refresh_token rt1_0 \r\n    where\r\n        rt1_0.token=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:19:14.8895167-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_users\r\n        (email, name, password, role) \r\n    values\r\n        (?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:19:14.8915527-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_refresh_token\r\n        (expiry_date, token, user_id) \r\n    values\r\n        (?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:19:14.8925569-03:00","@version":"1","message":"\r\n    select\r\n        rt1_0.id,\r\n        rt1_0.expiry_date,\r\n        rt1_0.token,\r\n        rt1_0.user_id \r\n    from\r\n        tb_refresh_token rt1_0 \r\n    where\r\n        rt1_0.token=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:19:14.8985586-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.config.JacksonConfigTest]: JacksonConfigTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:14.910677-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.config.JacksonConfigTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:14.9311518-03:00","@version":"1","message":"Starting JacksonConfigTest using Java 21.0.5 with PID 27660 (started by flavi in C:\\Users\\flavi\\Downloads\\desafio-backend\\desafio-backend)","logger_name":"com.simplesdental.product.config.JacksonConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:14.9311518-03:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.simplesdental.product.config.JacksonConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:15.1102636-03:00","@version":"1","message":"Started JacksonConfigTest in 0.198 seconds (process running for 7.175)","logger_name":"com.simplesdental.product.config.JacksonConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:15.3194404-03:00","@version":"1","message":"Falha de validação: field: must not be null","logger_name":"com.simplesdental.product.Exceptions.GlobalExceptionHandler","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:19:15.3219521-03:00","@version":"1","message":"Erro inesperado: Unexpected error","logger_name":"com.simplesdental.product.Exceptions.GlobalExceptionHandler","thread_name":"main","level":"ERROR","level_value":40000,"stack_trace":"java.lang.Exception: Unexpected error\r\n\tat com.simplesdental.product.Exceptions.GlobalExceptionHandlerTest.testHandleAllExceptions(GlobalExceptionHandlerTest.java:78)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\r\n\tat org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)\r\n\tat org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)\r\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)\r\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)\r\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)\r\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)\r\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)\r\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)\r\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)\r\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)\r\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)\r\n\tat org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)\r\n\tat org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)\r\n\tat com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)\r\n\tat com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)\r\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)\r\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)\r\n"}
{"@timestamp":"2025-09-14T18:19:15.3269527-03:00","@version":"1","message":"Falha de autenticação: Invalid credentials","logger_name":"com.simplesdental.product.Exceptions.GlobalExceptionHandler","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:19:15.3279524-03:00","@version":"1","message":"Requisição não encontrada: Entity not found","logger_name":"com.simplesdental.product.Exceptions.GlobalExceptionHandler","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:19:15.4124226-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:15.4124226-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:15.4124226-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:15.4667808-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:15.4677816-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:15.4677816-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:15.4792956-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:15.4802965-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:15.4802965-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:15.4888149-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:15.4888149-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:15.4888149-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:15.4953265-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:15.4953265-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:15.4953265-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:15.5262458-03:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:19:15.5272453-03:00","@version":"1","message":"\r\n    alter table if exists tb_products \r\n       drop constraint if exists fk_products_category","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:19:15.5282453-03:00","@version":"1","message":"\r\n    alter table if exists tb_products_v2 \r\n       drop constraint if exists fk_products_category_v2","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:19:15.5292453-03:00","@version":"1","message":"\r\n    alter table if exists tb_refresh_token \r\n       drop constraint if exists FKo1qldyy4gbjokinhqdllx5ej9","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:19:15.5302461-03:00","@version":"1","message":"\r\n    drop table if exists categories cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:19:15.5312814-03:00","@version":"1","message":"\r\n    drop table if exists tb_products cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:19:15.5322816-03:00","@version":"1","message":"\r\n    drop table if exists tb_products_v2 cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:19:15.5322816-03:00","@version":"1","message":"\r\n    drop table if exists tb_refresh_token cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:19:15.5332801-03:00","@version":"1","message":"\r\n    drop table if exists tb_users cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:20:09.9231861-03:00","@version":"1","message":"HV000001: Hibernate Validator 8.0.1.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:09.9462111-03:00","@version":"1","message":"Starting SwaggerConfigTest using Java 21.0.5 with PID 24892 (started by flavi in C:\\Users\\flavi\\Downloads\\desafio-backend\\desafio-backend)","logger_name":"com.simplesdental.product.config.SwaggerConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:09.9472104-03:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.simplesdental.product.config.SwaggerConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:10.1711103-03:00","@version":"1","message":"Started SwaggerConfigTest in 0.742 seconds (process running for 2.724)","logger_name":"com.simplesdental.product.config.SwaggerConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:10.5068665-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:10.5078657-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:10.508867-03:00","@version":"1","message":"Completed initialization in 1 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:10.7001756-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:10.7001756-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:10.7001756-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:10.7147496-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:10.7157496-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:10.7157496-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:10.7262585-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:10.7262585-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:10.7262585-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:10.7397752-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:10.7397752-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:10.7397752-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:11.1502947-03:00","@version":"1","message":"Tentativa de login para o email: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:11.1564824-03:00","@version":"1","message":"Refresh token criado para o usuário: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:11.1564824-03:00","@version":"1","message":"Login bem-sucedido para o usuário: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:11.1594817-03:00","@version":"1","message":"Tentativa de login para o email: notfound@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:11.1594817-03:00","@version":"1","message":"Usuário não encontrado: notfound@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:20:11.1962392-03:00","@version":"1","message":"Refresh token criado para o usuário: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:11.199238-03:00","@version":"1","message":"Tentativa de login para o email: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:11.2339854-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.repository.ProductV2RepositoryTest]: ProductV2RepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:11.2810322-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.repository.ProductV2RepositoryTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:11.3145252-03:00","@version":"1","message":"Starting ProductV2RepositoryTest using Java 21.0.5 with PID 24892 (started by flavi in C:\\Users\\flavi\\Downloads\\desafio-backend\\desafio-backend)","logger_name":"com.simplesdental.product.repository.ProductV2RepositoryTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:11.3155258-03:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.simplesdental.product.repository.ProductV2RepositoryTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:11.5543087-03:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:11.5930783-03:00","@version":"1","message":"Finished Spring Data repository scanning in 33 ms. Found 5 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:11.6319024-03:00","@version":"1","message":"Replacing 'dataSource' DataSource bean with embedded version","logger_name":"org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration$EmbeddedDataSourceBeanFactoryPostProcessor","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:11.7000833-03:00","@version":"1","message":"Starting embedded database: url='jdbc:h2:mem:4e817e5a-c7ae-483c-b72a-959930daaa0f;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'","logger_name":"org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:11.9317186-03:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:11.9965479-03:00","@version":"1","message":"HHH000412: Hibernate ORM core version 6.4.4.Final","logger_name":"org.hibernate.Version","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:12.0240766-03:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:12.1130388-03:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:12.1498422-03:00","@version":"1","message":"HHH000511: The 2.2.0 version for [org.hibernate.dialect.PostgreSQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 12.0.0. Check the community dialects project for available legacy versions.","logger_name":"org.hibernate.dialect.Dialect","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:20:12.1543089-03:00","@version":"1","message":"HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)","logger_name":"org.hibernate.orm.deprecation","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:20:12.7538199-03:00","@version":"1","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:12.766815-03:00","@version":"1","message":"\r\n    alter table if exists tb_products \r\n       drop constraint if exists fk_products_category","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:20:12.7738692-03:00","@version":"1","message":"\r\n    alter table if exists tb_products_v2 \r\n       drop constraint if exists fk_products_category_v2","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:20:12.7748693-03:00","@version":"1","message":"\r\n    alter table if exists tb_refresh_token \r\n       drop constraint if exists FKo1qldyy4gbjokinhqdllx5ej9","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:20:12.7748693-03:00","@version":"1","message":"\r\n    drop table if exists categories cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:20:12.7748693-03:00","@version":"1","message":"\r\n    drop table if exists tb_products cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:20:12.7748693-03:00","@version":"1","message":"\r\n    drop table if exists tb_products_v2 cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:20:12.7748693-03:00","@version":"1","message":"\r\n    drop table if exists tb_refresh_token cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:20:12.7758733-03:00","@version":"1","message":"\r\n    drop table if exists tb_users cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:20:12.7798751-03:00","@version":"1","message":"\r\n    create table categories (\r\n        id bigserial not null,\r\n        name varchar(100) not null,\r\n        description varchar(255),\r\n        primary key (id)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:20:12.7869612-03:00","@version":"1","message":"\r\n    create table tb_products (\r\n        price numeric(19,2) not null,\r\n        status boolean not null,\r\n        category_id bigint not null,\r\n        id bigserial not null,\r\n        code varchar(50),\r\n        name varchar(100) not null,\r\n        description varchar(255),\r\n        primary key (id),\r\n        constraint uk_product_code unique (code),\r\n        check (price > 0)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:20:12.7949175-03:00","@version":"1","message":"\r\n    create table tb_products_v2 (\r\n        code integer,\r\n        price numeric(19,2) not null,\r\n        status boolean not null,\r\n        category_id bigint not null,\r\n        id bigserial not null,\r\n        name varchar(100) not null,\r\n        description varchar(255),\r\n        primary key (id),\r\n        constraint uk_product_v2_code unique (code),\r\n        check (price > 0)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:20:12.7969202-03:00","@version":"1","message":"\r\n    create table tb_refresh_token (\r\n        expiry_date timestamp(6) not null,\r\n        id bigserial not null,\r\n        user_id bigint not null,\r\n        token varchar(255) not null unique,\r\n        primary key (id)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:20:12.7979182-03:00","@version":"1","message":"\r\n    create table tb_users (\r\n        id bigserial not null,\r\n        email varchar(255) not null,\r\n        name varchar(255) not null,\r\n        password varchar(255) not null,\r\n        role varchar(255) not null check (role in ('ADMIN','USER')),\r\n        primary key (id),\r\n        constraint uk_user_email unique (email)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:20:12.7999205-03:00","@version":"1","message":"\r\n    create index idx_product_code \r\n       on tb_products (code)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:20:12.7999205-03:00","@version":"1","message":"\r\n    create index idx_product_v2_code \r\n       on tb_products_v2 (code)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:20:12.8009187-03:00","@version":"1","message":"\r\n    create index idx_refresh_token_token_value \r\n       on tb_refresh_token (token)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:20:12.8009187-03:00","@version":"1","message":"\r\n    create index idx_user_email \r\n       on tb_users (email)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:20:12.8019196-03:00","@version":"1","message":"\r\n    alter table if exists tb_products \r\n       add constraint fk_products_category \r\n       foreign key (category_id) \r\n       references categories","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:20:12.8050247-03:00","@version":"1","message":"\r\n    alter table if exists tb_products_v2 \r\n       add constraint fk_products_category_v2 \r\n       foreign key (category_id) \r\n       references categories","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:20:12.8050247-03:00","@version":"1","message":"\r\n    alter table if exists tb_refresh_token \r\n       add constraint FKo1qldyy4gbjokinhqdllx5ej9 \r\n       foreign key (user_id) \r\n       references tb_users","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:20:12.8100247-03:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:13.1779996-03:00","@version":"1","message":"Started ProductV2RepositoryTest in 1.893 seconds (process running for 5.732)","logger_name":"com.simplesdental.product.repository.ProductV2RepositoryTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:13.2239396-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:20:13.251489-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products_v2\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:20:13.2629986-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:20:13.2650714-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products_v2\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:20:13.2867321-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:20:13.2887331-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products_v2\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:20:13.33591-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:13.3369104-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:13.3369104-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:13.3800106-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:13.3800106-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:13.3800106-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:13.4030434-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:13.4030434-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:13.4030434-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:13.4155949-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:13.4155949-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:13.4155949-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:13.4230968-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:13.4230968-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:13.4230968-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:13.4371242-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.repository.ProductRepositoryTest]: ProductRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:13.445639-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.repository.ProductRepositoryTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:13.4496397-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:20:13.45164-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:20:13.4571534-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:20:13.4591528-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:20:13.463662-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:20:13.4656624-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:20:13.5147956-03:00","@version":"1","message":"Buscando produtos - página: 0, tamanho: 10","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:13.5147956-03:00","@version":"1","message":"Foram encontrados 1 produtos","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:13.5167953-03:00","@version":"1","message":"Salvando novo produto: Escova de Dentes","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:13.5177938-03:00","@version":"1","message":"Produto salvo com sucesso com id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:13.5187947-03:00","@version":"1","message":"Buscando produto pelo id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:13.5207933-03:00","@version":"1","message":"Buscando produto pelo id: 2","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:13.5207933-03:00","@version":"1","message":"Produto não encontrado com id: 2","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"ERROR","level_value":40000}
{"@timestamp":"2025-09-14T18:20:13.5217972-03:00","@version":"1","message":"Atualizando produto id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:13.5217972-03:00","@version":"1","message":"Buscando produto pelo id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:13.5227944-03:00","@version":"1","message":"Produto atualizado com sucesso id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:13.5238244-03:00","@version":"1","message":"Deletando produto id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:13.5238244-03:00","@version":"1","message":"Buscando produto pelo id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:13.5238244-03:00","@version":"1","message":"Produto deletado com sucesso id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:13.9602691-03:00","@version":"1","message":"Buscando categorias - página: 0, tamanho: 10","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:13.9602691-03:00","@version":"1","message":"Foram encontradas 1 categorias","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:13.961272-03:00","@version":"1","message":"Salvando nova categoria: Higiene Bucal","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:13.961272-03:00","@version":"1","message":"Categoria salva com sucesso com id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:13.9637838-03:00","@version":"1","message":"Buscando categoria pelo id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:13.9657801-03:00","@version":"1","message":"Atualizando categoria id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:13.9667816-03:00","@version":"1","message":"Categoria atualizada com sucesso: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:13.9687817-03:00","@version":"1","message":"Atualizando categoria id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:13.9687817-03:00","@version":"1","message":"Falha ao atualizar. Categoria não encontrada com id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"ERROR","level_value":40000}
{"@timestamp":"2025-09-14T18:20:13.9727809-03:00","@version":"1","message":"Deletando categoria id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:13.9727809-03:00","@version":"1","message":"Buscando categoria pelo id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:13.9727809-03:00","@version":"1","message":"Categoria deletada com sucesso id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:13.9750424-03:00","@version":"1","message":"Buscando categoria pelo id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:13.9750424-03:00","@version":"1","message":"Categoria não encontrada com id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"ERROR","level_value":40000}
{"@timestamp":"2025-09-14T18:20:14.0085747-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:14.0085747-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:14.0085747-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:14.0196774-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:14.0196774-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:14.0196774-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:14.0317415-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:14.0317415-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:14.0317415-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:14.0427922-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:14.0427922-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:14.0427922-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:14.048001-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:14.049002-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:14.049002-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:14.0550343-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.repository.UserRepositoryTest]: UserRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:14.0610336-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.repository.UserRepositoryTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:14.1677564-03:00","@version":"1","message":"\r\n    select\r\n        u1_0.id,\r\n        u1_0.email,\r\n        u1_0.name,\r\n        u1_0.password,\r\n        u1_0.role \r\n    from\r\n        tb_users u1_0 \r\n    where\r\n        u1_0.email=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:20:14.1751145-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_users\r\n        (email, name, password, role) \r\n    values\r\n        (?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:20:14.1811139-03:00","@version":"1","message":"\r\n    select\r\n        u1_0.id,\r\n        u1_0.email,\r\n        u1_0.name,\r\n        u1_0.password,\r\n        u1_0.role \r\n    from\r\n        tb_users u1_0 \r\n    where\r\n        u1_0.email=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:20:14.1866234-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.repository.CategoryRepositoryTest]: CategoryRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:14.1926227-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.repository.CategoryRepositoryTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:14.1966594-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:20:14.2058815-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:20:14.2098816-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:20:14.2108815-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:20:14.2183959-03:00","@version":"1","message":"\r\n    select\r\n        c1_0.id,\r\n        c1_0.description,\r\n        c1_0.name \r\n    from\r\n        categories c1_0","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:20:14.2319103-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.repository.RefreshTokenRepositoryTest]: RefreshTokenRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:14.2379595-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.repository.RefreshTokenRepositoryTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:14.2409583-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_users\r\n        (email, name, password, role) \r\n    values\r\n        (?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:20:14.242957-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_refresh_token\r\n        (expiry_date, token, user_id) \r\n    values\r\n        (?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:20:14.2515104-03:00","@version":"1","message":"\r\n    select\r\n        rt1_0.id,\r\n        rt1_0.expiry_date,\r\n        rt1_0.token,\r\n        rt1_0.user_id \r\n    from\r\n        tb_refresh_token rt1_0 \r\n    where\r\n        rt1_0.token=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:20:14.2570212-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_users\r\n        (email, name, password, role) \r\n    values\r\n        (?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:20:14.2590223-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_refresh_token\r\n        (expiry_date, token, user_id) \r\n    values\r\n        (?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:20:14.2600224-03:00","@version":"1","message":"\r\n    select\r\n        rt1_0.id,\r\n        rt1_0.expiry_date,\r\n        rt1_0.token,\r\n        rt1_0.user_id \r\n    from\r\n        tb_refresh_token rt1_0 \r\n    where\r\n        rt1_0.token=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:20:14.2665426-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.config.JacksonConfigTest]: JacksonConfigTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:14.2778126-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.config.JacksonConfigTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:14.2981155-03:00","@version":"1","message":"Starting JacksonConfigTest using Java 21.0.5 with PID 24892 (started by flavi in C:\\Users\\flavi\\Downloads\\desafio-backend\\desafio-backend)","logger_name":"com.simplesdental.product.config.JacksonConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:14.2981155-03:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.simplesdental.product.config.JacksonConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:14.479407-03:00","@version":"1","message":"Started JacksonConfigTest in 0.201 seconds (process running for 7.033)","logger_name":"com.simplesdental.product.config.JacksonConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:14.6706264-03:00","@version":"1","message":"Falha de validação: field: must not be null","logger_name":"com.simplesdental.product.Exceptions.GlobalExceptionHandler","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:20:14.6716277-03:00","@version":"1","message":"Erro inesperado: Unexpected error","logger_name":"com.simplesdental.product.Exceptions.GlobalExceptionHandler","thread_name":"main","level":"ERROR","level_value":40000,"stack_trace":"java.lang.Exception: Unexpected error\r\n\tat com.simplesdental.product.Exceptions.GlobalExceptionHandlerTest.testHandleAllExceptions(GlobalExceptionHandlerTest.java:78)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\r\n\tat org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)\r\n\tat org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)\r\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)\r\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)\r\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)\r\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)\r\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)\r\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)\r\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)\r\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)\r\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)\r\n\tat org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)\r\n\tat org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)\r\n\tat com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)\r\n\tat com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)\r\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)\r\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)\r\n"}
{"@timestamp":"2025-09-14T18:20:14.6757742-03:00","@version":"1","message":"Falha de autenticação: Invalid credentials","logger_name":"com.simplesdental.product.Exceptions.GlobalExceptionHandler","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:20:14.6767746-03:00","@version":"1","message":"Requisição não encontrada: Entity not found","logger_name":"com.simplesdental.product.Exceptions.GlobalExceptionHandler","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:20:14.7701619-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:14.7701619-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:14.7701619-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:14.8247589-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:14.8257577-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:14.8257577-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:14.8382729-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:14.8392737-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:14.8392737-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:14.8472947-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:14.8472947-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:14.8472947-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:14.8538068-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:14.8538068-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:14.8538068-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:14.8857121-03:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:20:14.8867124-03:00","@version":"1","message":"\r\n    alter table if exists tb_products \r\n       drop constraint if exists fk_products_category","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:20:14.8887124-03:00","@version":"1","message":"\r\n    alter table if exists tb_products_v2 \r\n       drop constraint if exists fk_products_category_v2","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:20:14.8897127-03:00","@version":"1","message":"\r\n    alter table if exists tb_refresh_token \r\n       drop constraint if exists FKo1qldyy4gbjokinhqdllx5ej9","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:20:14.8897127-03:00","@version":"1","message":"\r\n    drop table if exists categories cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:20:14.8917107-03:00","@version":"1","message":"\r\n    drop table if exists tb_products cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:20:14.8927113-03:00","@version":"1","message":"\r\n    drop table if exists tb_products_v2 cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:20:14.8927113-03:00","@version":"1","message":"\r\n    drop table if exists tb_refresh_token cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:20:14.8939387-03:00","@version":"1","message":"\r\n    drop table if exists tb_users cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:21:00.9069012-03:00","@version":"1","message":"HV000001: Hibernate Validator 8.0.1.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:00.9337499-03:00","@version":"1","message":"Starting SwaggerConfigTest using Java 21.0.5 with PID 19192 (started by flavi in C:\\Users\\flavi\\Downloads\\desafio-backend\\desafio-backend)","logger_name":"com.simplesdental.product.config.SwaggerConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:00.9347504-03:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.simplesdental.product.config.SwaggerConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:01.1540083-03:00","@version":"1","message":"Started SwaggerConfigTest in 0.748 seconds (process running for 2.714)","logger_name":"com.simplesdental.product.config.SwaggerConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:01.4338963-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:01.4348962-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:01.4364042-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:01.6316044-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:01.6316044-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:01.6316044-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:01.6437503-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:01.6437503-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:01.6447493-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:01.6548932-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:01.6548932-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:01.6548932-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:01.668485-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:01.668485-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:01.669484-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:02.0587914-03:00","@version":"1","message":"Tentativa de login para o email: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:02.0647952-03:00","@version":"1","message":"Refresh token criado para o usuário: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:02.0647952-03:00","@version":"1","message":"Login bem-sucedido para o usuário: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:02.068305-03:00","@version":"1","message":"Tentativa de login para o email: notfound@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:02.068305-03:00","@version":"1","message":"Usuário não encontrado: notfound@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:21:02.1074751-03:00","@version":"1","message":"Refresh token criado para o usuário: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:02.1104749-03:00","@version":"1","message":"Tentativa de login para o email: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:02.1104749-03:00","@version":"1","message":"Senha incorreta para o usuário: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:21:02.1248599-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.repository.ProductV2RepositoryTest]: ProductV2RepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:02.1809532-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.repository.ProductV2RepositoryTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:02.2165163-03:00","@version":"1","message":"Starting ProductV2RepositoryTest using Java 21.0.5 with PID 19192 (started by flavi in C:\\Users\\flavi\\Downloads\\desafio-backend\\desafio-backend)","logger_name":"com.simplesdental.product.repository.ProductV2RepositoryTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:02.2165163-03:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.simplesdental.product.repository.ProductV2RepositoryTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:02.4749791-03:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:02.5150373-03:00","@version":"1","message":"Finished Spring Data repository scanning in 33 ms. Found 5 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:02.5592861-03:00","@version":"1","message":"Replacing 'dataSource' DataSource bean with embedded version","logger_name":"org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration$EmbeddedDataSourceBeanFactoryPostProcessor","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:02.627507-03:00","@version":"1","message":"Starting embedded database: url='jdbc:h2:mem:f2dde185-aeb4-4478-8b9d-de4fdd54ad38;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'","logger_name":"org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:02.8503272-03:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:02.9043843-03:00","@version":"1","message":"HHH000412: Hibernate ORM core version 6.4.4.Final","logger_name":"org.hibernate.Version","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:02.9364167-03:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:03.031171-03:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:03.0673402-03:00","@version":"1","message":"HHH000511: The 2.2.0 version for [org.hibernate.dialect.PostgreSQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 12.0.0. Check the community dialects project for available legacy versions.","logger_name":"org.hibernate.dialect.Dialect","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:21:03.0713383-03:00","@version":"1","message":"HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)","logger_name":"org.hibernate.orm.deprecation","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:21:03.7007409-03:00","@version":"1","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:03.7132494-03:00","@version":"1","message":"\r\n    alter table if exists tb_products \r\n       drop constraint if exists fk_products_category","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:21:03.7162504-03:00","@version":"1","message":"\r\n    alter table if exists tb_products_v2 \r\n       drop constraint if exists fk_products_category_v2","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:21:03.7162504-03:00","@version":"1","message":"\r\n    alter table if exists tb_refresh_token \r\n       drop constraint if exists FKo1qldyy4gbjokinhqdllx5ej9","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:21:03.7162504-03:00","@version":"1","message":"\r\n    drop table if exists categories cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:21:03.7162504-03:00","@version":"1","message":"\r\n    drop table if exists tb_products cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:21:03.7162504-03:00","@version":"1","message":"\r\n    drop table if exists tb_products_v2 cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:21:03.7174551-03:00","@version":"1","message":"\r\n    drop table if exists tb_refresh_token cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:21:03.7174551-03:00","@version":"1","message":"\r\n    drop table if exists tb_users cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:21:03.720454-03:00","@version":"1","message":"\r\n    create table categories (\r\n        id bigserial not null,\r\n        name varchar(100) not null,\r\n        description varchar(255),\r\n        primary key (id)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:21:03.7269627-03:00","@version":"1","message":"\r\n    create table tb_products (\r\n        price numeric(19,2) not null,\r\n        status boolean not null,\r\n        category_id bigint not null,\r\n        id bigserial not null,\r\n        code varchar(50),\r\n        name varchar(100) not null,\r\n        description varchar(255),\r\n        primary key (id),\r\n        constraint uk_product_code unique (code),\r\n        check (price > 0)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:21:03.7339635-03:00","@version":"1","message":"\r\n    create table tb_products_v2 (\r\n        code integer,\r\n        price numeric(19,2) not null,\r\n        status boolean not null,\r\n        category_id bigint not null,\r\n        id bigserial not null,\r\n        name varchar(100) not null,\r\n        description varchar(255),\r\n        primary key (id),\r\n        constraint uk_product_v2_code unique (code),\r\n        check (price > 0)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:21:03.7364705-03:00","@version":"1","message":"\r\n    create table tb_refresh_token (\r\n        expiry_date timestamp(6) not null,\r\n        id bigserial not null,\r\n        user_id bigint not null,\r\n        token varchar(255) not null unique,\r\n        primary key (id)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:21:03.7374764-03:00","@version":"1","message":"\r\n    create table tb_users (\r\n        id bigserial not null,\r\n        email varchar(255) not null,\r\n        name varchar(255) not null,\r\n        password varchar(255) not null,\r\n        role varchar(255) not null check (role in ('ADMIN','USER')),\r\n        primary key (id),\r\n        constraint uk_user_email unique (email)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:21:03.7394764-03:00","@version":"1","message":"\r\n    create index idx_product_code \r\n       on tb_products (code)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:21:03.7394764-03:00","@version":"1","message":"\r\n    create index idx_product_v2_code \r\n       on tb_products_v2 (code)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:21:03.7404788-03:00","@version":"1","message":"\r\n    create index idx_refresh_token_token_value \r\n       on tb_refresh_token (token)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:21:03.7404788-03:00","@version":"1","message":"\r\n    create index idx_user_email \r\n       on tb_users (email)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:21:03.7404788-03:00","@version":"1","message":"\r\n    alter table if exists tb_products \r\n       add constraint fk_products_category \r\n       foreign key (category_id) \r\n       references categories","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:21:03.7444764-03:00","@version":"1","message":"\r\n    alter table if exists tb_products_v2 \r\n       add constraint fk_products_category_v2 \r\n       foreign key (category_id) \r\n       references categories","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:21:03.7444764-03:00","@version":"1","message":"\r\n    alter table if exists tb_refresh_token \r\n       add constraint FKo1qldyy4gbjokinhqdllx5ej9 \r\n       foreign key (user_id) \r\n       references tb_users","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:21:03.7489852-03:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:04.1440955-03:00","@version":"1","message":"Started ProductV2RepositoryTest in 1.961 seconds (process running for 5.704)","logger_name":"com.simplesdental.product.repository.ProductV2RepositoryTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:04.2013921-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:21:04.2290374-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products_v2\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:21:04.2394186-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:21:04.2404212-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products_v2\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:21:04.2584379-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:21:04.2614397-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products_v2\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:21:04.3080517-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:04.3080517-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:04.3080517-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:04.3491563-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:04.3491563-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:04.3491563-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:04.3703021-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:04.3703021-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:04.3713022-03:00","@version":"1","message":"Completed initialization in 1 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:04.3834867-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:04.3834867-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:04.3834867-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:04.3909995-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:04.3909995-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:04.3909995-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:04.4044146-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.repository.ProductRepositoryTest]: ProductRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:04.4115003-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.repository.ProductRepositoryTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:04.416005-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:21:04.4180094-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:21:04.4230107-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:21:04.4240104-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:21:04.4305221-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:21:04.4315234-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:21:04.4843489-03:00","@version":"1","message":"Buscando produtos - página: 0, tamanho: 10","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:04.4853475-03:00","@version":"1","message":"Foram encontrados 1 produtos","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:04.4863485-03:00","@version":"1","message":"Salvando novo produto: Escova de Dentes","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:04.4863485-03:00","@version":"1","message":"Produto salvo com sucesso com id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:04.4874384-03:00","@version":"1","message":"Buscando produto pelo id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:04.4894374-03:00","@version":"1","message":"Buscando produto pelo id: 2","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:04.4904403-03:00","@version":"1","message":"Produto não encontrado com id: 2","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"ERROR","level_value":40000}
{"@timestamp":"2025-09-14T18:21:04.491439-03:00","@version":"1","message":"Atualizando produto id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:04.491439-03:00","@version":"1","message":"Buscando produto pelo id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:04.491439-03:00","@version":"1","message":"Produto atualizado com sucesso id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:04.4924391-03:00","@version":"1","message":"Deletando produto id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:04.4924391-03:00","@version":"1","message":"Buscando produto pelo id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:04.4924391-03:00","@version":"1","message":"Produto deletado com sucesso id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:04.8713721-03:00","@version":"1","message":"Buscando categorias - página: 0, tamanho: 10","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:04.8723717-03:00","@version":"1","message":"Foram encontradas 1 categorias","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:04.8733727-03:00","@version":"1","message":"Salvando nova categoria: Higiene Bucal","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:04.8733727-03:00","@version":"1","message":"Categoria salva com sucesso com id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:04.8743736-03:00","@version":"1","message":"Buscando categoria pelo id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:04.876931-03:00","@version":"1","message":"Atualizando categoria id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:04.8779306-03:00","@version":"1","message":"Categoria atualizada com sucesso: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:04.8799307-03:00","@version":"1","message":"Atualizando categoria id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:04.8799307-03:00","@version":"1","message":"Falha ao atualizar. Categoria não encontrada com id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"ERROR","level_value":40000}
{"@timestamp":"2025-09-14T18:21:04.8839321-03:00","@version":"1","message":"Deletando categoria id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:04.8839321-03:00","@version":"1","message":"Buscando categoria pelo id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:04.8839321-03:00","@version":"1","message":"Categoria deletada com sucesso id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:04.8859314-03:00","@version":"1","message":"Buscando categoria pelo id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:04.8859314-03:00","@version":"1","message":"Categoria não encontrada com id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"ERROR","level_value":40000}
{"@timestamp":"2025-09-14T18:21:04.914179-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:04.914179-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:04.914179-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:04.9246849-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:04.9246849-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:04.9246849-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:04.9367011-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:04.9367011-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:04.9367011-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:04.9472233-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:04.9472233-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:04.9472233-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:04.9532213-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:04.9532213-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:04.9532213-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:04.959313-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.repository.UserRepositoryTest]: UserRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:04.9663137-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.repository.UserRepositoryTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:05.0719872-03:00","@version":"1","message":"\r\n    select\r\n        u1_0.id,\r\n        u1_0.email,\r\n        u1_0.name,\r\n        u1_0.password,\r\n        u1_0.role \r\n    from\r\n        tb_users u1_0 \r\n    where\r\n        u1_0.email=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:21:05.0810182-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_users\r\n        (email, name, password, role) \r\n    values\r\n        (?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:21:05.0881987-03:00","@version":"1","message":"\r\n    select\r\n        u1_0.id,\r\n        u1_0.email,\r\n        u1_0.name,\r\n        u1_0.password,\r\n        u1_0.role \r\n    from\r\n        tb_users u1_0 \r\n    where\r\n        u1_0.email=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:21:05.0941984-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.repository.CategoryRepositoryTest]: CategoryRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:05.1007096-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.repository.CategoryRepositoryTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:05.1037084-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:21:05.1132183-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:21:05.1172912-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:21:05.1182903-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:21:05.1252912-03:00","@version":"1","message":"\r\n    select\r\n        c1_0.id,\r\n        c1_0.description,\r\n        c1_0.name \r\n    from\r\n        categories c1_0","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:21:05.1401831-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.repository.RefreshTokenRepositoryTest]: RefreshTokenRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:05.1474344-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.repository.RefreshTokenRepositoryTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:05.1514311-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_users\r\n        (email, name, password, role) \r\n    values\r\n        (?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:21:05.1534342-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_refresh_token\r\n        (expiry_date, token, user_id) \r\n    values\r\n        (?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:21:05.1609454-03:00","@version":"1","message":"\r\n    select\r\n        rt1_0.id,\r\n        rt1_0.expiry_date,\r\n        rt1_0.token,\r\n        rt1_0.user_id \r\n    from\r\n        tb_refresh_token rt1_0 \r\n    where\r\n        rt1_0.token=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:21:05.1669987-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_users\r\n        (email, name, password, role) \r\n    values\r\n        (?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:21:05.1679985-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_refresh_token\r\n        (expiry_date, token, user_id) \r\n    values\r\n        (?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:21:05.1700001-03:00","@version":"1","message":"\r\n    select\r\n        rt1_0.id,\r\n        rt1_0.expiry_date,\r\n        rt1_0.token,\r\n        rt1_0.user_id \r\n    from\r\n        tb_refresh_token rt1_0 \r\n    where\r\n        rt1_0.token=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:21:05.1745065-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.config.JacksonConfigTest]: JacksonConfigTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:05.1860526-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.config.JacksonConfigTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:05.2059242-03:00","@version":"1","message":"Starting JacksonConfigTest using Java 21.0.5 with PID 19192 (started by flavi in C:\\Users\\flavi\\Downloads\\desafio-backend\\desafio-backend)","logger_name":"com.simplesdental.product.config.JacksonConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:05.2059242-03:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.simplesdental.product.config.JacksonConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:05.3744529-03:00","@version":"1","message":"Started JacksonConfigTest in 0.186 seconds (process running for 6.936)","logger_name":"com.simplesdental.product.config.JacksonConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:05.5970326-03:00","@version":"1","message":"Falha de validação: field: must not be null","logger_name":"com.simplesdental.product.Exceptions.GlobalExceptionHandler","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:21:05.5990322-03:00","@version":"1","message":"Erro inesperado: Unexpected error","logger_name":"com.simplesdental.product.Exceptions.GlobalExceptionHandler","thread_name":"main","level":"ERROR","level_value":40000,"stack_trace":"java.lang.Exception: Unexpected error\r\n\tat com.simplesdental.product.Exceptions.GlobalExceptionHandlerTest.testHandleAllExceptions(GlobalExceptionHandlerTest.java:78)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\r\n\tat org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)\r\n\tat org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)\r\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)\r\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)\r\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)\r\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)\r\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)\r\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)\r\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)\r\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)\r\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)\r\n\tat org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)\r\n\tat org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)\r\n\tat com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)\r\n\tat com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)\r\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)\r\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)\r\n"}
{"@timestamp":"2025-09-14T18:21:05.603032-03:00","@version":"1","message":"Falha de autenticação: Invalid credentials","logger_name":"com.simplesdental.product.Exceptions.GlobalExceptionHandler","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:21:05.6040327-03:00","@version":"1","message":"Requisição não encontrada: Entity not found","logger_name":"com.simplesdental.product.Exceptions.GlobalExceptionHandler","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:21:05.6890816-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:05.6890816-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:05.6890816-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:05.7502058-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:05.7502058-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:05.7502058-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:05.7633782-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:05.7633782-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:05.7643783-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:05.7728905-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:05.7728905-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:05.7728905-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:05.779927-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:05.7809282-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:05.7809282-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:05.8152086-03:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:21:05.8167181-03:00","@version":"1","message":"\r\n    alter table if exists tb_products \r\n       drop constraint if exists fk_products_category","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:21:05.8177202-03:00","@version":"1","message":"\r\n    alter table if exists tb_products_v2 \r\n       drop constraint if exists fk_products_category_v2","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:21:05.8187204-03:00","@version":"1","message":"\r\n    alter table if exists tb_refresh_token \r\n       drop constraint if exists FKo1qldyy4gbjokinhqdllx5ej9","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:21:05.8187204-03:00","@version":"1","message":"\r\n    drop table if exists categories cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:21:05.8207188-03:00","@version":"1","message":"\r\n    drop table if exists tb_products cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:21:05.8207188-03:00","@version":"1","message":"\r\n    drop table if exists tb_products_v2 cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:21:05.8217208-03:00","@version":"1","message":"\r\n    drop table if exists tb_refresh_token cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:21:05.8217208-03:00","@version":"1","message":"\r\n    drop table if exists tb_users cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:22:24.3876941-03:00","@version":"1","message":"HV000001: Hibernate Validator 8.0.1.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:24.4108787-03:00","@version":"1","message":"Starting SwaggerConfigTest using Java 21.0.5 with PID 416 (started by flavi in C:\\Users\\flavi\\Downloads\\desafio-backend\\desafio-backend)","logger_name":"com.simplesdental.product.config.SwaggerConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:24.4108787-03:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.simplesdental.product.config.SwaggerConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:24.6497233-03:00","@version":"1","message":"Started SwaggerConfigTest in 0.763 seconds (process running for 2.752)","logger_name":"com.simplesdental.product.config.SwaggerConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:24.9457124-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:24.9457124-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:24.9479337-03:00","@version":"1","message":"Completed initialization in 1 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:25.138428-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:25.138428-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:25.138428-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:25.1537552-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:25.1537552-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:25.1537552-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:25.1642633-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:25.1642633-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:25.1642633-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:25.1789611-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:25.1789611-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:25.1789611-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:25.5344485-03:00","@version":"1","message":"Tentativa de login para o email: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:25.5395259-03:00","@version":"1","message":"Refresh token criado para o usuário: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:25.5395259-03:00","@version":"1","message":"Login bem-sucedido para o usuário: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:25.5435265-03:00","@version":"1","message":"Tentativa de login para o email: notfound@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:25.5445251-03:00","@version":"1","message":"Usuário não encontrado: notfound@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:22:25.5796842-03:00","@version":"1","message":"Refresh token criado para o usuário: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:25.5826813-03:00","@version":"1","message":"Tentativa de login para o email: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:25.5826813-03:00","@version":"1","message":"Senha incorreta para o usuário: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:22:25.5964459-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.repository.ProductV2RepositoryTest]: ProductV2RepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:25.6468149-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.repository.ProductV2RepositoryTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:25.679823-03:00","@version":"1","message":"Starting ProductV2RepositoryTest using Java 21.0.5 with PID 416 (started by flavi in C:\\Users\\flavi\\Downloads\\desafio-backend\\desafio-backend)","logger_name":"com.simplesdental.product.repository.ProductV2RepositoryTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:25.679823-03:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.simplesdental.product.repository.ProductV2RepositoryTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:25.8808977-03:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:25.9181681-03:00","@version":"1","message":"Finished Spring Data repository scanning in 30 ms. Found 5 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:25.9557772-03:00","@version":"1","message":"Replacing 'dataSource' DataSource bean with embedded version","logger_name":"org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration$EmbeddedDataSourceBeanFactoryPostProcessor","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:26.0264933-03:00","@version":"1","message":"Starting embedded database: url='jdbc:h2:mem:4be796ce-d4b2-4f05-95c7-e56805522b5f;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'","logger_name":"org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:26.2468918-03:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:26.2994239-03:00","@version":"1","message":"HHH000412: Hibernate ORM core version 6.4.4.Final","logger_name":"org.hibernate.Version","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:26.3316466-03:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:26.4180987-03:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:26.4514061-03:00","@version":"1","message":"HHH000511: The 2.2.0 version for [org.hibernate.dialect.PostgreSQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 12.0.0. Check the community dialects project for available legacy versions.","logger_name":"org.hibernate.dialect.Dialect","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:22:26.4565386-03:00","@version":"1","message":"HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)","logger_name":"org.hibernate.orm.deprecation","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:22:27.0588998-03:00","@version":"1","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:27.0714093-03:00","@version":"1","message":"\r\n    alter table if exists tb_products \r\n       drop constraint if exists fk_products_category","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:22:27.073408-03:00","@version":"1","message":"\r\n    alter table if exists tb_products_v2 \r\n       drop constraint if exists fk_products_category_v2","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:22:27.073408-03:00","@version":"1","message":"\r\n    alter table if exists tb_refresh_token \r\n       drop constraint if exists FKo1qldyy4gbjokinhqdllx5ej9","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:22:27.073408-03:00","@version":"1","message":"\r\n    drop table if exists categories cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:22:27.0744081-03:00","@version":"1","message":"\r\n    drop table if exists tb_products cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:22:27.0744081-03:00","@version":"1","message":"\r\n    drop table if exists tb_products_v2 cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:22:27.0744081-03:00","@version":"1","message":"\r\n    drop table if exists tb_refresh_token cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:22:27.0744081-03:00","@version":"1","message":"\r\n    drop table if exists tb_users cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:22:27.0775996-03:00","@version":"1","message":"\r\n    create table categories (\r\n        id bigserial not null,\r\n        name varchar(100) not null,\r\n        description varchar(255),\r\n        primary key (id)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:22:27.0906321-03:00","@version":"1","message":"\r\n    create table tb_products (\r\n        price numeric(19,2) not null,\r\n        status boolean not null,\r\n        category_id bigint not null,\r\n        id bigserial not null,\r\n        code varchar(50),\r\n        name varchar(100) not null,\r\n        description varchar(255),\r\n        primary key (id),\r\n        constraint uk_product_code unique (code),\r\n        check (price > 0)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:22:27.0981388-03:00","@version":"1","message":"\r\n    create table tb_products_v2 (\r\n        code integer,\r\n        price numeric(19,2) not null,\r\n        status boolean not null,\r\n        category_id bigint not null,\r\n        id bigserial not null,\r\n        name varchar(100) not null,\r\n        description varchar(255),\r\n        primary key (id),\r\n        constraint uk_product_v2_code unique (code),\r\n        check (price > 0)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:22:27.1001414-03:00","@version":"1","message":"\r\n    create table tb_refresh_token (\r\n        expiry_date timestamp(6) not null,\r\n        id bigserial not null,\r\n        user_id bigint not null,\r\n        token varchar(255) not null unique,\r\n        primary key (id)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:22:27.1011394-03:00","@version":"1","message":"\r\n    create table tb_users (\r\n        id bigserial not null,\r\n        email varchar(255) not null,\r\n        name varchar(255) not null,\r\n        password varchar(255) not null,\r\n        role varchar(255) not null check (role in ('ADMIN','USER')),\r\n        primary key (id),\r\n        constraint uk_user_email unique (email)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:22:27.1021395-03:00","@version":"1","message":"\r\n    create index idx_product_code \r\n       on tb_products (code)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:22:27.1031424-03:00","@version":"1","message":"\r\n    create index idx_product_v2_code \r\n       on tb_products_v2 (code)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:22:27.1031424-03:00","@version":"1","message":"\r\n    create index idx_refresh_token_token_value \r\n       on tb_refresh_token (token)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:22:27.1041432-03:00","@version":"1","message":"\r\n    create index idx_user_email \r\n       on tb_users (email)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:22:27.1041432-03:00","@version":"1","message":"\r\n    alter table if exists tb_products \r\n       add constraint fk_products_category \r\n       foreign key (category_id) \r\n       references categories","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:22:27.1066518-03:00","@version":"1","message":"\r\n    alter table if exists tb_products_v2 \r\n       add constraint fk_products_category_v2 \r\n       foreign key (category_id) \r\n       references categories","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:22:27.1076519-03:00","@version":"1","message":"\r\n    alter table if exists tb_refresh_token \r\n       add constraint FKo1qldyy4gbjokinhqdllx5ej9 \r\n       foreign key (user_id) \r\n       references tb_users","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:22:27.1126516-03:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:27.4791579-03:00","@version":"1","message":"Started ProductV2RepositoryTest in 1.831 seconds (process running for 5.581)","logger_name":"com.simplesdental.product.repository.ProductV2RepositoryTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:27.5381216-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:22:27.5686104-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products_v2\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:22:27.579122-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:22:27.5811224-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products_v2\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:22:27.6018305-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:22:27.6038265-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products_v2\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:22:27.6562521-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:27.6562521-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:27.6562521-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:27.6965329-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:27.6965329-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:27.697534-03:00","@version":"1","message":"Completed initialization in 1 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:27.7201417-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:27.7201417-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:27.7201417-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:27.7331641-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:27.7331641-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:27.7331641-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:27.7422361-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:27.7422361-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:27.7422361-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:27.7562611-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.repository.ProductRepositoryTest]: ProductRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:27.7642592-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.repository.ProductRepositoryTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:27.7683514-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:22:27.7703546-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:22:27.7758564-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:22:27.7768633-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:22:27.7808622-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:22:27.7828627-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:22:27.8302477-03:00","@version":"1","message":"Buscando produtos - página: 0, tamanho: 10","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:27.8302477-03:00","@version":"1","message":"Foram encontrados 1 produtos","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:27.8322496-03:00","@version":"1","message":"Salvando novo produto: Escova de Dentes","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:27.8322496-03:00","@version":"1","message":"Produto salvo com sucesso com id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:27.833249-03:00","@version":"1","message":"Buscando produto pelo id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:27.8352494-03:00","@version":"1","message":"Buscando produto pelo id: 2","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:27.8363411-03:00","@version":"1","message":"Produto não encontrado com id: 2","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"ERROR","level_value":40000}
{"@timestamp":"2025-09-14T18:22:27.837341-03:00","@version":"1","message":"Atualizando produto id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:27.837341-03:00","@version":"1","message":"Buscando produto pelo id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:27.8383412-03:00","@version":"1","message":"Produto atualizado com sucesso id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:27.83934-03:00","@version":"1","message":"Deletando produto id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:27.83934-03:00","@version":"1","message":"Buscando produto pelo id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:27.83934-03:00","@version":"1","message":"Produto deletado com sucesso id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:28.1977446-03:00","@version":"1","message":"Buscando categorias - página: 0, tamanho: 10","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:28.1977446-03:00","@version":"1","message":"Foram encontradas 1 categorias","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:28.1987447-03:00","@version":"1","message":"Salvando nova categoria: Higiene Bucal","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:28.1987447-03:00","@version":"1","message":"Categoria salva com sucesso com id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:28.1997456-03:00","@version":"1","message":"Buscando categoria pelo id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:28.201744-03:00","@version":"1","message":"Atualizando categoria id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:28.2027447-03:00","@version":"1","message":"Categoria atualizada com sucesso: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:28.2052515-03:00","@version":"1","message":"Atualizando categoria id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:28.2052515-03:00","@version":"1","message":"Falha ao atualizar. Categoria não encontrada com id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"ERROR","level_value":40000}
{"@timestamp":"2025-09-14T18:22:28.2092592-03:00","@version":"1","message":"Deletando categoria id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:28.2092592-03:00","@version":"1","message":"Buscando categoria pelo id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:28.2092592-03:00","@version":"1","message":"Categoria deletada com sucesso id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:28.2112582-03:00","@version":"1","message":"Buscando categoria pelo id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:28.2112582-03:00","@version":"1","message":"Categoria não encontrada com id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"ERROR","level_value":40000}
{"@timestamp":"2025-09-14T18:22:28.2395635-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:28.2405625-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:28.2405625-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:28.2510731-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:28.2510731-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:28.2510731-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:28.2641676-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:28.2641676-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:28.2641676-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:28.2761907-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:28.2761907-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:28.2761907-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:28.2821899-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:28.2831901-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:28.2831901-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:28.2904123-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.repository.UserRepositoryTest]: UserRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:28.2974398-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.repository.UserRepositoryTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:28.4228871-03:00","@version":"1","message":"\r\n    select\r\n        u1_0.id,\r\n        u1_0.email,\r\n        u1_0.name,\r\n        u1_0.password,\r\n        u1_0.role \r\n    from\r\n        tb_users u1_0 \r\n    where\r\n        u1_0.email=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:22:28.4305188-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_users\r\n        (email, name, password, role) \r\n    values\r\n        (?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:22:28.4380349-03:00","@version":"1","message":"\r\n    select\r\n        u1_0.id,\r\n        u1_0.email,\r\n        u1_0.name,\r\n        u1_0.password,\r\n        u1_0.role \r\n    from\r\n        tb_users u1_0 \r\n    where\r\n        u1_0.email=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:22:28.4440356-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.repository.CategoryRepositoryTest]: CategoryRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:28.4491459-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.repository.CategoryRepositoryTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:28.454146-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:22:28.4642237-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:22:28.4692917-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:22:28.4712917-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:22:28.476496-03:00","@version":"1","message":"\r\n    select\r\n        c1_0.id,\r\n        c1_0.description,\r\n        c1_0.name \r\n    from\r\n        categories c1_0","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:22:28.4910055-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.repository.RefreshTokenRepositoryTest]: RefreshTokenRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:28.4975189-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.repository.RefreshTokenRepositoryTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:28.5007816-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_users\r\n        (email, name, password, role) \r\n    values\r\n        (?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:22:28.5027804-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_refresh_token\r\n        (expiry_date, token, user_id) \r\n    values\r\n        (?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:22:28.5112928-03:00","@version":"1","message":"\r\n    select\r\n        rt1_0.id,\r\n        rt1_0.expiry_date,\r\n        rt1_0.token,\r\n        rt1_0.user_id \r\n    from\r\n        tb_refresh_token rt1_0 \r\n    where\r\n        rt1_0.token=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:22:28.5178128-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_users\r\n        (email, name, password, role) \r\n    values\r\n        (?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:22:28.5198129-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_refresh_token\r\n        (expiry_date, token, user_id) \r\n    values\r\n        (?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:22:28.5218119-03:00","@version":"1","message":"\r\n    select\r\n        rt1_0.id,\r\n        rt1_0.expiry_date,\r\n        rt1_0.token,\r\n        rt1_0.user_id \r\n    from\r\n        tb_refresh_token rt1_0 \r\n    where\r\n        rt1_0.token=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:22:28.5276512-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.config.JacksonConfigTest]: JacksonConfigTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:28.5411622-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.config.JacksonConfigTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:28.568338-03:00","@version":"1","message":"Starting JacksonConfigTest using Java 21.0.5 with PID 416 (started by flavi in C:\\Users\\flavi\\Downloads\\desafio-backend\\desafio-backend)","logger_name":"com.simplesdental.product.config.JacksonConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:28.568338-03:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.simplesdental.product.config.JacksonConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:28.7660678-03:00","@version":"1","message":"Started JacksonConfigTest in 0.223 seconds (process running for 6.868)","logger_name":"com.simplesdental.product.config.JacksonConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:28.9731791-03:00","@version":"1","message":"Falha de validação: field: must not be null","logger_name":"com.simplesdental.product.Exceptions.GlobalExceptionHandler","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:22:28.9741798-03:00","@version":"1","message":"Erro inesperado: Unexpected error","logger_name":"com.simplesdental.product.Exceptions.GlobalExceptionHandler","thread_name":"main","level":"ERROR","level_value":40000,"stack_trace":"java.lang.Exception: Unexpected error\r\n\tat com.simplesdental.product.Exceptions.GlobalExceptionHandlerTest.testHandleAllExceptions(GlobalExceptionHandlerTest.java:78)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\r\n\tat org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)\r\n\tat org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)\r\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)\r\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)\r\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)\r\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)\r\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)\r\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)\r\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)\r\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)\r\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)\r\n\tat org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)\r\n\tat org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)\r\n\tat com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)\r\n\tat com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)\r\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)\r\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)\r\n"}
{"@timestamp":"2025-09-14T18:22:28.9791995-03:00","@version":"1","message":"Falha de autenticação: Invalid credentials","logger_name":"com.simplesdental.product.Exceptions.GlobalExceptionHandler","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:22:28.9802023-03:00","@version":"1","message":"Requisição não encontrada: Entity not found","logger_name":"com.simplesdental.product.Exceptions.GlobalExceptionHandler","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:22:29.0693486-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:29.0693486-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:29.0693486-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:29.1273042-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:29.1273042-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:29.1273042-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:29.1425898-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:29.1425898-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:29.1425898-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:29.1551025-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:29.1551025-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:29.1551025-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:29.162148-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:29.162148-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:29.162148-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:29.2023065-03:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:22:29.2033055-03:00","@version":"1","message":"\r\n    alter table if exists tb_products \r\n       drop constraint if exists fk_products_category","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:22:29.2053067-03:00","@version":"1","message":"\r\n    alter table if exists tb_products_v2 \r\n       drop constraint if exists fk_products_category_v2","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:22:29.2063793-03:00","@version":"1","message":"\r\n    alter table if exists tb_refresh_token \r\n       drop constraint if exists FKo1qldyy4gbjokinhqdllx5ej9","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:22:29.2063793-03:00","@version":"1","message":"\r\n    drop table if exists categories cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:22:29.2083774-03:00","@version":"1","message":"\r\n    drop table if exists tb_products cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:22:29.2083774-03:00","@version":"1","message":"\r\n    drop table if exists tb_products_v2 cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:22:29.2083774-03:00","@version":"1","message":"\r\n    drop table if exists tb_refresh_token cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:22:29.2093802-03:00","@version":"1","message":"\r\n    drop table if exists tb_users cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:27:19.0025002-03:00","@version":"1","message":"HV000001: Hibernate Validator 8.0.1.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:19.0256045-03:00","@version":"1","message":"Starting SwaggerConfigTest using Java 21.0.5 with PID 33076 (started by flavi in C:\\Users\\flavi\\Downloads\\desafio-backend\\desafio-backend)","logger_name":"com.simplesdental.product.config.SwaggerConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:19.0256045-03:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.simplesdental.product.config.SwaggerConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:19.2689928-03:00","@version":"1","message":"Started SwaggerConfigTest in 0.741 seconds (process running for 2.767)","logger_name":"com.simplesdental.product.config.SwaggerConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:19.552887-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:19.5538838-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:19.5548836-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:19.7430867-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:19.7430867-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:19.7440861-03:00","@version":"1","message":"Completed initialization in 1 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:19.7555935-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:19.7555935-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:19.7570992-03:00","@version":"1","message":"Completed initialization in 2 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:19.7682991-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:19.7682991-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:19.7682991-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:19.7813684-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:19.7813684-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:19.7823668-03:00","@version":"1","message":"Completed initialization in 1 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:20.1672787-03:00","@version":"1","message":"Tentativa de login para o email: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:20.1732834-03:00","@version":"1","message":"Refresh token criado para o usuário: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:20.1732834-03:00","@version":"1","message":"Login bem-sucedido para o usuário: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:20.1772837-03:00","@version":"1","message":"Tentativa de login para o email: notfound@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:20.1772837-03:00","@version":"1","message":"Usuário não encontrado: notfound@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:27:20.2131823-03:00","@version":"1","message":"Refresh token criado para o usuário: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:20.2161836-03:00","@version":"1","message":"Tentativa de login para o email: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:20.2161836-03:00","@version":"1","message":"Senha incorreta para o usuário: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:27:20.2310142-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.repository.ProductV2RepositoryTest]: ProductV2RepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:20.2898574-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.repository.ProductV2RepositoryTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:20.3250143-03:00","@version":"1","message":"Starting ProductV2RepositoryTest using Java 21.0.5 with PID 33076 (started by flavi in C:\\Users\\flavi\\Downloads\\desafio-backend\\desafio-backend)","logger_name":"com.simplesdental.product.repository.ProductV2RepositoryTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:20.3260209-03:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.simplesdental.product.repository.ProductV2RepositoryTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:20.565008-03:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:20.6091016-03:00","@version":"1","message":"Finished Spring Data repository scanning in 38 ms. Found 5 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:20.6487605-03:00","@version":"1","message":"Replacing 'dataSource' DataSource bean with embedded version","logger_name":"org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration$EmbeddedDataSourceBeanFactoryPostProcessor","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:20.715824-03:00","@version":"1","message":"Starting embedded database: url='jdbc:h2:mem:246f2988-d995-4ac3-938e-85af5fe7c610;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'","logger_name":"org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:20.9317434-03:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:20.9809018-03:00","@version":"1","message":"HHH000412: Hibernate ORM core version 6.4.4.Final","logger_name":"org.hibernate.Version","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:21.0129855-03:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:21.0954836-03:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:21.1305141-03:00","@version":"1","message":"HHH000511: The 2.2.0 version for [org.hibernate.dialect.PostgreSQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 12.0.0. Check the community dialects project for available legacy versions.","logger_name":"org.hibernate.dialect.Dialect","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:27:21.1345151-03:00","@version":"1","message":"HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)","logger_name":"org.hibernate.orm.deprecation","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:27:21.7433104-03:00","@version":"1","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:21.7548183-03:00","@version":"1","message":"\r\n    alter table if exists tb_products \r\n       drop constraint if exists fk_products_category","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:27:21.7582111-03:00","@version":"1","message":"\r\n    alter table if exists tb_products_v2 \r\n       drop constraint if exists fk_products_category_v2","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:27:21.7582111-03:00","@version":"1","message":"\r\n    alter table if exists tb_refresh_token \r\n       drop constraint if exists FKo1qldyy4gbjokinhqdllx5ej9","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:27:21.7582111-03:00","@version":"1","message":"\r\n    drop table if exists categories cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:27:21.7582111-03:00","@version":"1","message":"\r\n    drop table if exists tb_products cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:27:21.7592115-03:00","@version":"1","message":"\r\n    drop table if exists tb_products_v2 cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:27:21.7592115-03:00","@version":"1","message":"\r\n    drop table if exists tb_refresh_token cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:27:21.7592115-03:00","@version":"1","message":"\r\n    drop table if exists tb_users cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:27:21.7622096-03:00","@version":"1","message":"\r\n    create table categories (\r\n        id bigserial not null,\r\n        name varchar(100) not null,\r\n        description varchar(255),\r\n        primary key (id)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:27:21.7697198-03:00","@version":"1","message":"\r\n    create table tb_products (\r\n        price numeric(19,2) not null,\r\n        status boolean not null,\r\n        category_id bigint not null,\r\n        id bigserial not null,\r\n        code varchar(50),\r\n        name varchar(100) not null,\r\n        description varchar(255),\r\n        primary key (id),\r\n        constraint uk_product_code unique (code),\r\n        check (price > 0)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:27:21.7777974-03:00","@version":"1","message":"\r\n    create table tb_products_v2 (\r\n        code integer,\r\n        price numeric(19,2) not null,\r\n        status boolean not null,\r\n        category_id bigint not null,\r\n        id bigserial not null,\r\n        name varchar(100) not null,\r\n        description varchar(255),\r\n        primary key (id),\r\n        constraint uk_product_v2_code unique (code),\r\n        check (price > 0)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:27:21.7797968-03:00","@version":"1","message":"\r\n    create table tb_refresh_token (\r\n        expiry_date timestamp(6) not null,\r\n        id bigserial not null,\r\n        user_id bigint not null,\r\n        token varchar(255) not null unique,\r\n        primary key (id)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:27:21.7797968-03:00","@version":"1","message":"\r\n    create table tb_users (\r\n        id bigserial not null,\r\n        email varchar(255) not null,\r\n        name varchar(255) not null,\r\n        password varchar(255) not null,\r\n        role varchar(255) not null check (role in ('ADMIN','USER')),\r\n        primary key (id),\r\n        constraint uk_user_email unique (email)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:27:21.7817975-03:00","@version":"1","message":"\r\n    create index idx_product_code \r\n       on tb_products (code)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:27:21.7827989-03:00","@version":"1","message":"\r\n    create index idx_product_v2_code \r\n       on tb_products_v2 (code)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:27:21.7827989-03:00","@version":"1","message":"\r\n    create index idx_refresh_token_token_value \r\n       on tb_refresh_token (token)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:27:21.7837964-03:00","@version":"1","message":"\r\n    create index idx_user_email \r\n       on tb_users (email)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:27:21.7837964-03:00","@version":"1","message":"\r\n    alter table if exists tb_products \r\n       add constraint fk_products_category \r\n       foreign key (category_id) \r\n       references categories","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:27:21.7867966-03:00","@version":"1","message":"\r\n    alter table if exists tb_products_v2 \r\n       add constraint fk_products_category_v2 \r\n       foreign key (category_id) \r\n       references categories","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:27:21.7867966-03:00","@version":"1","message":"\r\n    alter table if exists tb_refresh_token \r\n       add constraint FKo1qldyy4gbjokinhqdllx5ej9 \r\n       foreign key (user_id) \r\n       references tb_users","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:27:21.7920624-03:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:22.160748-03:00","@version":"1","message":"Started ProductV2RepositoryTest in 1.868 seconds (process running for 5.659)","logger_name":"com.simplesdental.product.repository.ProductV2RepositoryTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:22.2166323-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:27:22.2449066-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products_v2\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:27:22.2551439-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:27:22.2576561-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products_v2\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:27:22.2801776-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:27:22.282178-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products_v2\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:27:22.3287293-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:22.3287293-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:22.3287293-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:22.3730774-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:22.3730774-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:22.3730774-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:22.3978152-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:22.3978152-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:22.3978152-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:22.4088944-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:22.4088944-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:22.4088944-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:22.415895-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:22.415895-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:22.415895-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:22.4321917-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.repository.ProductRepositoryTest]: ProductRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:22.4397022-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.repository.ProductRepositoryTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:22.4447623-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:27:22.446763-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:27:22.4508447-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:27:22.4528449-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:27:22.4589262-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:27:22.4609253-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:27:22.5182199-03:00","@version":"1","message":"Buscando produtos - página: 0, tamanho: 10","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:22.5182199-03:00","@version":"1","message":"Foram encontrados 1 produtos","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:22.5212198-03:00","@version":"1","message":"Salvando novo produto: Escova de Dentes","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:22.5212198-03:00","@version":"1","message":"Produto salvo com sucesso com id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:22.5222208-03:00","@version":"1","message":"Buscando produto pelo id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:22.5252196-03:00","@version":"1","message":"Buscando produto pelo id: 2","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:22.5252196-03:00","@version":"1","message":"Produto não encontrado com id: 2","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"ERROR","level_value":40000}
{"@timestamp":"2025-09-14T18:27:22.5267252-03:00","@version":"1","message":"Atualizando produto id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:22.5267252-03:00","@version":"1","message":"Buscando produto pelo id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:22.5277308-03:00","@version":"1","message":"Produto atualizado com sucesso id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:22.5287337-03:00","@version":"1","message":"Deletando produto id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:22.5287337-03:00","@version":"1","message":"Buscando produto pelo id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:22.5287337-03:00","@version":"1","message":"Produto deletado com sucesso id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:22.8880344-03:00","@version":"1","message":"Buscando categorias - página: 0, tamanho: 10","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:22.8880344-03:00","@version":"1","message":"Foram encontradas 1 categorias","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:22.8900348-03:00","@version":"1","message":"Salvando nova categoria: Higiene Bucal","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:22.8900348-03:00","@version":"1","message":"Categoria salva com sucesso com id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:22.8910351-03:00","@version":"1","message":"Buscando categoria pelo id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:22.8930357-03:00","@version":"1","message":"Atualizando categoria id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:22.8940339-03:00","@version":"1","message":"Categoria atualizada com sucesso: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:22.8950338-03:00","@version":"1","message":"Atualizando categoria id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:22.8965385-03:00","@version":"1","message":"Falha ao atualizar. Categoria não encontrada com id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"ERROR","level_value":40000}
{"@timestamp":"2025-09-14T18:27:22.8995454-03:00","@version":"1","message":"Deletando categoria id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:22.9005453-03:00","@version":"1","message":"Buscando categoria pelo id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:22.9005453-03:00","@version":"1","message":"Categoria deletada com sucesso id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:22.9015486-03:00","@version":"1","message":"Buscando categoria pelo id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:22.9015486-03:00","@version":"1","message":"Categoria não encontrada com id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"ERROR","level_value":40000}
{"@timestamp":"2025-09-14T18:27:22.9315397-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:22.9315397-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:22.9315397-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:22.9430531-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:22.9430531-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:22.9430531-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:22.9545635-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:22.9545635-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:22.9555647-03:00","@version":"1","message":"Completed initialization in 1 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:22.9666429-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:22.9666429-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:22.9666429-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:22.9728291-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:22.9728291-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:22.9728291-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:22.9789517-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.repository.UserRepositoryTest]: UserRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:22.9890743-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.repository.UserRepositoryTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:23.1067548-03:00","@version":"1","message":"\r\n    select\r\n        u1_0.id,\r\n        u1_0.email,\r\n        u1_0.name,\r\n        u1_0.password,\r\n        u1_0.role \r\n    from\r\n        tb_users u1_0 \r\n    where\r\n        u1_0.email=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:27:23.11476-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_users\r\n        (email, name, password, role) \r\n    values\r\n        (?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:27:23.1209454-03:00","@version":"1","message":"\r\n    select\r\n        u1_0.id,\r\n        u1_0.email,\r\n        u1_0.name,\r\n        u1_0.password,\r\n        u1_0.role \r\n    from\r\n        tb_users u1_0 \r\n    where\r\n        u1_0.email=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:27:23.1274583-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.repository.CategoryRepositoryTest]: CategoryRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:23.1334604-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.repository.CategoryRepositoryTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:23.1369667-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:27:23.1469782-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:27:23.1510723-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:27:23.1530723-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:27:23.158584-03:00","@version":"1","message":"\r\n    select\r\n        c1_0.id,\r\n        c1_0.description,\r\n        c1_0.name \r\n    from\r\n        categories c1_0","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:27:23.1710913-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.repository.RefreshTokenRepositoryTest]: RefreshTokenRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:23.1786073-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.repository.RefreshTokenRepositoryTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:23.182606-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_users\r\n        (email, name, password, role) \r\n    values\r\n        (?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:27:23.1836088-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_refresh_token\r\n        (expiry_date, token, user_id) \r\n    values\r\n        (?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:27:23.1931182-03:00","@version":"1","message":"\r\n    select\r\n        rt1_0.id,\r\n        rt1_0.expiry_date,\r\n        rt1_0.token,\r\n        rt1_0.user_id \r\n    from\r\n        tb_refresh_token rt1_0 \r\n    where\r\n        rt1_0.token=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:27:23.1976297-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_users\r\n        (email, name, password, role) \r\n    values\r\n        (?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:27:23.1986301-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_refresh_token\r\n        (expiry_date, token, user_id) \r\n    values\r\n        (?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:27:23.2006295-03:00","@version":"1","message":"\r\n    select\r\n        rt1_0.id,\r\n        rt1_0.expiry_date,\r\n        rt1_0.token,\r\n        rt1_0.user_id \r\n    from\r\n        tb_refresh_token rt1_0 \r\n    where\r\n        rt1_0.token=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:27:23.205629-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.config.JacksonConfigTest]: JacksonConfigTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:23.2169564-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.config.JacksonConfigTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:23.2354919-03:00","@version":"1","message":"Starting JacksonConfigTest using Java 21.0.5 with PID 33076 (started by flavi in C:\\Users\\flavi\\Downloads\\desafio-backend\\desafio-backend)","logger_name":"com.simplesdental.product.config.JacksonConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:23.2354919-03:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.simplesdental.product.config.JacksonConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:23.3909283-03:00","@version":"1","message":"Started JacksonConfigTest in 0.172 seconds (process running for 6.889)","logger_name":"com.simplesdental.product.config.JacksonConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:23.5647456-03:00","@version":"1","message":"Falha de validação: field: must not be null","logger_name":"com.simplesdental.product.Exceptions.GlobalExceptionHandler","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:27:23.5667481-03:00","@version":"1","message":"Erro inesperado: Unexpected error","logger_name":"com.simplesdental.product.Exceptions.GlobalExceptionHandler","thread_name":"main","level":"ERROR","level_value":40000,"stack_trace":"java.lang.Exception: Unexpected error\r\n\tat com.simplesdental.product.Exceptions.GlobalExceptionHandlerTest.testHandleAllExceptions(GlobalExceptionHandlerTest.java:78)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\r\n\tat org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)\r\n\tat org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)\r\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)\r\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)\r\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)\r\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)\r\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)\r\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)\r\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)\r\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)\r\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)\r\n\tat org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)\r\n\tat org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)\r\n\tat com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)\r\n\tat com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)\r\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)\r\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)\r\n"}
{"@timestamp":"2025-09-14T18:27:23.5711079-03:00","@version":"1","message":"Falha de autenticação: Invalid credentials","logger_name":"com.simplesdental.product.Exceptions.GlobalExceptionHandler","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:27:23.5711079-03:00","@version":"1","message":"Requisição não encontrada: Entity not found","logger_name":"com.simplesdental.product.Exceptions.GlobalExceptionHandler","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:27:23.6505959-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:23.6515958-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:23.6515958-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:23.7055474-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:23.7055474-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:23.7055474-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:23.7188382-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:23.7188382-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:23.7188382-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:23.7268374-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:23.7268374-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:23.7268374-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:23.7330887-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:23.7330887-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:23.7330887-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:23.78767-03:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:27:23.78867-03:00","@version":"1","message":"\r\n    alter table if exists tb_products \r\n       drop constraint if exists fk_products_category","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:27:23.7896713-03:00","@version":"1","message":"\r\n    alter table if exists tb_products_v2 \r\n       drop constraint if exists fk_products_category_v2","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:27:23.790668-03:00","@version":"1","message":"\r\n    alter table if exists tb_refresh_token \r\n       drop constraint if exists FKo1qldyy4gbjokinhqdllx5ej9","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:27:23.790668-03:00","@version":"1","message":"\r\n    drop table if exists categories cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:27:23.7926698-03:00","@version":"1","message":"\r\n    drop table if exists tb_products cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:27:23.7936689-03:00","@version":"1","message":"\r\n    drop table if exists tb_products_v2 cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:27:23.7936689-03:00","@version":"1","message":"\r\n    drop table if exists tb_refresh_token cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:27:23.7946697-03:00","@version":"1","message":"\r\n    drop table if exists tb_users cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:28:29.802323-03:00","@version":"1","message":"HV000001: Hibernate Validator 8.0.1.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:29.8260372-03:00","@version":"1","message":"Starting SwaggerConfigTest using Java 21.0.5 with PID 25156 (started by flavi in C:\\Users\\flavi\\Downloads\\desafio-backend\\desafio-backend)","logger_name":"com.simplesdental.product.config.SwaggerConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:29.8270376-03:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.simplesdental.product.config.SwaggerConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:30.0525975-03:00","@version":"1","message":"Started SwaggerConfigTest in 0.728 seconds (process running for 2.683)","logger_name":"com.simplesdental.product.config.SwaggerConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:30.3017409-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:30.302742-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:30.3037423-03:00","@version":"1","message":"Completed initialization in 1 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:30.4944361-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:30.4944361-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:30.4944361-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:30.5080794-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:30.5080794-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:30.5080794-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:30.5196436-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:30.5196436-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:30.5196436-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:30.5321523-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:30.5321523-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:30.5321523-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:30.9101204-03:00","@version":"1","message":"Tentativa de login para o email: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:30.9161206-03:00","@version":"1","message":"Refresh token criado para o usuário: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:30.9161206-03:00","@version":"1","message":"Login bem-sucedido para o usuário: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:30.9196308-03:00","@version":"1","message":"Tentativa de login para o email: notfound@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:30.9206294-03:00","@version":"1","message":"Usuário não encontrado: notfound@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:28:30.955685-03:00","@version":"1","message":"Refresh token criado para o usuário: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:30.957685-03:00","@version":"1","message":"Tentativa de login para o email: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:30.9588806-03:00","@version":"1","message":"Senha incorreta para o usuário: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:28:30.9739462-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.repository.ProductV2RepositoryTest]: ProductV2RepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:31.0328737-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.repository.ProductV2RepositoryTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:31.0639595-03:00","@version":"1","message":"Starting ProductV2RepositoryTest using Java 21.0.5 with PID 25156 (started by flavi in C:\\Users\\flavi\\Downloads\\desafio-backend\\desafio-backend)","logger_name":"com.simplesdental.product.repository.ProductV2RepositoryTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:31.0639595-03:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.simplesdental.product.repository.ProductV2RepositoryTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:31.3038467-03:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:31.344638-03:00","@version":"1","message":"Finished Spring Data repository scanning in 35 ms. Found 5 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:31.3861794-03:00","@version":"1","message":"Replacing 'dataSource' DataSource bean with embedded version","logger_name":"org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration$EmbeddedDataSourceBeanFactoryPostProcessor","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:31.4569852-03:00","@version":"1","message":"Starting embedded database: url='jdbc:h2:mem:7c3e697a-a9d7-4285-b420-f5fb491d6b15;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'","logger_name":"org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:31.6816689-03:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:31.7331139-03:00","@version":"1","message":"HHH000412: Hibernate ORM core version 6.4.4.Final","logger_name":"org.hibernate.Version","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:31.7664037-03:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:31.8619896-03:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:31.8988885-03:00","@version":"1","message":"HHH000511: The 2.2.0 version for [org.hibernate.dialect.PostgreSQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 12.0.0. Check the community dialects project for available legacy versions.","logger_name":"org.hibernate.dialect.Dialect","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:28:31.9043992-03:00","@version":"1","message":"HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)","logger_name":"org.hibernate.orm.deprecation","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:28:32.5551803-03:00","@version":"1","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:32.5676962-03:00","@version":"1","message":"\r\n    alter table if exists tb_products \r\n       drop constraint if exists fk_products_category","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:28:32.5707649-03:00","@version":"1","message":"\r\n    alter table if exists tb_products_v2 \r\n       drop constraint if exists fk_products_category_v2","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:28:32.5707649-03:00","@version":"1","message":"\r\n    alter table if exists tb_refresh_token \r\n       drop constraint if exists FKo1qldyy4gbjokinhqdllx5ej9","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:28:32.5707649-03:00","@version":"1","message":"\r\n    drop table if exists categories cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:28:32.5707649-03:00","@version":"1","message":"\r\n    drop table if exists tb_products cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:28:32.5717654-03:00","@version":"1","message":"\r\n    drop table if exists tb_products_v2 cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:28:32.5717654-03:00","@version":"1","message":"\r\n    drop table if exists tb_refresh_token cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:28:32.5717654-03:00","@version":"1","message":"\r\n    drop table if exists tb_users cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:28:32.5757648-03:00","@version":"1","message":"\r\n    create table categories (\r\n        id bigserial not null,\r\n        name varchar(100) not null,\r\n        description varchar(255),\r\n        primary key (id)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:28:32.5822113-03:00","@version":"1","message":"\r\n    create table tb_products (\r\n        price numeric(19,2) not null,\r\n        status boolean not null,\r\n        category_id bigint not null,\r\n        id bigserial not null,\r\n        code varchar(50),\r\n        name varchar(100) not null,\r\n        description varchar(255),\r\n        primary key (id),\r\n        constraint uk_product_code unique (code),\r\n        check (price > 0)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:28:32.5927306-03:00","@version":"1","message":"\r\n    create table tb_products_v2 (\r\n        code integer,\r\n        price numeric(19,2) not null,\r\n        status boolean not null,\r\n        category_id bigint not null,\r\n        id bigserial not null,\r\n        name varchar(100) not null,\r\n        description varchar(255),\r\n        primary key (id),\r\n        constraint uk_product_v2_code unique (code),\r\n        check (price > 0)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:28:32.5947309-03:00","@version":"1","message":"\r\n    create table tb_refresh_token (\r\n        expiry_date timestamp(6) not null,\r\n        id bigserial not null,\r\n        user_id bigint not null,\r\n        token varchar(255) not null unique,\r\n        primary key (id)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:28:32.5957315-03:00","@version":"1","message":"\r\n    create table tb_users (\r\n        id bigserial not null,\r\n        email varchar(255) not null,\r\n        name varchar(255) not null,\r\n        password varchar(255) not null,\r\n        role varchar(255) not null check (role in ('ADMIN','USER')),\r\n        primary key (id),\r\n        constraint uk_user_email unique (email)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:28:32.5977307-03:00","@version":"1","message":"\r\n    create index idx_product_code \r\n       on tb_products (code)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:28:32.5989968-03:00","@version":"1","message":"\r\n    create index idx_product_v2_code \r\n       on tb_products_v2 (code)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:28:32.5989968-03:00","@version":"1","message":"\r\n    create index idx_refresh_token_token_value \r\n       on tb_refresh_token (token)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:28:32.5999957-03:00","@version":"1","message":"\r\n    create index idx_user_email \r\n       on tb_users (email)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:28:32.5999957-03:00","@version":"1","message":"\r\n    alter table if exists tb_products \r\n       add constraint fk_products_category \r\n       foreign key (category_id) \r\n       references categories","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:28:32.6025061-03:00","@version":"1","message":"\r\n    alter table if exists tb_products_v2 \r\n       add constraint fk_products_category_v2 \r\n       foreign key (category_id) \r\n       references categories","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:28:32.6035058-03:00","@version":"1","message":"\r\n    alter table if exists tb_refresh_token \r\n       add constraint FKo1qldyy4gbjokinhqdllx5ej9 \r\n       foreign key (user_id) \r\n       references tb_users","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:28:32.608011-03:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:32.9814943-03:00","@version":"1","message":"Started ProductV2RepositoryTest in 1.946 seconds (process running for 5.612)","logger_name":"com.simplesdental.product.repository.ProductV2RepositoryTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:33.0456031-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:28:33.0773573-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products_v2\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:28:33.0886957-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:28:33.0896951-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products_v2\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:28:33.1123638-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:28:33.1143626-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products_v2\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:28:33.1608234-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:33.1608234-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:33.1608234-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:33.2063334-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:33.2063334-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:33.2063334-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:33.2273623-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:33.2273623-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:33.2273623-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:33.2394915-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:33.2394915-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:33.2394915-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:33.2454955-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:33.2454955-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:33.246497-03:00","@version":"1","message":"Completed initialization in 1 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:33.2640428-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.repository.ProductRepositoryTest]: ProductRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:33.2705596-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.repository.ProductRepositoryTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:33.2755625-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:28:33.2775608-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:28:33.2827504-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:28:33.28375-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:28:33.2892657-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:28:33.2902723-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:28:33.3393991-03:00","@version":"1","message":"Buscando produtos - página: 0, tamanho: 10","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:33.3404003-03:00","@version":"1","message":"Foram encontrados 1 produtos","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:33.3424002-03:00","@version":"1","message":"Salvando novo produto: Escova de Dentes","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:33.3424002-03:00","@version":"1","message":"Produto salvo com sucesso com id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:33.3433967-03:00","@version":"1","message":"Buscando produto pelo id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:33.3454008-03:00","@version":"1","message":"Buscando produto pelo id: 2","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:33.3454008-03:00","@version":"1","message":"Produto não encontrado com id: 2","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"ERROR","level_value":40000}
{"@timestamp":"2025-09-14T18:28:33.3473996-03:00","@version":"1","message":"Atualizando produto id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:33.3473996-03:00","@version":"1","message":"Buscando produto pelo id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:33.3473996-03:00","@version":"1","message":"Produto atualizado com sucesso id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:33.3486481-03:00","@version":"1","message":"Deletando produto id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:33.3486481-03:00","@version":"1","message":"Buscando produto pelo id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:33.3496486-03:00","@version":"1","message":"Produto deletado com sucesso id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:33.7685263-03:00","@version":"1","message":"Buscando categorias - página: 0, tamanho: 10","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:33.7685263-03:00","@version":"1","message":"Foram encontradas 1 categorias","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:33.7705286-03:00","@version":"1","message":"Salvando nova categoria: Higiene Bucal","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:33.7705286-03:00","@version":"1","message":"Categoria salva com sucesso com id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:33.7715275-03:00","@version":"1","message":"Buscando categoria pelo id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:33.7725255-03:00","@version":"1","message":"Atualizando categoria id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:33.7735254-03:00","@version":"1","message":"Categoria atualizada com sucesso: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:33.7755259-03:00","@version":"1","message":"Atualizando categoria id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:33.7755259-03:00","@version":"1","message":"Falha ao atualizar. Categoria não encontrada com id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"ERROR","level_value":40000}
{"@timestamp":"2025-09-14T18:28:33.7805565-03:00","@version":"1","message":"Deletando categoria id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:33.7805565-03:00","@version":"1","message":"Buscando categoria pelo id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:33.7805565-03:00","@version":"1","message":"Categoria deletada com sucesso id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:33.7825567-03:00","@version":"1","message":"Buscando categoria pelo id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:33.7825567-03:00","@version":"1","message":"Categoria não encontrada com id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"ERROR","level_value":40000}
{"@timestamp":"2025-09-14T18:28:33.8097335-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:33.8107327-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:33.8107327-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:33.820753-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:33.820753-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:33.820753-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:33.8322656-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:33.8332659-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:33.8332659-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:33.8432956-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:33.8432956-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:33.8432956-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:33.8493521-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:33.8493521-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:33.8493521-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:33.8553501-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.repository.UserRepositoryTest]: UserRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:33.8613958-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.repository.UserRepositoryTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:34.0076991-03:00","@version":"1","message":"\r\n    select\r\n        u1_0.id,\r\n        u1_0.email,\r\n        u1_0.name,\r\n        u1_0.password,\r\n        u1_0.role \r\n    from\r\n        tb_users u1_0 \r\n    where\r\n        u1_0.email=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:28:34.0159632-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_users\r\n        (email, name, password, role) \r\n    values\r\n        (?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:28:34.0254752-03:00","@version":"1","message":"\r\n    select\r\n        u1_0.id,\r\n        u1_0.email,\r\n        u1_0.name,\r\n        u1_0.password,\r\n        u1_0.role \r\n    from\r\n        tb_users u1_0 \r\n    where\r\n        u1_0.email=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:28:34.0328081-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.repository.CategoryRepositoryTest]: CategoryRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:34.0393274-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.repository.CategoryRepositoryTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:34.0423232-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:28:34.0517419-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:28:34.0557445-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:28:34.057249-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:28:34.0642533-03:00","@version":"1","message":"\r\n    select\r\n        c1_0.id,\r\n        c1_0.description,\r\n        c1_0.name \r\n    from\r\n        categories c1_0","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:28:34.0798988-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.repository.RefreshTokenRepositoryTest]: RefreshTokenRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:34.0858982-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.repository.RefreshTokenRepositoryTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:34.0904078-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_users\r\n        (email, name, password, role) \r\n    values\r\n        (?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:28:34.0924089-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_refresh_token\r\n        (expiry_date, token, user_id) \r\n    values\r\n        (?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:28:34.1012894-03:00","@version":"1","message":"\r\n    select\r\n        rt1_0.id,\r\n        rt1_0.expiry_date,\r\n        rt1_0.token,\r\n        rt1_0.user_id \r\n    from\r\n        tb_refresh_token rt1_0 \r\n    where\r\n        rt1_0.token=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:28:34.1062948-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_users\r\n        (email, name, password, role) \r\n    values\r\n        (?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:28:34.1083327-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_refresh_token\r\n        (expiry_date, token, user_id) \r\n    values\r\n        (?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:28:34.1093353-03:00","@version":"1","message":"\r\n    select\r\n        rt1_0.id,\r\n        rt1_0.expiry_date,\r\n        rt1_0.token,\r\n        rt1_0.user_id \r\n    from\r\n        tb_refresh_token rt1_0 \r\n    where\r\n        rt1_0.token=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:28:34.1163343-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.config.JacksonConfigTest]: JacksonConfigTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:34.1296569-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.config.JacksonConfigTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:34.148205-03:00","@version":"1","message":"Starting JacksonConfigTest using Java 21.0.5 with PID 25156 (started by flavi in C:\\Users\\flavi\\Downloads\\desafio-backend\\desafio-backend)","logger_name":"com.simplesdental.product.config.JacksonConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:34.149205-03:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.simplesdental.product.config.JacksonConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:34.3255871-03:00","@version":"1","message":"Started JacksonConfigTest in 0.194 seconds (process running for 6.956)","logger_name":"com.simplesdental.product.config.JacksonConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:34.5142845-03:00","@version":"1","message":"Falha de validação: field: must not be null","logger_name":"com.simplesdental.product.Exceptions.GlobalExceptionHandler","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:28:34.5162826-03:00","@version":"1","message":"Erro inesperado: Unexpected error","logger_name":"com.simplesdental.product.Exceptions.GlobalExceptionHandler","thread_name":"main","level":"ERROR","level_value":40000,"stack_trace":"java.lang.Exception: Unexpected error\r\n\tat com.simplesdental.product.Exceptions.GlobalExceptionHandlerTest.testHandleAllExceptions(GlobalExceptionHandlerTest.java:78)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\r\n\tat org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)\r\n\tat org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)\r\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)\r\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)\r\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)\r\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)\r\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)\r\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)\r\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)\r\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)\r\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)\r\n\tat org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)\r\n\tat org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)\r\n\tat com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)\r\n\tat com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)\r\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)\r\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)\r\n"}
{"@timestamp":"2025-09-14T18:28:34.5213727-03:00","@version":"1","message":"Falha de autenticação: Invalid credentials","logger_name":"com.simplesdental.product.Exceptions.GlobalExceptionHandler","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:28:34.5213727-03:00","@version":"1","message":"Requisição não encontrada: Entity not found","logger_name":"com.simplesdental.product.Exceptions.GlobalExceptionHandler","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:28:34.6004417-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:34.6004417-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:34.601442-03:00","@version":"1","message":"Completed initialization in 1 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:34.6525635-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:34.6535625-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:34.6535625-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:34.6650805-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:34.6660803-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:34.6660803-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:34.673592-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:34.673592-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:34.673592-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:34.6790689-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:34.6790689-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:34.6790689-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:34.7282802-03:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:34.7292805-03:00","@version":"1","message":"\r\n    alter table if exists tb_products \r\n       drop constraint if exists fk_products_category","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:28:34.7312812-03:00","@version":"1","message":"\r\n    alter table if exists tb_products_v2 \r\n       drop constraint if exists fk_products_category_v2","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:28:34.7312812-03:00","@version":"1","message":"\r\n    alter table if exists tb_refresh_token \r\n       drop constraint if exists FKo1qldyy4gbjokinhqdllx5ej9","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:28:34.7322808-03:00","@version":"1","message":"\r\n    drop table if exists categories cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:28:34.7332815-03:00","@version":"1","message":"\r\n    drop table if exists tb_products cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:28:34.7342796-03:00","@version":"1","message":"\r\n    drop table if exists tb_products_v2 cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:28:34.7342796-03:00","@version":"1","message":"\r\n    drop table if exists tb_refresh_token cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:28:34.7352824-03:00","@version":"1","message":"\r\n    drop table if exists tb_users cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:28:56.1504952-03:00","@version":"1","message":"HV000001: Hibernate Validator 8.0.1.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:56.1767256-03:00","@version":"1","message":"Starting SwaggerConfigTest using Java 21.0.5 with PID 12592 (started by flavi in C:\\Users\\flavi\\Downloads\\desafio-backend\\desafio-backend)","logger_name":"com.simplesdental.product.config.SwaggerConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:56.177726-03:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.simplesdental.product.config.SwaggerConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:56.4093787-03:00","@version":"1","message":"Started SwaggerConfigTest in 0.768 seconds (process running for 2.713)","logger_name":"com.simplesdental.product.config.SwaggerConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:56.7244106-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:56.7254156-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:56.7264148-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:56.9242505-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:56.9242505-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:56.9242505-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:56.941364-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:56.941364-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:56.942361-03:00","@version":"1","message":"Completed initialization in 1 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:56.955014-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:56.955014-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:56.955014-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:56.9715282-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:56.9715282-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:56.9715282-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:57.3821428-03:00","@version":"1","message":"Tentativa de login para o email: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:57.3896526-03:00","@version":"1","message":"Refresh token criado para o usuário: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:57.3896526-03:00","@version":"1","message":"Login bem-sucedido para o usuário: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:57.3926519-03:00","@version":"1","message":"Tentativa de login para o email: notfound@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:57.3926519-03:00","@version":"1","message":"Usuário não encontrado: notfound@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:28:57.430814-03:00","@version":"1","message":"Refresh token criado para o usuário: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:57.4328141-03:00","@version":"1","message":"Tentativa de login para o email: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:57.4343198-03:00","@version":"1","message":"Senha incorreta para o usuário: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:28:57.4498428-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.repository.ProductV2RepositoryTest]: ProductV2RepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:57.5125784-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.repository.ProductV2RepositoryTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:57.5468023-03:00","@version":"1","message":"Starting ProductV2RepositoryTest using Java 21.0.5 with PID 12592 (started by flavi in C:\\Users\\flavi\\Downloads\\desafio-backend\\desafio-backend)","logger_name":"com.simplesdental.product.repository.ProductV2RepositoryTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:57.5468023-03:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.simplesdental.product.repository.ProductV2RepositoryTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:57.79849-03:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:57.8394525-03:00","@version":"1","message":"Finished Spring Data repository scanning in 34 ms. Found 5 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:57.8811977-03:00","@version":"1","message":"Replacing 'dataSource' DataSource bean with embedded version","logger_name":"org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration$EmbeddedDataSourceBeanFactoryPostProcessor","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:57.9683443-03:00","@version":"1","message":"Starting embedded database: url='jdbc:h2:mem:3a3cc675-8e71-471c-8da8-ab62e5a6fa17;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'","logger_name":"org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:58.2072648-03:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:58.2624033-03:00","@version":"1","message":"HHH000412: Hibernate ORM core version 6.4.4.Final","logger_name":"org.hibernate.Version","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:58.2967868-03:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:58.3888733-03:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:58.4243906-03:00","@version":"1","message":"HHH000511: The 2.2.0 version for [org.hibernate.dialect.PostgreSQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 12.0.0. Check the community dialects project for available legacy versions.","logger_name":"org.hibernate.dialect.Dialect","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:28:58.4283949-03:00","@version":"1","message":"HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)","logger_name":"org.hibernate.orm.deprecation","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:28:59.0582597-03:00","@version":"1","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:59.0697684-03:00","@version":"1","message":"\r\n    alter table if exists tb_products \r\n       drop constraint if exists fk_products_category","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:28:59.0727688-03:00","@version":"1","message":"\r\n    alter table if exists tb_products_v2 \r\n       drop constraint if exists fk_products_category_v2","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:28:59.0727688-03:00","@version":"1","message":"\r\n    alter table if exists tb_refresh_token \r\n       drop constraint if exists FKo1qldyy4gbjokinhqdllx5ej9","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:28:59.0727688-03:00","@version":"1","message":"\r\n    drop table if exists categories cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:28:59.0727688-03:00","@version":"1","message":"\r\n    drop table if exists tb_products cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:28:59.0727688-03:00","@version":"1","message":"\r\n    drop table if exists tb_products_v2 cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:28:59.0727688-03:00","@version":"1","message":"\r\n    drop table if exists tb_refresh_token cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:28:59.0727688-03:00","@version":"1","message":"\r\n    drop table if exists tb_users cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:28:59.0772775-03:00","@version":"1","message":"\r\n    create table categories (\r\n        id bigserial not null,\r\n        name varchar(100) not null,\r\n        description varchar(255),\r\n        primary key (id)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:28:59.0842776-03:00","@version":"1","message":"\r\n    create table tb_products (\r\n        price numeric(19,2) not null,\r\n        status boolean not null,\r\n        category_id bigint not null,\r\n        id bigserial not null,\r\n        code varchar(50),\r\n        name varchar(100) not null,\r\n        description varchar(255),\r\n        primary key (id),\r\n        constraint uk_product_code unique (code),\r\n        check (price > 0)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:28:59.0924302-03:00","@version":"1","message":"\r\n    create table tb_products_v2 (\r\n        code integer,\r\n        price numeric(19,2) not null,\r\n        status boolean not null,\r\n        category_id bigint not null,\r\n        id bigserial not null,\r\n        name varchar(100) not null,\r\n        description varchar(255),\r\n        primary key (id),\r\n        constraint uk_product_v2_code unique (code),\r\n        check (price > 0)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:28:59.093934-03:00","@version":"1","message":"\r\n    create table tb_refresh_token (\r\n        expiry_date timestamp(6) not null,\r\n        id bigserial not null,\r\n        user_id bigint not null,\r\n        token varchar(255) not null unique,\r\n        primary key (id)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:28:59.0949393-03:00","@version":"1","message":"\r\n    create table tb_users (\r\n        id bigserial not null,\r\n        email varchar(255) not null,\r\n        name varchar(255) not null,\r\n        password varchar(255) not null,\r\n        role varchar(255) not null check (role in ('ADMIN','USER')),\r\n        primary key (id),\r\n        constraint uk_user_email unique (email)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:28:59.0969384-03:00","@version":"1","message":"\r\n    create index idx_product_code \r\n       on tb_products (code)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:28:59.0969384-03:00","@version":"1","message":"\r\n    create index idx_product_v2_code \r\n       on tb_products_v2 (code)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:28:59.0969384-03:00","@version":"1","message":"\r\n    create index idx_refresh_token_token_value \r\n       on tb_refresh_token (token)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:28:59.0979385-03:00","@version":"1","message":"\r\n    create index idx_user_email \r\n       on tb_users (email)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:28:59.0979385-03:00","@version":"1","message":"\r\n    alter table if exists tb_products \r\n       add constraint fk_products_category \r\n       foreign key (category_id) \r\n       references categories","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:28:59.1009382-03:00","@version":"1","message":"\r\n    alter table if exists tb_products_v2 \r\n       add constraint fk_products_category_v2 \r\n       foreign key (category_id) \r\n       references categories","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:28:59.1019382-03:00","@version":"1","message":"\r\n    alter table if exists tb_refresh_token \r\n       add constraint FKo1qldyy4gbjokinhqdllx5ej9 \r\n       foreign key (user_id) \r\n       references tb_users","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:28:59.1064461-03:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:59.4972007-03:00","@version":"1","message":"Started ProductV2RepositoryTest in 1.982 seconds (process running for 5.801)","logger_name":"com.simplesdental.product.repository.ProductV2RepositoryTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:59.5520287-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:28:59.5790917-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products_v2\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:28:59.5906014-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:28:59.5926012-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products_v2\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:28:59.6157012-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:28:59.6176989-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products_v2\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:28:59.6642435-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:59.6642435-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:59.6642435-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:59.7089337-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:59.7089337-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:59.7099334-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:59.7325009-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:59.7325009-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:59.7325009-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:59.7450628-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:59.7450628-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:59.7450628-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:59.7540633-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:59.7540633-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:59.7540633-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:59.7689446-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.repository.ProductRepositoryTest]: ProductRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:59.7753789-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.repository.ProductRepositoryTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:59.7803785-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:28:59.7823781-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:28:59.7878953-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:28:59.7888938-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:28:59.7938937-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:28:59.7938937-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:28:59.8471877-03:00","@version":"1","message":"Buscando produtos - página: 0, tamanho: 10","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:59.8481893-03:00","@version":"1","message":"Foram encontrados 1 produtos","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:59.8501909-03:00","@version":"1","message":"Salvando novo produto: Escova de Dentes","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:59.8501909-03:00","@version":"1","message":"Produto salvo com sucesso com id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:59.8521891-03:00","@version":"1","message":"Buscando produto pelo id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:59.8541895-03:00","@version":"1","message":"Buscando produto pelo id: 2","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:59.855244-03:00","@version":"1","message":"Produto não encontrado com id: 2","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"ERROR","level_value":40000}
{"@timestamp":"2025-09-14T18:28:59.8572496-03:00","@version":"1","message":"Atualizando produto id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:59.8572496-03:00","@version":"1","message":"Buscando produto pelo id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:59.8572496-03:00","@version":"1","message":"Produto atualizado com sucesso id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:59.8592489-03:00","@version":"1","message":"Deletando produto id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:59.8592489-03:00","@version":"1","message":"Buscando produto pelo id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:28:59.8592489-03:00","@version":"1","message":"Produto deletado com sucesso id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:29:00.2959298-03:00","@version":"1","message":"Buscando categorias - página: 0, tamanho: 10","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:29:00.2959298-03:00","@version":"1","message":"Foram encontradas 1 categorias","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:29:00.29793-03:00","@version":"1","message":"Salvando nova categoria: Higiene Bucal","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:29:00.29793-03:00","@version":"1","message":"Categoria salva com sucesso com id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:29:00.2989295-03:00","@version":"1","message":"Buscando categoria pelo id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:29:00.3009302-03:00","@version":"1","message":"Atualizando categoria id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:29:00.3019296-03:00","@version":"1","message":"Categoria atualizada com sucesso: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:29:00.30393-03:00","@version":"1","message":"Atualizando categoria id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:29:00.30393-03:00","@version":"1","message":"Falha ao atualizar. Categoria não encontrada com id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"ERROR","level_value":40000}
{"@timestamp":"2025-09-14T18:29:00.307961-03:00","@version":"1","message":"Deletando categoria id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:29:00.307961-03:00","@version":"1","message":"Buscando categoria pelo id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:29:00.307961-03:00","@version":"1","message":"Categoria deletada com sucesso id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:29:00.3089595-03:00","@version":"1","message":"Buscando categoria pelo id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:29:00.3099589-03:00","@version":"1","message":"Categoria não encontrada com id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"ERROR","level_value":40000}
{"@timestamp":"2025-09-14T18:29:00.337094-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:29:00.338095-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:29:00.338095-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:29:00.3471918-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:29:00.3471918-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:29:00.3471918-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:29:00.3592566-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:29:00.3602584-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:29:00.3602584-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:29:00.3713311-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:29:00.3713311-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:29:00.3713311-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:29:00.3778408-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:29:00.3778408-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:29:00.3778408-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:29:00.3838449-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.repository.UserRepositoryTest]: UserRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:29:00.3909209-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.repository.UserRepositoryTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:29:00.4912651-03:00","@version":"1","message":"\r\n    select\r\n        u1_0.id,\r\n        u1_0.email,\r\n        u1_0.name,\r\n        u1_0.password,\r\n        u1_0.role \r\n    from\r\n        tb_users u1_0 \r\n    where\r\n        u1_0.email=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:29:00.4997778-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_users\r\n        (email, name, password, role) \r\n    values\r\n        (?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:29:00.5069013-03:00","@version":"1","message":"\r\n    select\r\n        u1_0.id,\r\n        u1_0.email,\r\n        u1_0.name,\r\n        u1_0.password,\r\n        u1_0.role \r\n    from\r\n        tb_users u1_0 \r\n    where\r\n        u1_0.email=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:29:00.5119025-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.repository.CategoryRepositoryTest]: CategoryRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:29:00.5171461-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.repository.CategoryRepositoryTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:29:00.5211465-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:29:00.5292262-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:29:00.5332253-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:29:00.5342267-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:29:00.5413145-03:00","@version":"1","message":"\r\n    select\r\n        c1_0.id,\r\n        c1_0.description,\r\n        c1_0.name \r\n    from\r\n        categories c1_0","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:29:00.556897-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.repository.RefreshTokenRepositoryTest]: RefreshTokenRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:29:00.5628999-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.repository.RefreshTokenRepositoryTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:29:00.5664052-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_users\r\n        (email, name, password, role) \r\n    values\r\n        (?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:29:00.5674062-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_refresh_token\r\n        (expiry_date, token, user_id) \r\n    values\r\n        (?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:29:00.5739092-03:00","@version":"1","message":"\r\n    select\r\n        rt1_0.id,\r\n        rt1_0.expiry_date,\r\n        rt1_0.token,\r\n        rt1_0.user_id \r\n    from\r\n        tb_refresh_token rt1_0 \r\n    where\r\n        rt1_0.token=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:29:00.5789141-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_users\r\n        (email, name, password, role) \r\n    values\r\n        (?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:29:00.5809132-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_refresh_token\r\n        (expiry_date, token, user_id) \r\n    values\r\n        (?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:29:00.5819157-03:00","@version":"1","message":"\r\n    select\r\n        rt1_0.id,\r\n        rt1_0.expiry_date,\r\n        rt1_0.token,\r\n        rt1_0.user_id \r\n    from\r\n        tb_refresh_token rt1_0 \r\n    where\r\n        rt1_0.token=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:29:00.586425-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.config.JacksonConfigTest]: JacksonConfigTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:29:00.5979328-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.config.JacksonConfigTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:29:00.6188195-03:00","@version":"1","message":"Starting JacksonConfigTest using Java 21.0.5 with PID 12592 (started by flavi in C:\\Users\\flavi\\Downloads\\desafio-backend\\desafio-backend)","logger_name":"com.simplesdental.product.config.JacksonConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:29:00.6188195-03:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.simplesdental.product.config.JacksonConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:29:00.7808511-03:00","@version":"1","message":"Started JacksonConfigTest in 0.181 seconds (process running for 7.085)","logger_name":"com.simplesdental.product.config.JacksonConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:29:00.9460123-03:00","@version":"1","message":"Falha de validação: field: must not be null","logger_name":"com.simplesdental.product.Exceptions.GlobalExceptionHandler","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:29:00.9480114-03:00","@version":"1","message":"Erro inesperado: Unexpected error","logger_name":"com.simplesdental.product.Exceptions.GlobalExceptionHandler","thread_name":"main","level":"ERROR","level_value":40000,"stack_trace":"java.lang.Exception: Unexpected error\r\n\tat com.simplesdental.product.Exceptions.GlobalExceptionHandlerTest.testHandleAllExceptions(GlobalExceptionHandlerTest.java:78)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\r\n\tat org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)\r\n\tat org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)\r\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)\r\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)\r\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)\r\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)\r\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)\r\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)\r\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)\r\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)\r\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)\r\n\tat org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)\r\n\tat org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)\r\n\tat com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)\r\n\tat com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)\r\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)\r\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)\r\n"}
{"@timestamp":"2025-09-14T18:29:00.9520141-03:00","@version":"1","message":"Falha de autenticação: Invalid credentials","logger_name":"com.simplesdental.product.Exceptions.GlobalExceptionHandler","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:29:00.9530113-03:00","@version":"1","message":"Requisição não encontrada: Entity not found","logger_name":"com.simplesdental.product.Exceptions.GlobalExceptionHandler","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:29:01.0389977-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:29:01.0389977-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:29:01.0389977-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:29:01.0959288-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:29:01.0959288-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:29:01.0959288-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:29:01.1099748-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:29:01.1099748-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:29:01.1099748-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:29:01.1200649-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:29:01.1200649-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:29:01.1200649-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:29:01.1271172-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:29:01.1271172-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:29:01.1271172-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:29:01.1770398-03:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:29:01.1780403-03:00","@version":"1","message":"\r\n    alter table if exists tb_products \r\n       drop constraint if exists fk_products_category","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:29:01.1800391-03:00","@version":"1","message":"\r\n    alter table if exists tb_products_v2 \r\n       drop constraint if exists fk_products_category_v2","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:29:01.1810401-03:00","@version":"1","message":"\r\n    alter table if exists tb_refresh_token \r\n       drop constraint if exists FKo1qldyy4gbjokinhqdllx5ej9","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:29:01.1810401-03:00","@version":"1","message":"\r\n    drop table if exists categories cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:29:01.1830405-03:00","@version":"1","message":"\r\n    drop table if exists tb_products cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:29:01.1830405-03:00","@version":"1","message":"\r\n    drop table if exists tb_products_v2 cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:29:01.1830405-03:00","@version":"1","message":"\r\n    drop table if exists tb_refresh_token cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:29:01.1840396-03:00","@version":"1","message":"\r\n    drop table if exists tb_users cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:30:52.9442923-03:00","@version":"1","message":"HV000001: Hibernate Validator 8.0.1.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:52.9655197-03:00","@version":"1","message":"Starting SwaggerConfigTest using Java 21.0.5 with PID 23568 (started by flavi in C:\\Users\\flavi\\Downloads\\desafio-backend\\desafio-backend)","logger_name":"com.simplesdental.product.config.SwaggerConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:52.9655197-03:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.simplesdental.product.config.SwaggerConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:53.2059639-03:00","@version":"1","message":"Started SwaggerConfigTest in 0.758 seconds (process running for 2.734)","logger_name":"com.simplesdental.product.config.SwaggerConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:53.4901565-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:53.4911568-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:53.4921562-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:53.6823445-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:53.6823445-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:53.6833444-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:53.6974045-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:53.6974045-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:53.6974045-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:53.710057-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:53.710057-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:53.710057-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:53.724149-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:53.724149-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:53.724149-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:54.1253853-03:00","@version":"1","message":"Tentativa de login para o email: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:54.1325608-03:00","@version":"1","message":"Refresh token criado para o usuário: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:54.1325608-03:00","@version":"1","message":"Login bem-sucedido para o usuário: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:54.1355651-03:00","@version":"1","message":"Tentativa de login para o email: notfound@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:54.1365621-03:00","@version":"1","message":"Usuário não encontrado: notfound@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:30:54.1742102-03:00","@version":"1","message":"Refresh token criado para o usuário: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:54.1777207-03:00","@version":"1","message":"Tentativa de login para o email: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:54.1777207-03:00","@version":"1","message":"Senha incorreta para o usuário: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:30:54.1952875-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.repository.ProductV2RepositoryTest]: ProductV2RepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:54.2602339-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.repository.ProductV2RepositoryTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:54.2964607-03:00","@version":"1","message":"Starting ProductV2RepositoryTest using Java 21.0.5 with PID 23568 (started by flavi in C:\\Users\\flavi\\Downloads\\desafio-backend\\desafio-backend)","logger_name":"com.simplesdental.product.repository.ProductV2RepositoryTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:54.2964607-03:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.simplesdental.product.repository.ProductV2RepositoryTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:54.5651648-03:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:54.6118615-03:00","@version":"1","message":"Finished Spring Data repository scanning in 40 ms. Found 5 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:54.6548647-03:00","@version":"1","message":"Replacing 'dataSource' DataSource bean with embedded version","logger_name":"org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration$EmbeddedDataSourceBeanFactoryPostProcessor","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:54.7390934-03:00","@version":"1","message":"Starting embedded database: url='jdbc:h2:mem:977f55c8-c136-4134-8a8f-26ce21f26c43;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'","logger_name":"org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:55.0314802-03:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:55.0930401-03:00","@version":"1","message":"HHH000412: Hibernate ORM core version 6.4.4.Final","logger_name":"org.hibernate.Version","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:55.1271202-03:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:55.2172873-03:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:55.2544514-03:00","@version":"1","message":"HHH000511: The 2.2.0 version for [org.hibernate.dialect.PostgreSQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 12.0.0. Check the community dialects project for available legacy versions.","logger_name":"org.hibernate.dialect.Dialect","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:30:55.2589521-03:00","@version":"1","message":"HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)","logger_name":"org.hibernate.orm.deprecation","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:30:55.8824511-03:00","@version":"1","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:55.8949597-03:00","@version":"1","message":"\r\n    alter table if exists tb_products \r\n       drop constraint if exists fk_products_category","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:30:55.8979594-03:00","@version":"1","message":"\r\n    alter table if exists tb_products_v2 \r\n       drop constraint if exists fk_products_category_v2","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:30:55.8979594-03:00","@version":"1","message":"\r\n    alter table if exists tb_refresh_token \r\n       drop constraint if exists FKo1qldyy4gbjokinhqdllx5ej9","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:30:55.8979594-03:00","@version":"1","message":"\r\n    drop table if exists categories cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:30:55.8979594-03:00","@version":"1","message":"\r\n    drop table if exists tb_products cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:30:55.8989596-03:00","@version":"1","message":"\r\n    drop table if exists tb_products_v2 cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:30:55.8989596-03:00","@version":"1","message":"\r\n    drop table if exists tb_refresh_token cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:30:55.8989596-03:00","@version":"1","message":"\r\n    drop table if exists tb_users cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:30:55.9023235-03:00","@version":"1","message":"\r\n    create table categories (\r\n        id bigserial not null,\r\n        name varchar(100) not null,\r\n        description varchar(255),\r\n        primary key (id)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:30:55.9138354-03:00","@version":"1","message":"\r\n    create table tb_products (\r\n        price numeric(19,2) not null,\r\n        status boolean not null,\r\n        category_id bigint not null,\r\n        id bigserial not null,\r\n        code varchar(50),\r\n        name varchar(100) not null,\r\n        description varchar(255),\r\n        primary key (id),\r\n        constraint uk_product_code unique (code),\r\n        check (price > 0)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:30:55.923344-03:00","@version":"1","message":"\r\n    create table tb_products_v2 (\r\n        code integer,\r\n        price numeric(19,2) not null,\r\n        status boolean not null,\r\n        category_id bigint not null,\r\n        id bigserial not null,\r\n        name varchar(100) not null,\r\n        description varchar(255),\r\n        primary key (id),\r\n        constraint uk_product_v2_code unique (code),\r\n        check (price > 0)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:30:55.9253427-03:00","@version":"1","message":"\r\n    create table tb_refresh_token (\r\n        expiry_date timestamp(6) not null,\r\n        id bigserial not null,\r\n        user_id bigint not null,\r\n        token varchar(255) not null unique,\r\n        primary key (id)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:30:55.9263438-03:00","@version":"1","message":"\r\n    create table tb_users (\r\n        id bigserial not null,\r\n        email varchar(255) not null,\r\n        name varchar(255) not null,\r\n        password varchar(255) not null,\r\n        role varchar(255) not null check (role in ('ADMIN','USER')),\r\n        primary key (id),\r\n        constraint uk_user_email unique (email)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:30:55.9273432-03:00","@version":"1","message":"\r\n    create index idx_product_code \r\n       on tb_products (code)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:30:55.9288471-03:00","@version":"1","message":"\r\n    create index idx_product_v2_code \r\n       on tb_products_v2 (code)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:30:55.9288471-03:00","@version":"1","message":"\r\n    create index idx_refresh_token_token_value \r\n       on tb_refresh_token (token)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:30:55.9288471-03:00","@version":"1","message":"\r\n    create index idx_user_email \r\n       on tb_users (email)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:30:55.9298534-03:00","@version":"1","message":"\r\n    alter table if exists tb_products \r\n       add constraint fk_products_category \r\n       foreign key (category_id) \r\n       references categories","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:30:55.9328518-03:00","@version":"1","message":"\r\n    alter table if exists tb_products_v2 \r\n       add constraint fk_products_category_v2 \r\n       foreign key (category_id) \r\n       references categories","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:30:55.9328518-03:00","@version":"1","message":"\r\n    alter table if exists tb_refresh_token \r\n       add constraint FKo1qldyy4gbjokinhqdllx5ej9 \r\n       foreign key (user_id) \r\n       references tb_users","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:30:55.9378513-03:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:56.2877609-03:00","@version":"1","message":"Started ProductV2RepositoryTest in 2.024 seconds (process running for 5.816)","logger_name":"com.simplesdental.product.repository.ProductV2RepositoryTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:56.3397027-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:30:56.3699675-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products_v2\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:30:56.3805234-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:30:56.3825223-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products_v2\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:30:56.4040978-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:30:56.4051001-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products_v2\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:30:56.4502622-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:56.4502622-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:56.4502622-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:56.4930725-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:56.4930725-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:56.4930725-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:56.5119299-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:56.5129302-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:56.5129302-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:56.5240453-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:56.5240453-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:56.5240453-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:56.5330848-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:56.5330848-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:56.5330848-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:56.5496337-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.repository.ProductRepositoryTest]: ProductRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:56.5566337-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.repository.ProductRepositoryTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:56.5616585-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:30:56.5636571-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:30:56.5686582-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:30:56.5696913-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:30:56.5778519-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:30:56.5799252-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:30:56.6299997-03:00","@version":"1","message":"Buscando produtos - página: 0, tamanho: 10","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:56.6299997-03:00","@version":"1","message":"Foram encontrados 1 produtos","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:56.6320052-03:00","@version":"1","message":"Salvando novo produto: Escova de Dentes","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:56.6320052-03:00","@version":"1","message":"Produto salvo com sucesso com id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:56.6340056-03:00","@version":"1","message":"Buscando produto pelo id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:56.6360052-03:00","@version":"1","message":"Buscando produto pelo id: 2","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:56.6360052-03:00","@version":"1","message":"Produto não encontrado com id: 2","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"ERROR","level_value":40000}
{"@timestamp":"2025-09-14T18:30:56.6370048-03:00","@version":"1","message":"Atualizando produto id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:56.6370048-03:00","@version":"1","message":"Buscando produto pelo id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:56.6370048-03:00","@version":"1","message":"Produto atualizado com sucesso id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:56.638005-03:00","@version":"1","message":"Deletando produto id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:56.638005-03:00","@version":"1","message":"Buscando produto pelo id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:56.6390056-03:00","@version":"1","message":"Produto deletado com sucesso id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:57.1016337-03:00","@version":"1","message":"Buscando categorias - página: 0, tamanho: 10","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:57.1016337-03:00","@version":"1","message":"Foram encontradas 1 categorias","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:57.1036332-03:00","@version":"1","message":"Salvando nova categoria: Higiene Bucal","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:57.1036332-03:00","@version":"1","message":"Categoria salva com sucesso com id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:57.104633-03:00","@version":"1","message":"Buscando categoria pelo id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:57.1076329-03:00","@version":"1","message":"Atualizando categoria id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:57.1086344-03:00","@version":"1","message":"Categoria atualizada com sucesso: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:57.1107491-03:00","@version":"1","message":"Atualizando categoria id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:57.1117497-03:00","@version":"1","message":"Falha ao atualizar. Categoria não encontrada com id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"ERROR","level_value":40000}
{"@timestamp":"2025-09-14T18:30:57.1157505-03:00","@version":"1","message":"Deletando categoria id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:57.1157505-03:00","@version":"1","message":"Buscando categoria pelo id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:57.1157505-03:00","@version":"1","message":"Categoria deletada com sucesso id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:57.1177526-03:00","@version":"1","message":"Buscando categoria pelo id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:57.1177526-03:00","@version":"1","message":"Categoria não encontrada com id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"ERROR","level_value":40000}
{"@timestamp":"2025-09-14T18:30:57.1506278-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:57.1506278-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:57.1506278-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:57.1626553-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:57.1626553-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:57.1626553-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:57.1779423-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:57.1779423-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:57.1779423-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:57.1905191-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:57.1905191-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:57.1905191-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:57.1975197-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:57.1975197-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:57.1975197-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:57.203596-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.repository.UserRepositoryTest]: UserRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:57.2116271-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.repository.UserRepositoryTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:57.3127552-03:00","@version":"1","message":"\r\n    select\r\n        u1_0.id,\r\n        u1_0.email,\r\n        u1_0.name,\r\n        u1_0.password,\r\n        u1_0.role \r\n    from\r\n        tb_users u1_0 \r\n    where\r\n        u1_0.email=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:30:57.3197923-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_users\r\n        (email, name, password, role) \r\n    values\r\n        (?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:30:57.3257921-03:00","@version":"1","message":"\r\n    select\r\n        u1_0.id,\r\n        u1_0.email,\r\n        u1_0.name,\r\n        u1_0.password,\r\n        u1_0.role \r\n    from\r\n        tb_users u1_0 \r\n    where\r\n        u1_0.email=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:30:57.3311563-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.repository.CategoryRepositoryTest]: CategoryRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:57.3371585-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.repository.CategoryRepositoryTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:57.3406683-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:30:57.3497176-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:30:57.353718-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:30:57.3547188-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:30:57.3618717-03:00","@version":"1","message":"\r\n    select\r\n        c1_0.id,\r\n        c1_0.description,\r\n        c1_0.name \r\n    from\r\n        categories c1_0","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:30:57.3774011-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.repository.RefreshTokenRepositoryTest]: RefreshTokenRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:57.3839308-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.repository.RefreshTokenRepositoryTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:57.3869308-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_users\r\n        (email, name, password, role) \r\n    values\r\n        (?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:30:57.3889311-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_refresh_token\r\n        (expiry_date, token, user_id) \r\n    values\r\n        (?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:30:57.3985227-03:00","@version":"1","message":"\r\n    select\r\n        rt1_0.id,\r\n        rt1_0.expiry_date,\r\n        rt1_0.token,\r\n        rt1_0.user_id \r\n    from\r\n        tb_refresh_token rt1_0 \r\n    where\r\n        rt1_0.token=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:30:57.4035339-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_users\r\n        (email, name, password, role) \r\n    values\r\n        (?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:30:57.4055347-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_refresh_token\r\n        (expiry_date, token, user_id) \r\n    values\r\n        (?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:30:57.407535-03:00","@version":"1","message":"\r\n    select\r\n        rt1_0.id,\r\n        rt1_0.expiry_date,\r\n        rt1_0.token,\r\n        rt1_0.user_id \r\n    from\r\n        tb_refresh_token rt1_0 \r\n    where\r\n        rt1_0.token=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:30:57.4212607-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.config.JacksonConfigTest]: JacksonConfigTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:57.4327778-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.config.JacksonConfigTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:57.453859-03:00","@version":"1","message":"Starting JacksonConfigTest using Java 21.0.5 with PID 23568 (started by flavi in C:\\Users\\flavi\\Downloads\\desafio-backend\\desafio-backend)","logger_name":"com.simplesdental.product.config.JacksonConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:57.453859-03:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.simplesdental.product.config.JacksonConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:57.6268141-03:00","@version":"1","message":"Started JacksonConfigTest in 0.191 seconds (process running for 7.154)","logger_name":"com.simplesdental.product.config.JacksonConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:57.8045707-03:00","@version":"1","message":"Falha de validação: field: must not be null","logger_name":"com.simplesdental.product.Exceptions.GlobalExceptionHandler","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:30:57.8055732-03:00","@version":"1","message":"Erro inesperado: Unexpected error","logger_name":"com.simplesdental.product.Exceptions.GlobalExceptionHandler","thread_name":"main","level":"ERROR","level_value":40000,"stack_trace":"java.lang.Exception: Unexpected error\r\n\tat com.simplesdental.product.Exceptions.GlobalExceptionHandlerTest.testHandleAllExceptions(GlobalExceptionHandlerTest.java:78)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\r\n\tat org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)\r\n\tat org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)\r\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)\r\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)\r\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)\r\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)\r\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)\r\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)\r\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)\r\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)\r\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)\r\n\tat org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)\r\n\tat org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)\r\n\tat com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)\r\n\tat com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)\r\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)\r\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)\r\n"}
{"@timestamp":"2025-09-14T18:30:57.8105868-03:00","@version":"1","message":"Falha de autenticação: Invalid credentials","logger_name":"com.simplesdental.product.Exceptions.GlobalExceptionHandler","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:30:57.8115906-03:00","@version":"1","message":"Requisição não encontrada: Entity not found","logger_name":"com.simplesdental.product.Exceptions.GlobalExceptionHandler","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:30:57.8954216-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:57.8954216-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:57.8964207-03:00","@version":"1","message":"Completed initialization in 1 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:57.9489017-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:57.9489017-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:57.9489017-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:57.9627005-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:57.9627005-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:57.9627005-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:57.9712034-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:57.9722026-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:57.9722026-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:57.9797652-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:57.9797652-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:57.9797652-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:58.0337239-03:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:30:58.0347237-03:00","@version":"1","message":"\r\n    alter table if exists tb_products \r\n       drop constraint if exists fk_products_category","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:30:58.0367234-03:00","@version":"1","message":"\r\n    alter table if exists tb_products_v2 \r\n       drop constraint if exists fk_products_category_v2","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:30:58.0367234-03:00","@version":"1","message":"\r\n    alter table if exists tb_refresh_token \r\n       drop constraint if exists FKo1qldyy4gbjokinhqdllx5ej9","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:30:58.0377235-03:00","@version":"1","message":"\r\n    drop table if exists categories cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:30:58.0387243-03:00","@version":"1","message":"\r\n    drop table if exists tb_products cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:30:58.0397782-03:00","@version":"1","message":"\r\n    drop table if exists tb_products_v2 cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:30:58.0407829-03:00","@version":"1","message":"\r\n    drop table if exists tb_refresh_token cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:30:58.0407829-03:00","@version":"1","message":"\r\n    drop table if exists tb_users cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:31:17.0505304-03:00","@version":"1","message":"HV000001: Hibernate Validator 8.0.1.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:17.0720555-03:00","@version":"1","message":"Starting SwaggerConfigTest using Java 21.0.5 with PID 33148 (started by flavi in C:\\Users\\flavi\\Downloads\\desafio-backend\\desafio-backend)","logger_name":"com.simplesdental.product.config.SwaggerConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:17.0720555-03:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.simplesdental.product.config.SwaggerConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:17.315073-03:00","@version":"1","message":"Started SwaggerConfigTest in 0.751 seconds (process running for 2.713)","logger_name":"com.simplesdental.product.config.SwaggerConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:17.6012353-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:17.6022359-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:17.6032362-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:17.7900431-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:17.7900431-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:17.7900431-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:17.8030662-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:17.8040658-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:17.8040658-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:17.8170888-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:17.8170888-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:17.8170888-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:17.8302812-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:17.8302812-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:17.8302812-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:18.2172416-03:00","@version":"1","message":"Tentativa de login para o email: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:18.2232415-03:00","@version":"1","message":"Refresh token criado para o usuário: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:18.2232415-03:00","@version":"1","message":"Login bem-sucedido para o usuário: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:18.2262417-03:00","@version":"1","message":"Tentativa de login para o email: notfound@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:18.2262417-03:00","@version":"1","message":"Usuário não encontrado: notfound@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:31:18.2619167-03:00","@version":"1","message":"Refresh token criado para o usuário: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:18.2649157-03:00","@version":"1","message":"Tentativa de login para o email: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:18.2649157-03:00","@version":"1","message":"Senha incorreta para o usuário: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:31:18.2792243-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.repository.ProductV2RepositoryTest]: ProductV2RepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:18.3361205-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.repository.ProductV2RepositoryTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:18.3674978-03:00","@version":"1","message":"Starting ProductV2RepositoryTest using Java 21.0.5 with PID 33148 (started by flavi in C:\\Users\\flavi\\Downloads\\desafio-backend\\desafio-backend)","logger_name":"com.simplesdental.product.repository.ProductV2RepositoryTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:18.3674978-03:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.simplesdental.product.repository.ProductV2RepositoryTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:18.602357-03:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:18.6489031-03:00","@version":"1","message":"Finished Spring Data repository scanning in 40 ms. Found 5 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:18.6895806-03:00","@version":"1","message":"Replacing 'dataSource' DataSource bean with embedded version","logger_name":"org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration$EmbeddedDataSourceBeanFactoryPostProcessor","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:18.7581675-03:00","@version":"1","message":"Starting embedded database: url='jdbc:h2:mem:d24a9378-8c4d-46e2-994a-e2444edf9054;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'","logger_name":"org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:18.9725425-03:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:19.0278188-03:00","@version":"1","message":"HHH000412: Hibernate ORM core version 6.4.4.Final","logger_name":"org.hibernate.Version","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:19.0589574-03:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:19.1490672-03:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:19.1845883-03:00","@version":"1","message":"HHH000511: The 2.2.0 version for [org.hibernate.dialect.PostgreSQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 12.0.0. Check the community dialects project for available legacy versions.","logger_name":"org.hibernate.dialect.Dialect","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:31:19.189098-03:00","@version":"1","message":"HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)","logger_name":"org.hibernate.orm.deprecation","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:31:19.8213402-03:00","@version":"1","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:19.8338482-03:00","@version":"1","message":"\r\n    alter table if exists tb_products \r\n       drop constraint if exists fk_products_category","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:31:19.836354-03:00","@version":"1","message":"\r\n    alter table if exists tb_products_v2 \r\n       drop constraint if exists fk_products_category_v2","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:31:19.836354-03:00","@version":"1","message":"\r\n    alter table if exists tb_refresh_token \r\n       drop constraint if exists FKo1qldyy4gbjokinhqdllx5ej9","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:31:19.836354-03:00","@version":"1","message":"\r\n    drop table if exists categories cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:31:19.837358-03:00","@version":"1","message":"\r\n    drop table if exists tb_products cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:31:19.837358-03:00","@version":"1","message":"\r\n    drop table if exists tb_products_v2 cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:31:19.837358-03:00","@version":"1","message":"\r\n    drop table if exists tb_refresh_token cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:31:19.837358-03:00","@version":"1","message":"\r\n    drop table if exists tb_users cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:31:19.8403554-03:00","@version":"1","message":"\r\n    create table categories (\r\n        id bigserial not null,\r\n        name varchar(100) not null,\r\n        description varchar(255),\r\n        primary key (id)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:31:19.8478644-03:00","@version":"1","message":"\r\n    create table tb_products (\r\n        price numeric(19,2) not null,\r\n        status boolean not null,\r\n        category_id bigint not null,\r\n        id bigserial not null,\r\n        code varchar(50),\r\n        name varchar(100) not null,\r\n        description varchar(255),\r\n        primary key (id),\r\n        constraint uk_product_code unique (code),\r\n        check (price > 0)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:31:19.8558639-03:00","@version":"1","message":"\r\n    create table tb_products_v2 (\r\n        code integer,\r\n        price numeric(19,2) not null,\r\n        status boolean not null,\r\n        category_id bigint not null,\r\n        id bigserial not null,\r\n        name varchar(100) not null,\r\n        description varchar(255),\r\n        primary key (id),\r\n        constraint uk_product_v2_code unique (code),\r\n        check (price > 0)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:31:19.8583726-03:00","@version":"1","message":"\r\n    create table tb_refresh_token (\r\n        expiry_date timestamp(6) not null,\r\n        id bigserial not null,\r\n        user_id bigint not null,\r\n        token varchar(255) not null unique,\r\n        primary key (id)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:31:19.8593724-03:00","@version":"1","message":"\r\n    create table tb_users (\r\n        id bigserial not null,\r\n        email varchar(255) not null,\r\n        name varchar(255) not null,\r\n        password varchar(255) not null,\r\n        role varchar(255) not null check (role in ('ADMIN','USER')),\r\n        primary key (id),\r\n        constraint uk_user_email unique (email)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:31:19.8603723-03:00","@version":"1","message":"\r\n    create index idx_product_code \r\n       on tb_products (code)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:31:19.8613736-03:00","@version":"1","message":"\r\n    create index idx_product_v2_code \r\n       on tb_products_v2 (code)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:31:19.8613736-03:00","@version":"1","message":"\r\n    create index idx_refresh_token_token_value \r\n       on tb_refresh_token (token)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:31:19.8623746-03:00","@version":"1","message":"\r\n    create index idx_user_email \r\n       on tb_users (email)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:31:19.8623746-03:00","@version":"1","message":"\r\n    alter table if exists tb_products \r\n       add constraint fk_products_category \r\n       foreign key (category_id) \r\n       references categories","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:31:19.8658758-03:00","@version":"1","message":"\r\n    alter table if exists tb_products_v2 \r\n       add constraint fk_products_category_v2 \r\n       foreign key (category_id) \r\n       references categories","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:31:19.8658758-03:00","@version":"1","message":"\r\n    alter table if exists tb_refresh_token \r\n       add constraint FKo1qldyy4gbjokinhqdllx5ej9 \r\n       foreign key (user_id) \r\n       references tb_users","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:31:19.8708801-03:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:20.2499372-03:00","@version":"1","message":"Started ProductV2RepositoryTest in 1.911 seconds (process running for 5.648)","logger_name":"com.simplesdental.product.repository.ProductV2RepositoryTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:20.2979648-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:31:20.3207939-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products_v2\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:31:20.330287-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:31:20.3312849-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products_v2\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:31:20.3503063-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:31:20.3523079-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products_v2\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:31:20.3923427-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:20.3923427-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:20.3923427-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:20.433667-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:20.433667-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:20.433667-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:20.4529668-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:20.4529668-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:20.4539674-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:20.4654774-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:20.4654774-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:20.4654774-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:20.4729873-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:20.4729873-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:20.4729873-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:20.4865718-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.repository.ProductRepositoryTest]: ProductRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:20.4925717-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.repository.ProductRepositoryTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:20.4976111-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:31:20.499611-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:31:20.5046114-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:31:20.5066999-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:31:20.5117054-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:31:20.5127055-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:31:20.5636422-03:00","@version":"1","message":"Buscando produtos - página: 0, tamanho: 10","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:20.5636422-03:00","@version":"1","message":"Foram encontrados 1 produtos","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:20.5656423-03:00","@version":"1","message":"Salvando novo produto: Escova de Dentes","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:20.5656423-03:00","@version":"1","message":"Produto salvo com sucesso com id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:20.5670586-03:00","@version":"1","message":"Buscando produto pelo id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:20.5680606-03:00","@version":"1","message":"Buscando produto pelo id: 2","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:20.5690589-03:00","@version":"1","message":"Produto não encontrado com id: 2","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"ERROR","level_value":40000}
{"@timestamp":"2025-09-14T18:31:20.5700602-03:00","@version":"1","message":"Atualizando produto id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:20.5700602-03:00","@version":"1","message":"Buscando produto pelo id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:20.5700602-03:00","@version":"1","message":"Produto atualizado com sucesso id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:20.5710606-03:00","@version":"1","message":"Deletando produto id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:20.5710606-03:00","@version":"1","message":"Buscando produto pelo id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:20.5710606-03:00","@version":"1","message":"Produto deletado com sucesso id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:21.011578-03:00","@version":"1","message":"Buscando categorias - página: 0, tamanho: 10","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:21.011578-03:00","@version":"1","message":"Foram encontradas 1 categorias","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:21.0135799-03:00","@version":"1","message":"Salvando nova categoria: Higiene Bucal","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:21.0135799-03:00","@version":"1","message":"Categoria salva com sucesso com id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:21.0145786-03:00","@version":"1","message":"Buscando categoria pelo id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:21.0155775-03:00","@version":"1","message":"Atualizando categoria id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:21.0176039-03:00","@version":"1","message":"Categoria atualizada com sucesso: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:21.0186054-03:00","@version":"1","message":"Atualizando categoria id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:21.0186054-03:00","@version":"1","message":"Falha ao atualizar. Categoria não encontrada com id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"ERROR","level_value":40000}
{"@timestamp":"2025-09-14T18:31:21.0226031-03:00","@version":"1","message":"Deletando categoria id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:21.0226031-03:00","@version":"1","message":"Buscando categoria pelo id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:21.0226031-03:00","@version":"1","message":"Categoria deletada com sucesso id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:21.0246064-03:00","@version":"1","message":"Buscando categoria pelo id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:21.0246064-03:00","@version":"1","message":"Categoria não encontrada com id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"ERROR","level_value":40000}
{"@timestamp":"2025-09-14T18:31:21.0527728-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:21.0527728-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:21.0527728-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:21.0630854-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:21.0630854-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:21.0630854-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:21.0755971-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:21.0755971-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:21.0755971-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:21.0856171-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:21.0866238-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:21.0866238-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:21.0926221-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:21.0926221-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:21.0926221-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:21.0989303-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.repository.UserRepositoryTest]: UserRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:21.1039269-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.repository.UserRepositoryTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:21.1994086-03:00","@version":"1","message":"\r\n    select\r\n        u1_0.id,\r\n        u1_0.email,\r\n        u1_0.name,\r\n        u1_0.password,\r\n        u1_0.role \r\n    from\r\n        tb_users u1_0 \r\n    where\r\n        u1_0.email=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:31:21.2064761-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_users\r\n        (email, name, password, role) \r\n    values\r\n        (?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:31:21.2124747-03:00","@version":"1","message":"\r\n    select\r\n        u1_0.id,\r\n        u1_0.email,\r\n        u1_0.name,\r\n        u1_0.password,\r\n        u1_0.role \r\n    from\r\n        tb_users u1_0 \r\n    where\r\n        u1_0.email=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:31:21.2185151-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.repository.CategoryRepositoryTest]: CategoryRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:21.2235145-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.repository.CategoryRepositoryTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:21.2265951-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:31:21.2360997-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:31:21.2401114-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:31:21.2411118-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:31:21.2466207-03:00","@version":"1","message":"\r\n    select\r\n        c1_0.id,\r\n        c1_0.description,\r\n        c1_0.name \r\n    from\r\n        categories c1_0","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:31:21.2606595-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.repository.RefreshTokenRepositoryTest]: RefreshTokenRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:21.2666782-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.repository.RefreshTokenRepositoryTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:21.2696787-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_users\r\n        (email, name, password, role) \r\n    values\r\n        (?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:31:21.2716786-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_refresh_token\r\n        (expiry_date, token, user_id) \r\n    values\r\n        (?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:31:21.2798196-03:00","@version":"1","message":"\r\n    select\r\n        rt1_0.id,\r\n        rt1_0.expiry_date,\r\n        rt1_0.token,\r\n        rt1_0.user_id \r\n    from\r\n        tb_refresh_token rt1_0 \r\n    where\r\n        rt1_0.token=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:31:21.2848179-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_users\r\n        (email, name, password, role) \r\n    values\r\n        (?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:31:21.2858183-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_refresh_token\r\n        (expiry_date, token, user_id) \r\n    values\r\n        (?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:31:21.2882014-03:00","@version":"1","message":"\r\n    select\r\n        rt1_0.id,\r\n        rt1_0.expiry_date,\r\n        rt1_0.token,\r\n        rt1_0.user_id \r\n    from\r\n        tb_refresh_token rt1_0 \r\n    where\r\n        rt1_0.token=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:31:21.2932012-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.config.JacksonConfigTest]: JacksonConfigTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:21.3037878-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.config.JacksonConfigTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:21.3257746-03:00","@version":"1","message":"Starting JacksonConfigTest using Java 21.0.5 with PID 33148 (started by flavi in C:\\Users\\flavi\\Downloads\\desafio-backend\\desafio-backend)","logger_name":"com.simplesdental.product.config.JacksonConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:21.3257746-03:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.simplesdental.product.config.JacksonConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:21.5024387-03:00","@version":"1","message":"Started JacksonConfigTest in 0.197 seconds (process running for 6.9)","logger_name":"com.simplesdental.product.config.JacksonConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:21.6797261-03:00","@version":"1","message":"Falha de validação: field: must not be null","logger_name":"com.simplesdental.product.Exceptions.GlobalExceptionHandler","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:31:21.6817259-03:00","@version":"1","message":"Erro inesperado: Unexpected error","logger_name":"com.simplesdental.product.Exceptions.GlobalExceptionHandler","thread_name":"main","level":"ERROR","level_value":40000,"stack_trace":"java.lang.Exception: Unexpected error\r\n\tat com.simplesdental.product.Exceptions.GlobalExceptionHandlerTest.testHandleAllExceptions(GlobalExceptionHandlerTest.java:78)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\r\n\tat org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)\r\n\tat org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)\r\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)\r\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)\r\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)\r\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)\r\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)\r\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)\r\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)\r\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)\r\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)\r\n\tat org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)\r\n\tat org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)\r\n\tat com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)\r\n\tat com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)\r\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)\r\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)\r\n"}
{"@timestamp":"2025-09-14T18:31:21.6868101-03:00","@version":"1","message":"Falha de autenticação: Invalid credentials","logger_name":"com.simplesdental.product.Exceptions.GlobalExceptionHandler","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:31:21.6878089-03:00","@version":"1","message":"Requisição não encontrada: Entity not found","logger_name":"com.simplesdental.product.Exceptions.GlobalExceptionHandler","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:31:21.7696701-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:21.7696701-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:21.7696701-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:21.8244129-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:21.8244129-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:21.8244129-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:21.8366289-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:21.8366289-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:21.8366289-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:21.8446286-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:21.8446286-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:21.8446286-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:21.8508647-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:21.8508647-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:21.8508647-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:21.8819043-03:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:31:21.8829038-03:00","@version":"1","message":"\r\n    alter table if exists tb_products \r\n       drop constraint if exists fk_products_category","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:31:21.8839047-03:00","@version":"1","message":"\r\n    alter table if exists tb_products_v2 \r\n       drop constraint if exists fk_products_category_v2","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:31:21.8839047-03:00","@version":"1","message":"\r\n    alter table if exists tb_refresh_token \r\n       drop constraint if exists FKo1qldyy4gbjokinhqdllx5ej9","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:31:21.8854089-03:00","@version":"1","message":"\r\n    drop table if exists categories cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:31:21.8864136-03:00","@version":"1","message":"\r\n    drop table if exists tb_products cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:31:21.8874144-03:00","@version":"1","message":"\r\n    drop table if exists tb_products_v2 cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:31:21.8874144-03:00","@version":"1","message":"\r\n    drop table if exists tb_refresh_token cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:31:21.8874144-03:00","@version":"1","message":"\r\n    drop table if exists tb_users cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:37:55.5024093-03:00","@version":"1","message":"HV000001: Hibernate Validator 8.0.1.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:55.5229507-03:00","@version":"1","message":"Starting SwaggerConfigTest using Java 21.0.5 with PID 20584 (started by flavi in C:\\Users\\flavi\\Downloads\\desafio-backend\\desafio-backend)","logger_name":"com.simplesdental.product.config.SwaggerConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:55.523951-03:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.simplesdental.product.config.SwaggerConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:55.7360026-03:00","@version":"1","message":"Started SwaggerConfigTest in 0.734 seconds (process running for 2.679)","logger_name":"com.simplesdental.product.config.SwaggerConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:56.0201494-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:56.0201494-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:56.0221474-03:00","@version":"1","message":"Completed initialization in 1 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:56.228075-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:56.228075-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:56.228075-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:56.2410907-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:56.2410907-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:56.2410907-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:56.2521353-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:56.2521353-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:56.2531384-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:56.2667966-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:56.2667966-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:56.2677955-03:00","@version":"1","message":"Completed initialization in 1 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:56.6868788-03:00","@version":"1","message":"Tentativa de login para o email: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:56.6938783-03:00","@version":"1","message":"Refresh token criado para o usuário: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:56.6938783-03:00","@version":"1","message":"Login bem-sucedido para o usuário: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:56.6982737-03:00","@version":"1","message":"Tentativa de login para o email: notfound@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:56.6982737-03:00","@version":"1","message":"Usuário não encontrado: notfound@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:37:56.7348618-03:00","@version":"1","message":"Refresh token criado para o usuário: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:56.7378645-03:00","@version":"1","message":"Tentativa de login para o email: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:56.7740885-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.repository.ProductV2RepositoryTest]: ProductV2RepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:56.8301689-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.repository.ProductV2RepositoryTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:56.8649491-03:00","@version":"1","message":"Starting ProductV2RepositoryTest using Java 21.0.5 with PID 20584 (started by flavi in C:\\Users\\flavi\\Downloads\\desafio-backend\\desafio-backend)","logger_name":"com.simplesdental.product.repository.ProductV2RepositoryTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:56.8649491-03:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.simplesdental.product.repository.ProductV2RepositoryTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:57.123975-03:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:57.1647136-03:00","@version":"1","message":"Finished Spring Data repository scanning in 35 ms. Found 5 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:57.2050188-03:00","@version":"1","message":"Replacing 'dataSource' DataSource bean with embedded version","logger_name":"org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration$EmbeddedDataSourceBeanFactoryPostProcessor","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:57.2763897-03:00","@version":"1","message":"Starting embedded database: url='jdbc:h2:mem:7735e919-d2fd-46ea-9238-85b941215371;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'","logger_name":"org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:57.5278114-03:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:57.5846262-03:00","@version":"1","message":"HHH000412: Hibernate ORM core version 6.4.4.Final","logger_name":"org.hibernate.Version","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:57.6191685-03:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:57.7103647-03:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:57.7483252-03:00","@version":"1","message":"HHH000511: The 2.2.0 version for [org.hibernate.dialect.PostgreSQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 12.0.0. Check the community dialects project for available legacy versions.","logger_name":"org.hibernate.dialect.Dialect","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:37:57.7523254-03:00","@version":"1","message":"HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)","logger_name":"org.hibernate.orm.deprecation","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:37:58.3859934-03:00","@version":"1","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:58.3975105-03:00","@version":"1","message":"\r\n    alter table if exists tb_products \r\n       drop constraint if exists fk_products_category","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:37:58.3995108-03:00","@version":"1","message":"\r\n    alter table if exists tb_products_v2 \r\n       drop constraint if exists fk_products_category_v2","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:37:58.3995108-03:00","@version":"1","message":"\r\n    alter table if exists tb_refresh_token \r\n       drop constraint if exists FKo1qldyy4gbjokinhqdllx5ej9","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:37:58.4005098-03:00","@version":"1","message":"\r\n    drop table if exists categories cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:37:58.4005098-03:00","@version":"1","message":"\r\n    drop table if exists tb_products cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:37:58.4005098-03:00","@version":"1","message":"\r\n    drop table if exists tb_products_v2 cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:37:58.4005098-03:00","@version":"1","message":"\r\n    drop table if exists tb_refresh_token cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:37:58.4005098-03:00","@version":"1","message":"\r\n    drop table if exists tb_users cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:37:58.4037628-03:00","@version":"1","message":"\r\n    create table categories (\r\n        id bigserial not null,\r\n        name varchar(100) not null,\r\n        description varchar(255),\r\n        primary key (id)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:37:58.4108196-03:00","@version":"1","message":"\r\n    create table tb_products (\r\n        price numeric(19,2) not null,\r\n        status boolean not null,\r\n        category_id bigint not null,\r\n        id bigserial not null,\r\n        code varchar(50),\r\n        name varchar(100) not null,\r\n        description varchar(255),\r\n        primary key (id),\r\n        constraint uk_product_code unique (code),\r\n        check (price > 0)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:37:58.4193257-03:00","@version":"1","message":"\r\n    create table tb_products_v2 (\r\n        code integer,\r\n        price numeric(19,2) not null,\r\n        status boolean not null,\r\n        category_id bigint not null,\r\n        id bigserial not null,\r\n        name varchar(100) not null,\r\n        description varchar(255),\r\n        primary key (id),\r\n        constraint uk_product_v2_code unique (code),\r\n        check (price > 0)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:37:58.4203263-03:00","@version":"1","message":"\r\n    create table tb_refresh_token (\r\n        expiry_date timestamp(6) not null,\r\n        id bigserial not null,\r\n        user_id bigint not null,\r\n        token varchar(255) not null unique,\r\n        primary key (id)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:37:58.421326-03:00","@version":"1","message":"\r\n    create table tb_users (\r\n        id bigserial not null,\r\n        email varchar(255) not null,\r\n        name varchar(255) not null,\r\n        password varchar(255) not null,\r\n        role varchar(255) not null check (role in ('ADMIN','USER')),\r\n        primary key (id),\r\n        constraint uk_user_email unique (email)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:37:58.4235267-03:00","@version":"1","message":"\r\n    create index idx_product_code \r\n       on tb_products (code)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:37:58.4235267-03:00","@version":"1","message":"\r\n    create index idx_product_v2_code \r\n       on tb_products_v2 (code)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:37:58.424531-03:00","@version":"1","message":"\r\n    create index idx_refresh_token_token_value \r\n       on tb_refresh_token (token)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:37:58.424531-03:00","@version":"1","message":"\r\n    create index idx_user_email \r\n       on tb_users (email)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:37:58.424531-03:00","@version":"1","message":"\r\n    alter table if exists tb_products \r\n       add constraint fk_products_category \r\n       foreign key (category_id) \r\n       references categories","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:37:58.4275311-03:00","@version":"1","message":"\r\n    alter table if exists tb_products_v2 \r\n       add constraint fk_products_category_v2 \r\n       foreign key (category_id) \r\n       references categories","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:37:58.4275311-03:00","@version":"1","message":"\r\n    alter table if exists tb_refresh_token \r\n       add constraint FKo1qldyy4gbjokinhqdllx5ej9 \r\n       foreign key (user_id) \r\n       references tb_users","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:37:58.432533-03:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:58.8249415-03:00","@version":"1","message":"Started ProductV2RepositoryTest in 1.992 seconds (process running for 5.767)","logger_name":"com.simplesdental.product.repository.ProductV2RepositoryTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:58.8707864-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:37:58.8936556-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products_v2\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:37:58.9043847-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:37:58.9063843-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products_v2\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:37:58.9287468-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:37:58.9297475-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products_v2\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:37:58.9754375-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:58.9764408-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:58.9764408-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:59.0210231-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:59.0210231-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:59.0220236-03:00","@version":"1","message":"Completed initialization in 1 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:59.0457496-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:59.0467492-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:59.0467492-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:59.0595984-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:59.0595984-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:59.0595984-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:59.0697563-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:59.0697563-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:59.0707571-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:59.0843581-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.repository.ProductRepositoryTest]: ProductRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:59.0923584-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.repository.ProductRepositoryTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:59.0965585-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:37:59.0995585-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:37:59.1035573-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:37:59.1047103-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:37:59.1097136-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:37:59.1107129-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:37:59.1628256-03:00","@version":"1","message":"Buscando produtos - página: 0, tamanho: 10","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:59.1628256-03:00","@version":"1","message":"Foram encontrados 1 produtos","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:59.165883-03:00","@version":"1","message":"Salvando novo produto: Escova de Dentes","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:59.165883-03:00","@version":"1","message":"Produto salvo com sucesso com id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:59.1668826-03:00","@version":"1","message":"Buscando produto pelo id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:59.1698833-03:00","@version":"1","message":"Buscando produto pelo id: 2","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:59.1698833-03:00","@version":"1","message":"Produto não encontrado com id: 2","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"ERROR","level_value":40000}
{"@timestamp":"2025-09-14T18:37:59.1708832-03:00","@version":"1","message":"Atualizando produto id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:59.1708832-03:00","@version":"1","message":"Buscando produto pelo id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:59.1708832-03:00","@version":"1","message":"Produto atualizado com sucesso id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:59.1718822-03:00","@version":"1","message":"Deletando produto id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:59.1718822-03:00","@version":"1","message":"Buscando produto pelo id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:59.1718822-03:00","@version":"1","message":"Produto deletado com sucesso id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:59.5495811-03:00","@version":"1","message":"Buscando categorias - página: 0, tamanho: 10","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:59.5495811-03:00","@version":"1","message":"Foram encontradas 1 categorias","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:59.5515811-03:00","@version":"1","message":"Salvando nova categoria: Higiene Bucal","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:59.5515811-03:00","@version":"1","message":"Categoria salva com sucesso com id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:59.5525801-03:00","@version":"1","message":"Buscando categoria pelo id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:59.55358-03:00","@version":"1","message":"Atualizando categoria id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:59.5556597-03:00","@version":"1","message":"Categoria atualizada com sucesso: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:59.5576586-03:00","@version":"1","message":"Atualizando categoria id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:59.5576586-03:00","@version":"1","message":"Falha ao atualizar. Categoria não encontrada com id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"ERROR","level_value":40000}
{"@timestamp":"2025-09-14T18:37:59.561659-03:00","@version":"1","message":"Deletando categoria id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:59.561659-03:00","@version":"1","message":"Buscando categoria pelo id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:59.561659-03:00","@version":"1","message":"Categoria deletada com sucesso id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:59.5636587-03:00","@version":"1","message":"Buscando categoria pelo id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:59.5636587-03:00","@version":"1","message":"Categoria não encontrada com id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"ERROR","level_value":40000}
{"@timestamp":"2025-09-14T18:37:59.591766-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:59.591766-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:59.591766-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:59.6033002-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:59.6033002-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:59.6043049-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:59.6163317-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:59.6163317-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:59.6163317-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:59.6267102-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:59.6277084-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:59.6277084-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:59.6337085-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:59.6337085-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:59.6337085-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:59.6390547-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.repository.UserRepositoryTest]: UserRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:59.6455699-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.repository.UserRepositoryTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:59.746474-03:00","@version":"1","message":"\r\n    select\r\n        u1_0.id,\r\n        u1_0.email,\r\n        u1_0.name,\r\n        u1_0.password,\r\n        u1_0.role \r\n    from\r\n        tb_users u1_0 \r\n    where\r\n        u1_0.email=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:37:59.7546185-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_users\r\n        (email, name, password, role) \r\n    values\r\n        (?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:37:59.7606187-03:00","@version":"1","message":"\r\n    select\r\n        u1_0.id,\r\n        u1_0.email,\r\n        u1_0.name,\r\n        u1_0.password,\r\n        u1_0.role \r\n    from\r\n        tb_users u1_0 \r\n    where\r\n        u1_0.email=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:37:59.765911-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.repository.CategoryRepositoryTest]: CategoryRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:59.7719106-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.repository.CategoryRepositoryTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:59.7754207-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:37:59.7849322-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:37:59.7899375-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:37:59.7909377-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:37:59.7974487-03:00","@version":"1","message":"\r\n    select\r\n        c1_0.id,\r\n        c1_0.description,\r\n        c1_0.name \r\n    from\r\n        categories c1_0","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:37:59.8106323-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.repository.RefreshTokenRepositoryTest]: RefreshTokenRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:59.8167237-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.repository.RefreshTokenRepositoryTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:59.8207198-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_users\r\n        (email, name, password, role) \r\n    values\r\n        (?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:37:59.8217203-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_refresh_token\r\n        (expiry_date, token, user_id) \r\n    values\r\n        (?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:37:59.8290776-03:00","@version":"1","message":"\r\n    select\r\n        rt1_0.id,\r\n        rt1_0.expiry_date,\r\n        rt1_0.token,\r\n        rt1_0.user_id \r\n    from\r\n        tb_refresh_token rt1_0 \r\n    where\r\n        rt1_0.token=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:37:59.8351136-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_users\r\n        (email, name, password, role) \r\n    values\r\n        (?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:37:59.8361209-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_refresh_token\r\n        (expiry_date, token, user_id) \r\n    values\r\n        (?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:37:59.8381183-03:00","@version":"1","message":"\r\n    select\r\n        rt1_0.id,\r\n        rt1_0.expiry_date,\r\n        rt1_0.token,\r\n        rt1_0.user_id \r\n    from\r\n        tb_refresh_token rt1_0 \r\n    where\r\n        rt1_0.token=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:37:59.842119-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.config.JacksonConfigTest]: JacksonConfigTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:59.8546559-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.config.JacksonConfigTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:59.8747397-03:00","@version":"1","message":"Starting JacksonConfigTest using Java 21.0.5 with PID 20584 (started by flavi in C:\\Users\\flavi\\Downloads\\desafio-backend\\desafio-backend)","logger_name":"com.simplesdental.product.config.JacksonConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:37:59.8747397-03:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.simplesdental.product.config.JacksonConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:00.0389186-03:00","@version":"1","message":"Started JacksonConfigTest in 0.182 seconds (process running for 6.982)","logger_name":"com.simplesdental.product.config.JacksonConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:00.2292936-03:00","@version":"1","message":"Falha de validação: field: must not be null","logger_name":"com.simplesdental.product.Exceptions.GlobalExceptionHandler","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:38:00.231291-03:00","@version":"1","message":"Erro inesperado: Unexpected error","logger_name":"com.simplesdental.product.Exceptions.GlobalExceptionHandler","thread_name":"main","level":"ERROR","level_value":40000,"stack_trace":"java.lang.Exception: Unexpected error\r\n\tat com.simplesdental.product.Exceptions.GlobalExceptionHandlerTest.testHandleAllExceptions(GlobalExceptionHandlerTest.java:78)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\r\n\tat org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)\r\n\tat org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)\r\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)\r\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)\r\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)\r\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)\r\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)\r\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)\r\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)\r\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)\r\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)\r\n\tat org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)\r\n\tat org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)\r\n\tat com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)\r\n\tat com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)\r\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)\r\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)\r\n"}
{"@timestamp":"2025-09-14T18:38:00.2368827-03:00","@version":"1","message":"Falha de autenticação: Invalid credentials","logger_name":"com.simplesdental.product.Exceptions.GlobalExceptionHandler","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:38:00.237883-03:00","@version":"1","message":"Requisição não encontrada: Entity not found","logger_name":"com.simplesdental.product.Exceptions.GlobalExceptionHandler","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:38:00.3247247-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:00.3247247-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:00.3247247-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:00.3784058-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:00.3784058-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:00.3784058-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:00.3905502-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:00.3905502-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:00.3905502-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:00.3997445-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:00.3997445-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:00.4007433-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:00.4062554-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:00.4072554-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:00.4072554-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:00.4420839-03:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:00.4420839-03:00","@version":"1","message":"\r\n    alter table if exists tb_products \r\n       drop constraint if exists fk_products_category","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:38:00.4445928-03:00","@version":"1","message":"\r\n    alter table if exists tb_products_v2 \r\n       drop constraint if exists fk_products_category_v2","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:38:00.4445928-03:00","@version":"1","message":"\r\n    alter table if exists tb_refresh_token \r\n       drop constraint if exists FKo1qldyy4gbjokinhqdllx5ej9","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:38:00.4455932-03:00","@version":"1","message":"\r\n    drop table if exists categories cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:38:00.4465933-03:00","@version":"1","message":"\r\n    drop table if exists tb_products cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:38:00.4475937-03:00","@version":"1","message":"\r\n    drop table if exists tb_products_v2 cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:38:00.4475937-03:00","@version":"1","message":"\r\n    drop table if exists tb_refresh_token cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:38:00.448594-03:00","@version":"1","message":"\r\n    drop table if exists tb_users cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:38:20.2467317-03:00","@version":"1","message":"HV000001: Hibernate Validator 8.0.1.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:20.2678196-03:00","@version":"1","message":"Starting SwaggerConfigTest using Java 21.0.5 with PID 16296 (started by flavi in C:\\Users\\flavi\\Downloads\\desafio-backend\\desafio-backend)","logger_name":"com.simplesdental.product.config.SwaggerConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:20.2688202-03:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.simplesdental.product.config.SwaggerConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:20.4939209-03:00","@version":"1","message":"Started SwaggerConfigTest in 0.756 seconds (process running for 2.705)","logger_name":"com.simplesdental.product.config.SwaggerConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:20.7793273-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:20.7793273-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:20.7818375-03:00","@version":"1","message":"Completed initialization in 1 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:21.0070654-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:21.0070654-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:21.0070654-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:21.02058-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:21.02058-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:21.02058-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:21.0306682-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:21.0306682-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:21.0306682-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:21.0446095-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:21.0446095-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:21.0446095-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:21.4205392-03:00","@version":"1","message":"Tentativa de login para o email: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:21.4265464-03:00","@version":"1","message":"Refresh token criado para o usuário: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:21.4265464-03:00","@version":"1","message":"Login bem-sucedido para o usuário: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:21.4305444-03:00","@version":"1","message":"Tentativa de login para o email: notfound@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:21.4305444-03:00","@version":"1","message":"Usuário não encontrado: notfound@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:38:21.4670839-03:00","@version":"1","message":"Refresh token criado para o usuário: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:21.4831126-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.repository.ProductV2RepositoryTest]: ProductV2RepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:21.540721-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.repository.ProductV2RepositoryTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:21.5757107-03:00","@version":"1","message":"Starting ProductV2RepositoryTest using Java 21.0.5 with PID 16296 (started by flavi in C:\\Users\\flavi\\Downloads\\desafio-backend\\desafio-backend)","logger_name":"com.simplesdental.product.repository.ProductV2RepositoryTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:21.5757107-03:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.simplesdental.product.repository.ProductV2RepositoryTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:21.7769166-03:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:21.814192-03:00","@version":"1","message":"Finished Spring Data repository scanning in 32 ms. Found 5 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:21.8537952-03:00","@version":"1","message":"Replacing 'dataSource' DataSource bean with embedded version","logger_name":"org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration$EmbeddedDataSourceBeanFactoryPostProcessor","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:21.9173786-03:00","@version":"1","message":"Starting embedded database: url='jdbc:h2:mem:a964f3f8-818d-4b05-a53d-398b49225ddf;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'","logger_name":"org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:22.1352607-03:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:22.1868179-03:00","@version":"1","message":"HHH000412: Hibernate ORM core version 6.4.4.Final","logger_name":"org.hibernate.Version","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:22.2143455-03:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:22.308874-03:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:22.3439371-03:00","@version":"1","message":"HHH000511: The 2.2.0 version for [org.hibernate.dialect.PostgreSQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 12.0.0. Check the community dialects project for available legacy versions.","logger_name":"org.hibernate.dialect.Dialect","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:38:22.3479383-03:00","@version":"1","message":"HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)","logger_name":"org.hibernate.orm.deprecation","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:38:22.9688042-03:00","@version":"1","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:22.9808321-03:00","@version":"1","message":"\r\n    alter table if exists tb_products \r\n       drop constraint if exists fk_products_category","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:38:22.9828377-03:00","@version":"1","message":"\r\n    alter table if exists tb_products_v2 \r\n       drop constraint if exists fk_products_category_v2","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:38:22.9828377-03:00","@version":"1","message":"\r\n    alter table if exists tb_refresh_token \r\n       drop constraint if exists FKo1qldyy4gbjokinhqdllx5ej9","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:38:22.9828377-03:00","@version":"1","message":"\r\n    drop table if exists categories cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:38:22.9838349-03:00","@version":"1","message":"\r\n    drop table if exists tb_products cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:38:22.9838349-03:00","@version":"1","message":"\r\n    drop table if exists tb_products_v2 cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:38:22.9838349-03:00","@version":"1","message":"\r\n    drop table if exists tb_refresh_token cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:38:22.9838349-03:00","@version":"1","message":"\r\n    drop table if exists tb_users cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:38:22.9878374-03:00","@version":"1","message":"\r\n    create table categories (\r\n        id bigserial not null,\r\n        name varchar(100) not null,\r\n        description varchar(255),\r\n        primary key (id)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:38:22.9943433-03:00","@version":"1","message":"\r\n    create table tb_products (\r\n        price numeric(19,2) not null,\r\n        status boolean not null,\r\n        category_id bigint not null,\r\n        id bigserial not null,\r\n        code varchar(50),\r\n        name varchar(100) not null,\r\n        description varchar(255),\r\n        primary key (id),\r\n        constraint uk_product_code unique (code),\r\n        check (price > 0)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:38:23.0024008-03:00","@version":"1","message":"\r\n    create table tb_products_v2 (\r\n        code integer,\r\n        price numeric(19,2) not null,\r\n        status boolean not null,\r\n        category_id bigint not null,\r\n        id bigserial not null,\r\n        name varchar(100) not null,\r\n        description varchar(255),\r\n        primary key (id),\r\n        constraint uk_product_v2_code unique (code),\r\n        check (price > 0)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:38:23.0034019-03:00","@version":"1","message":"\r\n    create table tb_refresh_token (\r\n        expiry_date timestamp(6) not null,\r\n        id bigserial not null,\r\n        user_id bigint not null,\r\n        token varchar(255) not null unique,\r\n        primary key (id)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:38:23.0044004-03:00","@version":"1","message":"\r\n    create table tb_users (\r\n        id bigserial not null,\r\n        email varchar(255) not null,\r\n        name varchar(255) not null,\r\n        password varchar(255) not null,\r\n        role varchar(255) not null check (role in ('ADMIN','USER')),\r\n        primary key (id),\r\n        constraint uk_user_email unique (email)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:38:23.0064044-03:00","@version":"1","message":"\r\n    create index idx_product_code \r\n       on tb_products (code)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:38:23.0064044-03:00","@version":"1","message":"\r\n    create index idx_product_v2_code \r\n       on tb_products_v2 (code)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:38:23.0074017-03:00","@version":"1","message":"\r\n    create index idx_refresh_token_token_value \r\n       on tb_refresh_token (token)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:38:23.0074017-03:00","@version":"1","message":"\r\n    create index idx_user_email \r\n       on tb_users (email)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:38:23.0084043-03:00","@version":"1","message":"\r\n    alter table if exists tb_products \r\n       add constraint fk_products_category \r\n       foreign key (category_id) \r\n       references categories","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:38:23.0109157-03:00","@version":"1","message":"\r\n    alter table if exists tb_products_v2 \r\n       add constraint fk_products_category_v2 \r\n       foreign key (category_id) \r\n       references categories","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:38:23.0109157-03:00","@version":"1","message":"\r\n    alter table if exists tb_refresh_token \r\n       add constraint FKo1qldyy4gbjokinhqdllx5ej9 \r\n       foreign key (user_id) \r\n       references tb_users","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:38:23.0159167-03:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:23.400512-03:00","@version":"1","message":"Started ProductV2RepositoryTest in 1.857 seconds (process running for 5.611)","logger_name":"com.simplesdental.product.repository.ProductV2RepositoryTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:23.4488226-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:38:23.4703906-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products_v2\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:38:23.4824202-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:38:23.483418-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products_v2\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:38:23.5014436-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:38:23.5024446-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products_v2\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:38:23.5455893-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:23.5455893-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:23.5455893-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:23.5852477-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:23.5852477-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:23.5852477-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:23.6082714-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:23.6082714-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:23.6082714-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:23.6202904-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:23.6202904-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:23.6202904-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:23.6283031-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:23.6293057-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:23.6293057-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:23.6433311-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.repository.ProductRepositoryTest]: ProductRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:23.6503333-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.repository.ProductRepositoryTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:23.6544141-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:38:23.6564137-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:38:23.661435-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:38:23.6624418-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:38:23.66644-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:38:23.6674386-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:38:23.7153933-03:00","@version":"1","message":"Buscando produtos - página: 0, tamanho: 10","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:23.7153933-03:00","@version":"1","message":"Foram encontrados 1 produtos","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:23.7173938-03:00","@version":"1","message":"Salvando novo produto: Escova de Dentes","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:23.7173938-03:00","@version":"1","message":"Produto salvo com sucesso com id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:23.7183925-03:00","@version":"1","message":"Buscando produto pelo id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:23.7219116-03:00","@version":"1","message":"Buscando produto pelo id: 2","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:23.7219116-03:00","@version":"1","message":"Produto não encontrado com id: 2","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"ERROR","level_value":40000}
{"@timestamp":"2025-09-14T18:38:23.7239112-03:00","@version":"1","message":"Atualizando produto id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:23.7239112-03:00","@version":"1","message":"Buscando produto pelo id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:23.7239112-03:00","@version":"1","message":"Produto atualizado com sucesso id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:23.7249114-03:00","@version":"1","message":"Deletando produto id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:23.7249114-03:00","@version":"1","message":"Buscando produto pelo id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:23.7249114-03:00","@version":"1","message":"Produto deletado com sucesso id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:24.1404204-03:00","@version":"1","message":"Buscando categorias - página: 0, tamanho: 10","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:24.1404204-03:00","@version":"1","message":"Foram encontradas 1 categorias","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:24.1418196-03:00","@version":"1","message":"Salvando nova categoria: Higiene Bucal","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:24.1418196-03:00","@version":"1","message":"Categoria salva com sucesso com id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:24.1428193-03:00","@version":"1","message":"Buscando categoria pelo id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:24.1438195-03:00","@version":"1","message":"Atualizando categoria id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:24.1448211-03:00","@version":"1","message":"Categoria atualizada com sucesso: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:24.1468192-03:00","@version":"1","message":"Atualizando categoria id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:24.1468192-03:00","@version":"1","message":"Falha ao atualizar. Categoria não encontrada com id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"ERROR","level_value":40000}
{"@timestamp":"2025-09-14T18:38:24.1488202-03:00","@version":"1","message":"Deletando categoria id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:24.1488202-03:00","@version":"1","message":"Buscando categoria pelo id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:24.1488202-03:00","@version":"1","message":"Categoria deletada com sucesso id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:24.1513318-03:00","@version":"1","message":"Buscando categoria pelo id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:24.1513318-03:00","@version":"1","message":"Categoria não encontrada com id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"ERROR","level_value":40000}
{"@timestamp":"2025-09-14T18:38:24.1802591-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:24.1807664-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:24.1807664-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:24.1912826-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:24.1912826-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:24.1912826-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:24.2043062-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:24.2053051-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:24.2053051-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:24.2153256-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:24.2153256-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:24.2153256-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:24.221423-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:24.221423-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:24.221423-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:24.2274256-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.repository.UserRepositoryTest]: UserRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:24.2334491-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.repository.UserRepositoryTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:24.3217683-03:00","@version":"1","message":"\r\n    select\r\n        u1_0.id,\r\n        u1_0.email,\r\n        u1_0.name,\r\n        u1_0.password,\r\n        u1_0.role \r\n    from\r\n        tb_users u1_0 \r\n    where\r\n        u1_0.email=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:38:24.3302754-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_users\r\n        (email, name, password, role) \r\n    values\r\n        (?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:38:24.3362813-03:00","@version":"1","message":"\r\n    select\r\n        u1_0.id,\r\n        u1_0.email,\r\n        u1_0.name,\r\n        u1_0.password,\r\n        u1_0.role \r\n    from\r\n        tb_users u1_0 \r\n    where\r\n        u1_0.email=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:38:24.3417918-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.repository.CategoryRepositoryTest]: CategoryRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:24.3477915-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.repository.CategoryRepositoryTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:24.351301-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:38:24.3584124-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:38:24.362457-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:38:24.364456-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:38:24.3704569-03:00","@version":"1","message":"\r\n    select\r\n        c1_0.id,\r\n        c1_0.description,\r\n        c1_0.name \r\n    from\r\n        categories c1_0","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:38:24.3828522-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.repository.RefreshTokenRepositoryTest]: RefreshTokenRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:24.3888499-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.repository.RefreshTokenRepositoryTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:24.393366-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_users\r\n        (email, name, password, role) \r\n    values\r\n        (?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:38:24.3943657-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_refresh_token\r\n        (expiry_date, token, user_id) \r\n    values\r\n        (?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:38:24.4034272-03:00","@version":"1","message":"\r\n    select\r\n        rt1_0.id,\r\n        rt1_0.expiry_date,\r\n        rt1_0.token,\r\n        rt1_0.user_id \r\n    from\r\n        tb_refresh_token rt1_0 \r\n    where\r\n        rt1_0.token=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:38:24.4104234-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_users\r\n        (email, name, password, role) \r\n    values\r\n        (?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:38:24.4116143-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_refresh_token\r\n        (expiry_date, token, user_id) \r\n    values\r\n        (?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:38:24.4136141-03:00","@version":"1","message":"\r\n    select\r\n        rt1_0.id,\r\n        rt1_0.expiry_date,\r\n        rt1_0.token,\r\n        rt1_0.user_id \r\n    from\r\n        tb_refresh_token rt1_0 \r\n    where\r\n        rt1_0.token=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:38:24.418614-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.config.JacksonConfigTest]: JacksonConfigTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:24.4301375-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.config.JacksonConfigTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:24.4524945-03:00","@version":"1","message":"Starting JacksonConfigTest using Java 21.0.5 with PID 16296 (started by flavi in C:\\Users\\flavi\\Downloads\\desafio-backend\\desafio-backend)","logger_name":"com.simplesdental.product.config.JacksonConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:24.4524945-03:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.simplesdental.product.config.JacksonConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:24.6281741-03:00","@version":"1","message":"Started JacksonConfigTest in 0.195 seconds (process running for 6.838)","logger_name":"com.simplesdental.product.config.JacksonConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:24.8123562-03:00","@version":"1","message":"Falha de validação: field: must not be null","logger_name":"com.simplesdental.product.Exceptions.GlobalExceptionHandler","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:38:24.8143567-03:00","@version":"1","message":"Erro inesperado: Unexpected error","logger_name":"com.simplesdental.product.Exceptions.GlobalExceptionHandler","thread_name":"main","level":"ERROR","level_value":40000,"stack_trace":"java.lang.Exception: Unexpected error\r\n\tat com.simplesdental.product.Exceptions.GlobalExceptionHandlerTest.testHandleAllExceptions(GlobalExceptionHandlerTest.java:78)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\r\n\tat org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)\r\n\tat org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)\r\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)\r\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)\r\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)\r\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)\r\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)\r\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)\r\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)\r\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)\r\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)\r\n\tat org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)\r\n\tat org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)\r\n\tat com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)\r\n\tat com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)\r\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)\r\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)\r\n"}
{"@timestamp":"2025-09-14T18:38:24.8193581-03:00","@version":"1","message":"Falha de autenticação: Invalid credentials","logger_name":"com.simplesdental.product.Exceptions.GlobalExceptionHandler","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:38:24.8193581-03:00","@version":"1","message":"Requisição não encontrada: Entity not found","logger_name":"com.simplesdental.product.Exceptions.GlobalExceptionHandler","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:38:24.902458-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:24.902458-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:24.9034584-03:00","@version":"1","message":"Completed initialization in 1 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:24.9561531-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:24.9561531-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:24.957153-03:00","@version":"1","message":"Completed initialization in 1 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:24.9691919-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:24.9691919-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:24.9691919-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:24.9787016-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:24.9787016-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:24.9787016-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:24.9872132-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:24.9872132-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:24.9872132-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:25.0171434-03:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:38:25.0181421-03:00","@version":"1","message":"\r\n    alter table if exists tb_products \r\n       drop constraint if exists fk_products_category","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:38:25.019142-03:00","@version":"1","message":"\r\n    alter table if exists tb_products_v2 \r\n       drop constraint if exists fk_products_category_v2","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:38:25.0201417-03:00","@version":"1","message":"\r\n    alter table if exists tb_refresh_token \r\n       drop constraint if exists FKo1qldyy4gbjokinhqdllx5ej9","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:38:25.0201417-03:00","@version":"1","message":"\r\n    drop table if exists categories cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:38:25.0222006-03:00","@version":"1","message":"\r\n    drop table if exists tb_products cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:38:25.0232003-03:00","@version":"1","message":"\r\n    drop table if exists tb_products_v2 cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:38:25.0232003-03:00","@version":"1","message":"\r\n    drop table if exists tb_refresh_token cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:38:25.0241975-03:00","@version":"1","message":"\r\n    drop table if exists tb_users cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:39:47.7703929-03:00","@version":"1","message":"HV000001: Hibernate Validator 8.0.1.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:47.8391936-03:00","@version":"1","message":"Starting SwaggerConfigTest using Java 21.0.5 with PID 31740 (started by flavi in C:\\Users\\flavi\\Downloads\\desafio-backend\\desafio-backend)","logger_name":"com.simplesdental.product.config.SwaggerConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:47.8406512-03:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.simplesdental.product.config.SwaggerConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:48.2840845-03:00","@version":"1","message":"Started SwaggerConfigTest in 1.735 seconds (process running for 5.858)","logger_name":"com.simplesdental.product.config.SwaggerConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:48.7790352-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:48.7801876-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:48.7811883-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:49.150353-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:49.150353-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:49.150353-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:49.1664164-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:49.1664164-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:49.1674165-03:00","@version":"1","message":"Completed initialization in 1 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:49.181439-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:49.181439-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:49.181439-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:49.1981584-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:49.1991571-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:49.1991571-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:49.6432661-03:00","@version":"1","message":"Tentativa de login para o email: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:49.6503307-03:00","@version":"1","message":"Refresh token criado para o usuário: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:49.6503307-03:00","@version":"1","message":"Login bem-sucedido para o usuário: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:49.6543366-03:00","@version":"1","message":"Tentativa de login para o email: notfound@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:49.6543366-03:00","@version":"1","message":"Usuário não encontrado: notfound@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:39:49.7010651-03:00","@version":"1","message":"Refresh token criado para o usuário: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:49.7171715-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.repository.ProductV2RepositoryTest]: ProductV2RepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:49.7719869-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.repository.ProductV2RepositoryTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:49.8091474-03:00","@version":"1","message":"Starting ProductV2RepositoryTest using Java 21.0.5 with PID 31740 (started by flavi in C:\\Users\\flavi\\Downloads\\desafio-backend\\desafio-backend)","logger_name":"com.simplesdental.product.repository.ProductV2RepositoryTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:49.8091474-03:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.simplesdental.product.repository.ProductV2RepositoryTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:50.0792473-03:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:50.1270489-03:00","@version":"1","message":"Finished Spring Data repository scanning in 39 ms. Found 5 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:50.1815458-03:00","@version":"1","message":"Replacing 'dataSource' DataSource bean with embedded version","logger_name":"org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration$EmbeddedDataSourceBeanFactoryPostProcessor","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:50.2690637-03:00","@version":"1","message":"Starting embedded database: url='jdbc:h2:mem:8bbd68c4-f731-49e3-9046-f5c8df5fa05e;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'","logger_name":"org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:50.7857917-03:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:50.8588625-03:00","@version":"1","message":"HHH000412: Hibernate ORM core version 6.4.4.Final","logger_name":"org.hibernate.Version","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:50.9008011-03:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:51.0408541-03:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:51.098911-03:00","@version":"1","message":"HHH000511: The 2.2.0 version for [org.hibernate.dialect.PostgreSQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 12.0.0. Check the community dialects project for available legacy versions.","logger_name":"org.hibernate.dialect.Dialect","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:39:51.1049417-03:00","@version":"1","message":"HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)","logger_name":"org.hibernate.orm.deprecation","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:39:52.200663-03:00","@version":"1","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:52.2212193-03:00","@version":"1","message":"\r\n    alter table if exists tb_products \r\n       drop constraint if exists fk_products_category","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:39:52.228729-03:00","@version":"1","message":"\r\n    alter table if exists tb_products_v2 \r\n       drop constraint if exists fk_products_category_v2","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:39:52.228729-03:00","@version":"1","message":"\r\n    alter table if exists tb_refresh_token \r\n       drop constraint if exists FKo1qldyy4gbjokinhqdllx5ej9","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:39:52.228729-03:00","@version":"1","message":"\r\n    drop table if exists categories cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:39:52.2297338-03:00","@version":"1","message":"\r\n    drop table if exists tb_products cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:39:52.2297338-03:00","@version":"1","message":"\r\n    drop table if exists tb_products_v2 cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:39:52.2297338-03:00","@version":"1","message":"\r\n    drop table if exists tb_refresh_token cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:39:52.2307347-03:00","@version":"1","message":"\r\n    drop table if exists tb_users cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:39:52.2442395-03:00","@version":"1","message":"\r\n    create table categories (\r\n        id bigserial not null,\r\n        name varchar(100) not null,\r\n        description varchar(255),\r\n        primary key (id)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:39:52.2557486-03:00","@version":"1","message":"\r\n    create table tb_products (\r\n        price numeric(19,2) not null,\r\n        status boolean not null,\r\n        category_id bigint not null,\r\n        id bigserial not null,\r\n        code varchar(50),\r\n        name varchar(100) not null,\r\n        description varchar(255),\r\n        primary key (id),\r\n        constraint uk_product_code unique (code),\r\n        check (price > 0)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:39:52.2727651-03:00","@version":"1","message":"\r\n    create table tb_products_v2 (\r\n        code integer,\r\n        price numeric(19,2) not null,\r\n        status boolean not null,\r\n        category_id bigint not null,\r\n        id bigserial not null,\r\n        name varchar(100) not null,\r\n        description varchar(255),\r\n        primary key (id),\r\n        constraint uk_product_v2_code unique (code),\r\n        check (price > 0)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:39:52.2757659-03:00","@version":"1","message":"\r\n    create table tb_refresh_token (\r\n        expiry_date timestamp(6) not null,\r\n        id bigserial not null,\r\n        user_id bigint not null,\r\n        token varchar(255) not null unique,\r\n        primary key (id)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:39:52.2777645-03:00","@version":"1","message":"\r\n    create table tb_users (\r\n        id bigserial not null,\r\n        email varchar(255) not null,\r\n        name varchar(255) not null,\r\n        password varchar(255) not null,\r\n        role varchar(255) not null check (role in ('ADMIN','USER')),\r\n        primary key (id),\r\n        constraint uk_user_email unique (email)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:39:52.2809684-03:00","@version":"1","message":"\r\n    create index idx_product_code \r\n       on tb_products (code)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:39:52.2809684-03:00","@version":"1","message":"\r\n    create index idx_product_v2_code \r\n       on tb_products_v2 (code)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:39:52.2819695-03:00","@version":"1","message":"\r\n    create index idx_refresh_token_token_value \r\n       on tb_refresh_token (token)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:39:52.2829681-03:00","@version":"1","message":"\r\n    create index idx_user_email \r\n       on tb_users (email)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:39:52.2829681-03:00","@version":"1","message":"\r\n    alter table if exists tb_products \r\n       add constraint fk_products_category \r\n       foreign key (category_id) \r\n       references categories","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:39:52.2869677-03:00","@version":"1","message":"\r\n    alter table if exists tb_products_v2 \r\n       add constraint fk_products_category_v2 \r\n       foreign key (category_id) \r\n       references categories","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:39:52.2879675-03:00","@version":"1","message":"\r\n    alter table if exists tb_refresh_token \r\n       add constraint FKo1qldyy4gbjokinhqdllx5ej9 \r\n       foreign key (user_id) \r\n       references tb_users","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:39:52.2946432-03:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:52.7199256-03:00","@version":"1","message":"Started ProductV2RepositoryTest in 2.945 seconds (process running for 10.293)","logger_name":"com.simplesdental.product.repository.ProductV2RepositoryTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:52.7669576-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:39:52.8065004-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products_v2\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:39:52.8146348-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:39:52.8166338-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products_v2\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:39:52.8356486-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:39:52.8376486-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products_v2\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:39:52.8839096-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:52.8839096-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:52.8839096-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:52.9327178-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:52.9327178-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:52.9327178-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:52.9569109-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:52.9569109-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:52.9569109-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:52.9687163-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:52.9687163-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:52.9687163-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:52.9767211-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:52.9767211-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:52.9767211-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:52.9924348-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.repository.ProductRepositoryTest]: ProductRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:52.9989467-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.repository.ProductRepositoryTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:53.003458-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:39:53.0054575-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:39:53.0105639-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:39:53.0125628-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:39:53.0185677-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:39:53.0210582-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:39:53.0836784-03:00","@version":"1","message":"Buscando produtos - página: 0, tamanho: 10","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:53.0836784-03:00","@version":"1","message":"Foram encontrados 1 produtos","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:53.0856804-03:00","@version":"1","message":"Salvando novo produto: Escova de Dentes","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:53.0856804-03:00","@version":"1","message":"Produto salvo com sucesso com id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:53.0876806-03:00","@version":"1","message":"Buscando produto pelo id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:53.0899233-03:00","@version":"1","message":"Buscando produto pelo id: 2","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:53.0899233-03:00","@version":"1","message":"Produto não encontrado com id: 2","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"ERROR","level_value":40000}
{"@timestamp":"2025-09-14T18:39:53.0919286-03:00","@version":"1","message":"Atualizando produto id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:53.0919286-03:00","@version":"1","message":"Buscando produto pelo id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:53.0919286-03:00","@version":"1","message":"Produto atualizado com sucesso id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:53.0929273-03:00","@version":"1","message":"Deletando produto id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:53.0929273-03:00","@version":"1","message":"Buscando produto pelo id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:53.0929273-03:00","@version":"1","message":"Produto deletado com sucesso id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:53.5627574-03:00","@version":"1","message":"Buscando categorias - página: 0, tamanho: 10","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:53.5637578-03:00","@version":"1","message":"Foram encontradas 1 categorias","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:53.5647583-03:00","@version":"1","message":"Salvando nova categoria: Higiene Bucal","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:53.5647583-03:00","@version":"1","message":"Categoria salva com sucesso com id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:53.5667617-03:00","@version":"1","message":"Buscando categoria pelo id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:53.5677585-03:00","@version":"1","message":"Atualizando categoria id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:53.5687582-03:00","@version":"1","message":"Categoria atualizada com sucesso: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:53.5708145-03:00","@version":"1","message":"Atualizando categoria id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:53.5708145-03:00","@version":"1","message":"Falha ao atualizar. Categoria não encontrada com id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"ERROR","level_value":40000}
{"@timestamp":"2025-09-14T18:39:53.573815-03:00","@version":"1","message":"Deletando categoria id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:53.574814-03:00","@version":"1","message":"Buscando categoria pelo id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:53.574814-03:00","@version":"1","message":"Categoria deletada com sucesso id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:53.5758165-03:00","@version":"1","message":"Buscando categoria pelo id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:53.5758165-03:00","@version":"1","message":"Categoria não encontrada com id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"ERROR","level_value":40000}
{"@timestamp":"2025-09-14T18:39:53.6078744-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:53.6078744-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:53.608871-03:00","@version":"1","message":"Completed initialization in 1 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:53.6214017-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:53.6214017-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:53.6214017-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:53.6364757-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:53.6364757-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:53.6364757-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:53.6485216-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:53.6485216-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:53.6485216-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:53.6548796-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:53.6548796-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:53.6558797-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:53.6613894-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.repository.UserRepositoryTest]: UserRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:53.6673894-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.repository.UserRepositoryTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:53.8216929-03:00","@version":"1","message":"\r\n    select\r\n        u1_0.id,\r\n        u1_0.email,\r\n        u1_0.name,\r\n        u1_0.password,\r\n        u1_0.role \r\n    from\r\n        tb_users u1_0 \r\n    where\r\n        u1_0.email=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:39:53.8302043-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_users\r\n        (email, name, password, role) \r\n    values\r\n        (?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:39:53.8387157-03:00","@version":"1","message":"\r\n    select\r\n        u1_0.id,\r\n        u1_0.email,\r\n        u1_0.name,\r\n        u1_0.password,\r\n        u1_0.role \r\n    from\r\n        tb_users u1_0 \r\n    where\r\n        u1_0.email=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:39:53.8447267-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.repository.CategoryRepositoryTest]: CategoryRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:53.8502388-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.repository.CategoryRepositoryTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:53.8542449-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:39:53.8637547-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:39:53.8687538-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:39:53.8698398-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:39:53.8768408-03:00","@version":"1","message":"\r\n    select\r\n        c1_0.id,\r\n        c1_0.description,\r\n        c1_0.name \r\n    from\r\n        categories c1_0","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:39:53.892206-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.repository.RefreshTokenRepositoryTest]: RefreshTokenRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:53.8987176-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.repository.RefreshTokenRepositoryTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:53.902235-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_users\r\n        (email, name, password, role) \r\n    values\r\n        (?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:39:53.9042356-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_refresh_token\r\n        (expiry_date, token, user_id) \r\n    values\r\n        (?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:39:53.9147437-03:00","@version":"1","message":"\r\n    select\r\n        rt1_0.id,\r\n        rt1_0.expiry_date,\r\n        rt1_0.token,\r\n        rt1_0.user_id \r\n    from\r\n        tb_refresh_token rt1_0 \r\n    where\r\n        rt1_0.token=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:39:53.9200222-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_users\r\n        (email, name, password, role) \r\n    values\r\n        (?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:39:53.9220212-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_refresh_token\r\n        (expiry_date, token, user_id) \r\n    values\r\n        (?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:39:53.9240215-03:00","@version":"1","message":"\r\n    select\r\n        rt1_0.id,\r\n        rt1_0.expiry_date,\r\n        rt1_0.token,\r\n        rt1_0.user_id \r\n    from\r\n        tb_refresh_token rt1_0 \r\n    where\r\n        rt1_0.token=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:39:53.9285274-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.config.JacksonConfigTest]: JacksonConfigTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:53.9415674-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.config.JacksonConfigTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:53.9617153-03:00","@version":"1","message":"Starting JacksonConfigTest using Java 21.0.5 with PID 31740 (started by flavi in C:\\Users\\flavi\\Downloads\\desafio-backend\\desafio-backend)","logger_name":"com.simplesdental.product.config.JacksonConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:53.9617153-03:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.simplesdental.product.config.JacksonConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:54.1293645-03:00","@version":"1","message":"Started JacksonConfigTest in 0.186 seconds (process running for 11.703)","logger_name":"com.simplesdental.product.config.JacksonConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:54.3210763-03:00","@version":"1","message":"Falha de validação: field: must not be null","logger_name":"com.simplesdental.product.Exceptions.GlobalExceptionHandler","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:39:54.3230753-03:00","@version":"1","message":"Erro inesperado: Unexpected error","logger_name":"com.simplesdental.product.Exceptions.GlobalExceptionHandler","thread_name":"main","level":"ERROR","level_value":40000,"stack_trace":"java.lang.Exception: Unexpected error\r\n\tat com.simplesdental.product.Exceptions.GlobalExceptionHandlerTest.testHandleAllExceptions(GlobalExceptionHandlerTest.java:78)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\r\n\tat org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)\r\n\tat org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)\r\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)\r\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)\r\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)\r\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)\r\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)\r\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)\r\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)\r\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)\r\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)\r\n\tat org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)\r\n\tat org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)\r\n\tat com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)\r\n\tat com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)\r\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)\r\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)\r\n"}
{"@timestamp":"2025-09-14T18:39:54.329584-03:00","@version":"1","message":"Falha de autenticação: Invalid credentials","logger_name":"com.simplesdental.product.Exceptions.GlobalExceptionHandler","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:39:54.3305878-03:00","@version":"1","message":"Requisição não encontrada: Entity not found","logger_name":"com.simplesdental.product.Exceptions.GlobalExceptionHandler","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:39:54.4183195-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:54.4183195-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:54.4193243-03:00","@version":"1","message":"Completed initialization in 1 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:54.4795674-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:54.4795674-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:54.4795674-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:54.494701-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:54.494701-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:54.4962067-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:54.5067267-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:54.5067267-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:54.5077272-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:54.5138708-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:54.5148709-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:54.5148709-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:54.5693184-03:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:39:54.5703198-03:00","@version":"1","message":"\r\n    alter table if exists tb_products \r\n       drop constraint if exists fk_products_category","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:39:54.5723176-03:00","@version":"1","message":"\r\n    alter table if exists tb_products_v2 \r\n       drop constraint if exists fk_products_category_v2","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:39:54.5723176-03:00","@version":"1","message":"\r\n    alter table if exists tb_refresh_token \r\n       drop constraint if exists FKo1qldyy4gbjokinhqdllx5ej9","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:39:54.5733189-03:00","@version":"1","message":"\r\n    drop table if exists categories cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:39:54.5753184-03:00","@version":"1","message":"\r\n    drop table if exists tb_products cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:39:54.5763186-03:00","@version":"1","message":"\r\n    drop table if exists tb_products_v2 cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:39:54.5773206-03:00","@version":"1","message":"\r\n    drop table if exists tb_refresh_token cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:39:54.5773206-03:00","@version":"1","message":"\r\n    drop table if exists tb_users cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:40:34.5842796-03:00","@version":"1","message":"HV000001: Hibernate Validator 8.0.1.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:34.6523974-03:00","@version":"1","message":"Starting SwaggerConfigTest using Java 21.0.5 with PID 22240 (started by flavi in C:\\Users\\flavi\\Downloads\\desafio-backend\\desafio-backend)","logger_name":"com.simplesdental.product.config.SwaggerConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:34.6533971-03:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.simplesdental.product.config.SwaggerConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:35.1342602-03:00","@version":"1","message":"Started SwaggerConfigTest in 1.837 seconds (process running for 5.835)","logger_name":"com.simplesdental.product.config.SwaggerConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:35.6806024-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:35.6816012-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:35.6831049-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:36.0593217-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:36.0593217-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:36.0593217-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:36.0748937-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:36.0748937-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:36.0748937-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:36.0881609-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:36.0891623-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:36.0891623-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:36.1051912-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:36.1051912-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:36.1051912-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:36.5452002-03:00","@version":"1","message":"Tentativa de login para o email: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:36.5531999-03:00","@version":"1","message":"Refresh token criado para o usuário: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:36.5531999-03:00","@version":"1","message":"Login bem-sucedido para o usuário: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:36.557251-03:00","@version":"1","message":"Tentativa de login para o email: notfound@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:36.557251-03:00","@version":"1","message":"Usuário não encontrado: notfound@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:40:36.601994-03:00","@version":"1","message":"Refresh token criado para o usuário: joao@email.com","logger_name":"com.simplesdental.product.service.UserService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:36.6185418-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.repository.ProductV2RepositoryTest]: ProductV2RepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:36.6827936-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.repository.ProductV2RepositoryTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:36.719025-03:00","@version":"1","message":"Starting ProductV2RepositoryTest using Java 21.0.5 with PID 22240 (started by flavi in C:\\Users\\flavi\\Downloads\\desafio-backend\\desafio-backend)","logger_name":"com.simplesdental.product.repository.ProductV2RepositoryTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:36.719025-03:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.simplesdental.product.repository.ProductV2RepositoryTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:36.9714521-03:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:37.0300953-03:00","@version":"1","message":"Finished Spring Data repository scanning in 49 ms. Found 5 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:37.0850232-03:00","@version":"1","message":"Replacing 'dataSource' DataSource bean with embedded version","logger_name":"org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration$EmbeddedDataSourceBeanFactoryPostProcessor","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:37.1860514-03:00","@version":"1","message":"Starting embedded database: url='jdbc:h2:mem:7be8bc42-40a8-4006-a4e3-dafc8407f68a;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'","logger_name":"org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:37.7130475-03:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:37.8042012-03:00","@version":"1","message":"HHH000412: Hibernate ORM core version 6.4.4.Final","logger_name":"org.hibernate.Version","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:37.8438092-03:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:37.9733096-03:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:38.0360991-03:00","@version":"1","message":"HHH000511: The 2.2.0 version for [org.hibernate.dialect.PostgreSQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 12.0.0. Check the community dialects project for available legacy versions.","logger_name":"org.hibernate.dialect.Dialect","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:40:38.0410996-03:00","@version":"1","message":"HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)","logger_name":"org.hibernate.orm.deprecation","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:40:39.1441738-03:00","@version":"1","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:39.1631986-03:00","@version":"1","message":"\r\n    alter table if exists tb_products \r\n       drop constraint if exists fk_products_category","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:40:39.1692011-03:00","@version":"1","message":"\r\n    alter table if exists tb_products_v2 \r\n       drop constraint if exists fk_products_category_v2","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:40:39.1701996-03:00","@version":"1","message":"\r\n    alter table if exists tb_refresh_token \r\n       drop constraint if exists FKo1qldyy4gbjokinhqdllx5ej9","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:40:39.1701996-03:00","@version":"1","message":"\r\n    drop table if exists categories cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:40:39.1701996-03:00","@version":"1","message":"\r\n    drop table if exists tb_products cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:40:39.1711987-03:00","@version":"1","message":"\r\n    drop table if exists tb_products_v2 cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:40:39.1711987-03:00","@version":"1","message":"\r\n    drop table if exists tb_refresh_token cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:40:39.1711987-03:00","@version":"1","message":"\r\n    drop table if exists tb_users cascade","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:40:39.1777122-03:00","@version":"1","message":"\r\n    create table categories (\r\n        id bigserial not null,\r\n        name varchar(100) not null,\r\n        description varchar(255),\r\n        primary key (id)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:40:39.1900968-03:00","@version":"1","message":"\r\n    create table tb_products (\r\n        price numeric(19,2) not null,\r\n        status boolean not null,\r\n        category_id bigint not null,\r\n        id bigserial not null,\r\n        code varchar(50),\r\n        name varchar(100) not null,\r\n        description varchar(255),\r\n        primary key (id),\r\n        constraint uk_product_code unique (code),\r\n        check (price > 0)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:40:39.2071264-03:00","@version":"1","message":"\r\n    create table tb_products_v2 (\r\n        code integer,\r\n        price numeric(19,2) not null,\r\n        status boolean not null,\r\n        category_id bigint not null,\r\n        id bigserial not null,\r\n        name varchar(100) not null,\r\n        description varchar(255),\r\n        primary key (id),\r\n        constraint uk_product_v2_code unique (code),\r\n        check (price > 0)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:40:39.2101262-03:00","@version":"1","message":"\r\n    create table tb_refresh_token (\r\n        expiry_date timestamp(6) not null,\r\n        id bigserial not null,\r\n        user_id bigint not null,\r\n        token varchar(255) not null unique,\r\n        primary key (id)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:40:39.2111257-03:00","@version":"1","message":"\r\n    create table tb_users (\r\n        id bigserial not null,\r\n        email varchar(255) not null,\r\n        name varchar(255) not null,\r\n        password varchar(255) not null,\r\n        role varchar(255) not null check (role in ('ADMIN','USER')),\r\n        primary key (id),\r\n        constraint uk_user_email unique (email)\r\n    )","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:40:39.2136361-03:00","@version":"1","message":"\r\n    create index idx_product_code \r\n       on tb_products (code)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:40:39.2146376-03:00","@version":"1","message":"\r\n    create index idx_product_v2_code \r\n       on tb_products_v2 (code)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:40:39.2156377-03:00","@version":"1","message":"\r\n    create index idx_refresh_token_token_value \r\n       on tb_refresh_token (token)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:40:39.2156377-03:00","@version":"1","message":"\r\n    create index idx_user_email \r\n       on tb_users (email)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:40:39.2166376-03:00","@version":"1","message":"\r\n    alter table if exists tb_products \r\n       add constraint fk_products_category \r\n       foreign key (category_id) \r\n       references categories","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:40:39.2206362-03:00","@version":"1","message":"\r\n    alter table if exists tb_products_v2 \r\n       add constraint fk_products_category_v2 \r\n       foreign key (category_id) \r\n       references categories","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:40:39.2216367-03:00","@version":"1","message":"\r\n    alter table if exists tb_refresh_token \r\n       add constraint FKo1qldyy4gbjokinhqdllx5ej9 \r\n       foreign key (user_id) \r\n       references tb_users","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:40:39.2276668-03:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:39.6634514-03:00","@version":"1","message":"Started ProductV2RepositoryTest in 2.978 seconds (process running for 10.365)","logger_name":"com.simplesdental.product.repository.ProductV2RepositoryTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:39.7175156-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:40:39.7600726-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products_v2\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:40:39.7685824-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:40:39.7705827-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products_v2\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:40:39.7896203-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:40:39.7916173-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products_v2\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:40:39.8386852-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:39.8386852-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:39.8386852-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:39.8933794-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:39.8943799-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:39.8943799-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:39.917477-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:39.917477-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:39.9184767-03:00","@version":"1","message":"Completed initialization in 1 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:39.9309876-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:39.9324922-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:39.9324922-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:39.9404985-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:39.9404985-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:39.9414981-03:00","@version":"1","message":"Completed initialization in 1 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:39.9565948-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.repository.ProductRepositoryTest]: ProductRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:39.9625947-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.repository.ProductRepositoryTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:39.9676352-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:40:39.9706361-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:40:39.9761531-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:40:39.9781527-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:40:39.9856701-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:40:39.987671-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_products\r\n        (category_id, code, description, name, price, status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:40:40.0453968-03:00","@version":"1","message":"Buscando produtos - página: 0, tamanho: 10","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:40.0453968-03:00","@version":"1","message":"Foram encontrados 1 produtos","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:40.0483942-03:00","@version":"1","message":"Salvando novo produto: Escova de Dentes","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:40.0483942-03:00","@version":"1","message":"Produto salvo com sucesso com id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:40.0503959-03:00","@version":"1","message":"Buscando produto pelo id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:40.052395-03:00","@version":"1","message":"Buscando produto pelo id: 2","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:40.052395-03:00","@version":"1","message":"Produto não encontrado com id: 2","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"ERROR","level_value":40000}
{"@timestamp":"2025-09-14T18:40:40.0534518-03:00","@version":"1","message":"Atualizando produto id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:40.0534518-03:00","@version":"1","message":"Buscando produto pelo id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:40.0544507-03:00","@version":"1","message":"Produto atualizado com sucesso id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:40.055456-03:00","@version":"1","message":"Deletando produto id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:40.055456-03:00","@version":"1","message":"Buscando produto pelo id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:40.055456-03:00","@version":"1","message":"Produto deletado com sucesso id: 1","logger_name":"com.simplesdental.product.service.ProductService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:40.4952485-03:00","@version":"1","message":"Buscando categorias - página: 0, tamanho: 10","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:40.4952485-03:00","@version":"1","message":"Foram encontradas 1 categorias","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:40.496246-03:00","@version":"1","message":"Salvando nova categoria: Higiene Bucal","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:40.4972475-03:00","@version":"1","message":"Categoria salva com sucesso com id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:40.498246-03:00","@version":"1","message":"Buscando categoria pelo id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:40.499245-03:00","@version":"1","message":"Atualizando categoria id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:40.5002462-03:00","@version":"1","message":"Categoria atualizada com sucesso: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:40.5012462-03:00","@version":"1","message":"Atualizando categoria id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:40.5012462-03:00","@version":"1","message":"Falha ao atualizar. Categoria não encontrada com id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"ERROR","level_value":40000}
{"@timestamp":"2025-09-14T18:40:40.5057585-03:00","@version":"1","message":"Deletando categoria id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:40.5067571-03:00","@version":"1","message":"Buscando categoria pelo id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:40.5067571-03:00","@version":"1","message":"Categoria deletada com sucesso id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:40.5077571-03:00","@version":"1","message":"Buscando categoria pelo id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:40.5077571-03:00","@version":"1","message":"Categoria não encontrada com id: 1","logger_name":"com.simplesdental.product.service.CategoryService","thread_name":"main","level":"ERROR","level_value":40000}
{"@timestamp":"2025-09-14T18:40:40.538349-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:40.538349-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:40.538349-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:40.5514556-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:40.5514556-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:40.5514556-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:40.5664836-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:40.5664836-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:40.5664836-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:40.579529-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:40.579529-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:40.579529-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:40.5859909-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:40.5859909-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:40.5869914-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:40.5935039-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.repository.UserRepositoryTest]: UserRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:40.5995097-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.repository.UserRepositoryTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:40.7411848-03:00","@version":"1","message":"\r\n    select\r\n        u1_0.id,\r\n        u1_0.email,\r\n        u1_0.name,\r\n        u1_0.password,\r\n        u1_0.role \r\n    from\r\n        tb_users u1_0 \r\n    where\r\n        u1_0.email=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:40:40.749701-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_users\r\n        (email, name, password, role) \r\n    values\r\n        (?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:40:40.7577249-03:00","@version":"1","message":"\r\n    select\r\n        u1_0.id,\r\n        u1_0.email,\r\n        u1_0.name,\r\n        u1_0.password,\r\n        u1_0.role \r\n    from\r\n        tb_users u1_0 \r\n    where\r\n        u1_0.email=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:40:40.7622316-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.repository.CategoryRepositoryTest]: CategoryRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:40.7682373-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.repository.CategoryRepositoryTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:40.7712369-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:40:40.7813265-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:40:40.7853636-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:40:40.7873627-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        categories\r\n        (description, name) \r\n    values\r\n        (?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:40:40.7913611-03:00","@version":"1","message":"\r\n    select\r\n        c1_0.id,\r\n        c1_0.description,\r\n        c1_0.name \r\n    from\r\n        categories c1_0","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:40:40.806394-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.repository.RefreshTokenRepositoryTest]: RefreshTokenRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:40.8113926-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.repository.RefreshTokenRepositoryTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:40.8149121-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_users\r\n        (email, name, password, role) \r\n    values\r\n        (?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:40:40.8169125-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_refresh_token\r\n        (expiry_date, token, user_id) \r\n    values\r\n        (?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:40:40.8269484-03:00","@version":"1","message":"\r\n    select\r\n        rt1_0.id,\r\n        rt1_0.expiry_date,\r\n        rt1_0.token,\r\n        rt1_0.user_id \r\n    from\r\n        tb_refresh_token rt1_0 \r\n    where\r\n        rt1_0.token=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:40:40.832453-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_users\r\n        (email, name, password, role) \r\n    values\r\n        (?, ?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:40:40.8344595-03:00","@version":"1","message":"\r\n    insert \r\n    into\r\n        tb_refresh_token\r\n        (expiry_date, token, user_id) \r\n    values\r\n        (?, ?, ?)","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:40:40.8364635-03:00","@version":"1","message":"\r\n    select\r\n        rt1_0.id,\r\n        rt1_0.expiry_date,\r\n        rt1_0.token,\r\n        rt1_0.user_id \r\n    from\r\n        tb_refresh_token rt1_0 \r\n    where\r\n        rt1_0.token=?","logger_name":"org.hibernate.SQL","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:40:40.8414647-03:00","@version":"1","message":"Could not detect default configuration classes for test class [com.simplesdental.product.config.JacksonConfigTest]: JacksonConfigTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:40.8524957-03:00","@version":"1","message":"Found @SpringBootConfiguration com.simplesdental.product.ProductApplication for test class com.simplesdental.product.config.JacksonConfigTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:40.874281-03:00","@version":"1","message":"Starting JacksonConfigTest using Java 21.0.5 with PID 22240 (started by flavi in C:\\Users\\flavi\\Downloads\\desafio-backend\\desafio-backend)","logger_name":"com.simplesdental.product.config.JacksonConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:40.874281-03:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.simplesdental.product.config.JacksonConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:41.0292314-03:00","@version":"1","message":"Started JacksonConfigTest in 0.175 seconds (process running for 11.731)","logger_name":"com.simplesdental.product.config.JacksonConfigTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:41.2202394-03:00","@version":"1","message":"Falha de validação: field: must not be null","logger_name":"com.simplesdental.product.Exceptions.GlobalExceptionHandler","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:40:41.2222386-03:00","@version":"1","message":"Erro inesperado: Unexpected error","logger_name":"com.simplesdental.product.Exceptions.GlobalExceptionHandler","thread_name":"main","level":"ERROR","level_value":40000,"stack_trace":"java.lang.Exception: Unexpected error\r\n\tat com.simplesdental.product.Exceptions.GlobalExceptionHandlerTest.testHandleAllExceptions(GlobalExceptionHandlerTest.java:78)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\r\n\tat org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)\r\n\tat org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)\r\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)\r\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)\r\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)\r\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)\r\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)\r\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)\r\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)\r\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)\r\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)\r\n\tat org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)\r\n\tat org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)\r\n\tat com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)\r\n\tat com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)\r\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)\r\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)\r\n"}
{"@timestamp":"2025-09-14T18:40:41.2278307-03:00","@version":"1","message":"Falha de autenticação: Invalid credentials","logger_name":"com.simplesdental.product.Exceptions.GlobalExceptionHandler","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:40:41.2288314-03:00","@version":"1","message":"Requisição não encontrada: Entity not found","logger_name":"com.simplesdental.product.Exceptions.GlobalExceptionHandler","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-09-14T18:40:41.3164065-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:41.3164065-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:41.3164065-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:41.380658-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:41.380658-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:41.380658-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:41.397676-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:41.397676-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:41.397676-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:41.4101893-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:41.4101893-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:41.4101893-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:41.4183348-03:00","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.mock.web.MockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:41.4183348-03:00","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:41.4183348-03:00","@version":"1","message":"Completed initialization in 0 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:41.4484794-03:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2025-09-14T18:40:41.4494792-03:00","@version":"1","message":"\r\n    alter table if exists tb_products \r\n       drop constraint if exists fk_products_category","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:40:41.4504807-03:00","@version":"1","message":"\r\n    alter table if exists tb_products_v2 \r\n       drop constraint if exists fk_products_category_v2","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:40:41.4514775-03:00","@version":"1","message":"\r\n    alter table if exists tb_refresh_token \r\n       drop constraint if exists FKo1qldyy4gbjokinhqdllx5ej9","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:40:41.4514775-03:00","@version":"1","message":"\r\n    drop table if exists categories cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:40:41.4535223-03:00","@version":"1","message":"\r\n    drop table if exists tb_products cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:40:41.4545223-03:00","@version":"1","message":"\r\n    drop table if exists tb_products_v2 cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:40:41.4555235-03:00","@version":"1","message":"\r\n    drop table if exists tb_refresh_token cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-09-14T18:40:41.4555235-03:00","@version":"1","message":"\r\n    drop table if exists tb_users cascade","logger_name":"org.hibernate.SQL","thread_name":"SpringApplicationShutdownHook","level":"DEBUG","level_value":10000}
